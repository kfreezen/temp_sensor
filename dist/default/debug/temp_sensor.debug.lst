

Microchip Technology PIC LITE Macro Assembler V1.20 build 52243 
                                                                                               Tue Jul 30 18:37:56 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	16LF1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0094                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011D                     	;# 
   119  011D                     	;# 
   120  011E                     	;# 
   121  011F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0199                     	;# 
   134  0199                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019A                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019D                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019E                     	;# 
   152  019E                     	;# 
   153  019F                     	;# 
   154  019F                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  020C                     	;# 
   159  020D                     	;# 
   160  020E                     	;# 
   161  0210                     	;# 
   162  0211                     	;# 
   163  0211                     	;# 
   164  0212                     	;# 
   165  0212                     	;# 
   166  0213                     	;# 
   167  0213                     	;# 
   168  0214                     	;# 
   169  0214                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0216                     	;# 
   174  0216                     	;# 
   175  0217                     	;# 
   176  0217                     	;# 
   177  028C                     	;# 
   178  028D                     	;# 
   179  028E                     	;# 
   180  0291                     	;# 
   181  0291                     	;# 
   182  0292                     	;# 
   183  0293                     	;# 
   184  0298                     	;# 
   185  0298                     	;# 
   186  0299                     	;# 
   187  029A                     	;# 
   188  030C                     	;# 
   189  030D                     	;# 
   190  030E                     	;# 
   191  038C                     	;# 
   192  038D                     	;# 
   193  038E                     	;# 
   194  0390                     	;# 
   195  0391                     	;# 
   196  0392                     	;# 
   197  0393                     	;# 
   198  0394                     	;# 
   199  0395                     	;# 
   200  0396                     	;# 
   201  0397                     	;# 
   202  0398                     	;# 
   203  0399                     	;# 
   204  039D                     	;# 
   205  039E                     	;# 
   206  039F                     	;# 
   207  0511                     	;# 
   208  0513                     	;# 
   209  051A                     	;# 
   210  0811                     	;# 
   211  0812                     	;# 
   212  0813                     	;# 
   213  0814                     	;# 
   214  0815                     	;# 
   215  0816                     	;# 
   216  0817                     	;# 
   217  0818                     	;# 
   218  0819                     	;# 
   219  081A                     	;# 
   220  081B                     	;# 
   221  081C                     	;# 
   222  081D                     	;# 
   223  081E                     	;# 
   224  081F                     	;# 
   225  0820                     	;# 
   226  0821                     	;# 
   227  0821                     	;# 
   228  0822                     	;# 
   229  0823                     	;# 
   230  0823                     	;# 
   231  0824                     	;# 
   232  0825                     	;# 
   233  0825                     	;# 
   234  0826                     	;# 
   235  0827                     	;# 
   236  0827                     	;# 
   237  0828                     	;# 
   238  0829                     	;# 
   239  082A                     	;# 
   240  082B                     	;# 
   241  082C                     	;# 
   242  082D                     	;# 
   243  082E                     	;# 
   244  082F                     	;# 
   245  0831                     	;# 
   246  0832                     	;# 
   247  0833                     	;# 
   248  0834                     	;# 
   249  0835                     	;# 
   250  0836                     	;# 
   251  0837                     	;# 
   252  0838                     	;# 
   253  0839                     	;# 
   254  083A                     	;# 
   255  083B                     	;# 
   256  083C                     	;# 
   257  083D                     	;# 
   258  083E                     	;# 
   259  083F                     	;# 
   260  0840                     	;# 
   261  0841                     	;# 
   262  0841                     	;# 
   263  0842                     	;# 
   264  0843                     	;# 
   265  0843                     	;# 
   266  0844                     	;# 
   267  0845                     	;# 
   268  0845                     	;# 
   269  0846                     	;# 
   270  0847                     	;# 
   271  0847                     	;# 
   272  0848                     	;# 
   273  0849                     	;# 
   274  084A                     	;# 
   275  084B                     	;# 
   276  084C                     	;# 
   277  084D                     	;# 
   278  084E                     	;# 
   279  084F                     	;# 
   280  0FE4                     	;# 
   281  0FE5                     	;# 
   282  0FE6                     	;# 
   283  0FE7                     	;# 
   284  0FE8                     	;# 
   285  0FE9                     	;# 
   286  0FEA                     	;# 
   287  0FEB                     	;# 
   288  0FED                     	;# 
   289  0FEE                     	;# 
   290  0FEF                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  008C                     	;# 
   320  008D                     	;# 
   321  008E                     	;# 
   322  0090                     	;# 
   323  0091                     	;# 
   324  0092                     	;# 
   325  0094                     	;# 
   326  0095                     	;# 
   327  0096                     	;# 
   328  0097                     	;# 
   329  0098                     	;# 
   330  0099                     	;# 
   331  009A                     	;# 
   332  009B                     	;# 
   333  009B                     	;# 
   334  009C                     	;# 
   335  009D                     	;# 
   336  009E                     	;# 
   337  009F                     	;# 
   338  010C                     	;# 
   339  010D                     	;# 
   340  010E                     	;# 
   341  0111                     	;# 
   342  0112                     	;# 
   343  0113                     	;# 
   344  0114                     	;# 
   345  0115                     	;# 
   346  0116                     	;# 
   347  0117                     	;# 
   348  0118                     	;# 
   349  0119                     	;# 
   350  011D                     	;# 
   351  011D                     	;# 
   352  011E                     	;# 
   353  011F                     	;# 
   354  018C                     	;# 
   355  018D                     	;# 
   356  0191                     	;# 
   357  0191                     	;# 
   358  0192                     	;# 
   359  0193                     	;# 
   360  0193                     	;# 
   361  0193                     	;# 
   362  0194                     	;# 
   363  0195                     	;# 
   364  0196                     	;# 
   365  0199                     	;# 
   366  0199                     	;# 
   367  0199                     	;# 
   368  019A                     	;# 
   369  019A                     	;# 
   370  019A                     	;# 
   371  019B                     	;# 
   372  019B                     	;# 
   373  019B                     	;# 
   374  019B                     	;# 
   375  019B                     	;# 
   376  019C                     	;# 
   377  019C                     	;# 
   378  019C                     	;# 
   379  019D                     	;# 
   380  019D                     	;# 
   381  019D                     	;# 
   382  019E                     	;# 
   383  019E                     	;# 
   384  019E                     	;# 
   385  019F                     	;# 
   386  019F                     	;# 
   387  019F                     	;# 
   388  019F                     	;# 
   389  019F                     	;# 
   390  020C                     	;# 
   391  020D                     	;# 
   392  020E                     	;# 
   393  0210                     	;# 
   394  0211                     	;# 
   395  0211                     	;# 
   396  0212                     	;# 
   397  0212                     	;# 
   398  0213                     	;# 
   399  0213                     	;# 
   400  0214                     	;# 
   401  0214                     	;# 
   402  0215                     	;# 
   403  0215                     	;# 
   404  0215                     	;# 
   405  0216                     	;# 
   406  0216                     	;# 
   407  0217                     	;# 
   408  0217                     	;# 
   409  028C                     	;# 
   410  028D                     	;# 
   411  028E                     	;# 
   412  0291                     	;# 
   413  0291                     	;# 
   414  0292                     	;# 
   415  0293                     	;# 
   416  0298                     	;# 
   417  0298                     	;# 
   418  0299                     	;# 
   419  029A                     	;# 
   420  030C                     	;# 
   421  030D                     	;# 
   422  030E                     	;# 
   423  038C                     	;# 
   424  038D                     	;# 
   425  038E                     	;# 
   426  0390                     	;# 
   427  0391                     	;# 
   428  0392                     	;# 
   429  0393                     	;# 
   430  0394                     	;# 
   431  0395                     	;# 
   432  0396                     	;# 
   433  0397                     	;# 
   434  0398                     	;# 
   435  0399                     	;# 
   436  039D                     	;# 
   437  039E                     	;# 
   438  039F                     	;# 
   439  0511                     	;# 
   440  0513                     	;# 
   441  051A                     	;# 
   442  0811                     	;# 
   443  0812                     	;# 
   444  0813                     	;# 
   445  0814                     	;# 
   446  0815                     	;# 
   447  0816                     	;# 
   448  0817                     	;# 
   449  0818                     	;# 
   450  0819                     	;# 
   451  081A                     	;# 
   452  081B                     	;# 
   453  081C                     	;# 
   454  081D                     	;# 
   455  081E                     	;# 
   456  081F                     	;# 
   457  0820                     	;# 
   458  0821                     	;# 
   459  0821                     	;# 
   460  0822                     	;# 
   461  0823                     	;# 
   462  0823                     	;# 
   463  0824                     	;# 
   464  0825                     	;# 
   465  0825                     	;# 
   466  0826                     	;# 
   467  0827                     	;# 
   468  0827                     	;# 
   469  0828                     	;# 
   470  0829                     	;# 
   471  082A                     	;# 
   472  082B                     	;# 
   473  082C                     	;# 
   474  082D                     	;# 
   475  082E                     	;# 
   476  082F                     	;# 
   477  0831                     	;# 
   478  0832                     	;# 
   479  0833                     	;# 
   480  0834                     	;# 
   481  0835                     	;# 
   482  0836                     	;# 
   483  0837                     	;# 
   484  0838                     	;# 
   485  0839                     	;# 
   486  083A                     	;# 
   487  083B                     	;# 
   488  083C                     	;# 
   489  083D                     	;# 
   490  083E                     	;# 
   491  083F                     	;# 
   492  0840                     	;# 
   493  0841                     	;# 
   494  0841                     	;# 
   495  0842                     	;# 
   496  0843                     	;# 
   497  0843                     	;# 
   498  0844                     	;# 
   499  0845                     	;# 
   500  0845                     	;# 
   501  0846                     	;# 
   502  0847                     	;# 
   503  0847                     	;# 
   504  0848                     	;# 
   505  0849                     	;# 
   506  084A                     	;# 
   507  084B                     	;# 
   508  084C                     	;# 
   509  084D                     	;# 
   510  084E                     	;# 
   511  084F                     	;# 
   512  0FE4                     	;# 
   513  0FE5                     	;# 
   514  0FE6                     	;# 
   515  0FE7                     	;# 
   516  0FE8                     	;# 
   517  0FE9                     	;# 
   518  0FEA                     	;# 
   519  0FEB                     	;# 
   520  0FED                     	;# 
   521  0FEE                     	;# 
   522  0FEF                     	;# 
   523  0000                     	;# 
   524  0001                     	;# 
   525  0002                     	;# 
   526  0003                     	;# 
   527  0004                     	;# 
   528  0005                     	;# 
   529  0006                     	;# 
   530  0007                     	;# 
   531  0008                     	;# 
   532  0009                     	;# 
   533  000A                     	;# 
   534  000B                     	;# 
   535  000C                     	;# 
   536  000D                     	;# 
   537  000E                     	;# 
   538  0010                     	;# 
   539  0011                     	;# 
   540  0012                     	;# 
   541  0014                     	;# 
   542  0015                     	;# 
   543  0016                     	;# 
   544  0016                     	;# 
   545  0017                     	;# 
   546  0018                     	;# 
   547  0019                     	;# 
   548  001A                     	;# 
   549  001B                     	;# 
   550  001C                     	;# 
   551  008C                     	;# 
   552  008D                     	;# 
   553  008E                     	;# 
   554  0090                     	;# 
   555  0091                     	;# 
   556  0092                     	;# 
   557  0094                     	;# 
   558  0095                     	;# 
   559  0096                     	;# 
   560  0097                     	;# 
   561  0098                     	;# 
   562  0099                     	;# 
   563  009A                     	;# 
   564  009B                     	;# 
   565  009B                     	;# 
   566  009C                     	;# 
   567  009D                     	;# 
   568  009E                     	;# 
   569  009F                     	;# 
   570  010C                     	;# 
   571  010D                     	;# 
   572  010E                     	;# 
   573  0111                     	;# 
   574  0112                     	;# 
   575  0113                     	;# 
   576  0114                     	;# 
   577  0115                     	;# 
   578  0116                     	;# 
   579  0117                     	;# 
   580  0118                     	;# 
   581  0119                     	;# 
   582  011D                     	;# 
   583  011D                     	;# 
   584  011E                     	;# 
   585  011F                     	;# 
   586  018C                     	;# 
   587  018D                     	;# 
   588  0191                     	;# 
   589  0191                     	;# 
   590  0192                     	;# 
   591  0193                     	;# 
   592  0193                     	;# 
   593  0193                     	;# 
   594  0194                     	;# 
   595  0195                     	;# 
   596  0196                     	;# 
   597  0199                     	;# 
   598  0199                     	;# 
   599  0199                     	;# 
   600  019A                     	;# 
   601  019A                     	;# 
   602  019A                     	;# 
   603  019B                     	;# 
   604  019B                     	;# 
   605  019B                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019C                     	;# 
   609  019C                     	;# 
   610  019C                     	;# 
   611  019D                     	;# 
   612  019D                     	;# 
   613  019D                     	;# 
   614  019E                     	;# 
   615  019E                     	;# 
   616  019E                     	;# 
   617  019F                     	;# 
   618  019F                     	;# 
   619  019F                     	;# 
   620  019F                     	;# 
   621  019F                     	;# 
   622  020C                     	;# 
   623  020D                     	;# 
   624  020E                     	;# 
   625  0210                     	;# 
   626  0211                     	;# 
   627  0211                     	;# 
   628  0212                     	;# 
   629  0212                     	;# 
   630  0213                     	;# 
   631  0213                     	;# 
   632  0214                     	;# 
   633  0214                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0216                     	;# 
   638  0216                     	;# 
   639  0217                     	;# 
   640  0217                     	;# 
   641  028C                     	;# 
   642  028D                     	;# 
   643  028E                     	;# 
   644  0291                     	;# 
   645  0291                     	;# 
   646  0292                     	;# 
   647  0293                     	;# 
   648  0298                     	;# 
   649  0298                     	;# 
   650  0299                     	;# 
   651  029A                     	;# 
   652  030C                     	;# 
   653  030D                     	;# 
   654  030E                     	;# 
   655  038C                     	;# 
   656  038D                     	;# 
   657  038E                     	;# 
   658  0390                     	;# 
   659  0391                     	;# 
   660  0392                     	;# 
   661  0393                     	;# 
   662  0394                     	;# 
   663  0395                     	;# 
   664  0396                     	;# 
   665  0397                     	;# 
   666  0398                     	;# 
   667  0399                     	;# 
   668  039D                     	;# 
   669  039E                     	;# 
   670  039F                     	;# 
   671  0511                     	;# 
   672  0513                     	;# 
   673  051A                     	;# 
   674  0811                     	;# 
   675  0812                     	;# 
   676  0813                     	;# 
   677  0814                     	;# 
   678  0815                     	;# 
   679  0816                     	;# 
   680  0817                     	;# 
   681  0818                     	;# 
   682  0819                     	;# 
   683  081A                     	;# 
   684  081B                     	;# 
   685  081C                     	;# 
   686  081D                     	;# 
   687  081E                     	;# 
   688  081F                     	;# 
   689  0820                     	;# 
   690  0821                     	;# 
   691  0821                     	;# 
   692  0822                     	;# 
   693  0823                     	;# 
   694  0823                     	;# 
   695  0824                     	;# 
   696  0825                     	;# 
   697  0825                     	;# 
   698  0826                     	;# 
   699  0827                     	;# 
   700  0827                     	;# 
   701  0828                     	;# 
   702  0829                     	;# 
   703  082A                     	;# 
   704  082B                     	;# 
   705  082C                     	;# 
   706  082D                     	;# 
   707  082E                     	;# 
   708  082F                     	;# 
   709  0831                     	;# 
   710  0832                     	;# 
   711  0833                     	;# 
   712  0834                     	;# 
   713  0835                     	;# 
   714  0836                     	;# 
   715  0837                     	;# 
   716  0838                     	;# 
   717  0839                     	;# 
   718  083A                     	;# 
   719  083B                     	;# 
   720  083C                     	;# 
   721  083D                     	;# 
   722  083E                     	;# 
   723  083F                     	;# 
   724  0840                     	;# 
   725  0841                     	;# 
   726  0841                     	;# 
   727  0842                     	;# 
   728  0843                     	;# 
   729  0843                     	;# 
   730  0844                     	;# 
   731  0845                     	;# 
   732  0845                     	;# 
   733  0846                     	;# 
   734  0847                     	;# 
   735  0847                     	;# 
   736  0848                     	;# 
   737  0849                     	;# 
   738  084A                     	;# 
   739  084B                     	;# 
   740  084C                     	;# 
   741  084D                     	;# 
   742  084E                     	;# 
   743  084F                     	;# 
   744  0FE4                     	;# 
   745  0FE5                     	;# 
   746  0FE6                     	;# 
   747  0FE7                     	;# 
   748  0FE8                     	;# 
   749  0FE9                     	;# 
   750  0FEA                     	;# 
   751  0FEB                     	;# 
   752  0FED                     	;# 
   753  0FEE                     	;# 
   754  0FEF                     	;# 
   755  0000                     	;# 
   756  0001                     	;# 
   757  0002                     	;# 
   758  0003                     	;# 
   759  0004                     	;# 
   760  0005                     	;# 
   761  0006                     	;# 
   762  0007                     	;# 
   763  0008                     	;# 
   764  0009                     	;# 
   765  000A                     	;# 
   766  000B                     	;# 
   767  000C                     	;# 
   768  000D                     	;# 
   769  000E                     	;# 
   770  0010                     	;# 
   771  0011                     	;# 
   772  0012                     	;# 
   773  0014                     	;# 
   774  0015                     	;# 
   775  0016                     	;# 
   776  0016                     	;# 
   777  0017                     	;# 
   778  0018                     	;# 
   779  0019                     	;# 
   780  001A                     	;# 
   781  001B                     	;# 
   782  001C                     	;# 
   783  008C                     	;# 
   784  008D                     	;# 
   785  008E                     	;# 
   786  0090                     	;# 
   787  0091                     	;# 
   788  0092                     	;# 
   789  0094                     	;# 
   790  0095                     	;# 
   791  0096                     	;# 
   792  0097                     	;# 
   793  0098                     	;# 
   794  0099                     	;# 
   795  009A                     	;# 
   796  009B                     	;# 
   797  009B                     	;# 
   798  009C                     	;# 
   799  009D                     	;# 
   800  009E                     	;# 
   801  009F                     	;# 
   802  010C                     	;# 
   803  010D                     	;# 
   804  010E                     	;# 
   805  0111                     	;# 
   806  0112                     	;# 
   807  0113                     	;# 
   808  0114                     	;# 
   809  0115                     	;# 
   810  0116                     	;# 
   811  0117                     	;# 
   812  0118                     	;# 
   813  0119                     	;# 
   814  011D                     	;# 
   815  011D                     	;# 
   816  011E                     	;# 
   817  011F                     	;# 
   818  018C                     	;# 
   819  018D                     	;# 
   820  0191                     	;# 
   821  0191                     	;# 
   822  0192                     	;# 
   823  0193                     	;# 
   824  0193                     	;# 
   825  0193                     	;# 
   826  0194                     	;# 
   827  0195                     	;# 
   828  0196                     	;# 
   829  0199                     	;# 
   830  0199                     	;# 
   831  0199                     	;# 
   832  019A                     	;# 
   833  019A                     	;# 
   834  019A                     	;# 
   835  019B                     	;# 
   836  019B                     	;# 
   837  019B                     	;# 
   838  019B                     	;# 
   839  019B                     	;# 
   840  019C                     	;# 
   841  019C                     	;# 
   842  019C                     	;# 
   843  019D                     	;# 
   844  019D                     	;# 
   845  019D                     	;# 
   846  019E                     	;# 
   847  019E                     	;# 
   848  019E                     	;# 
   849  019F                     	;# 
   850  019F                     	;# 
   851  019F                     	;# 
   852  019F                     	;# 
   853  019F                     	;# 
   854  020C                     	;# 
   855  020D                     	;# 
   856  020E                     	;# 
   857  0210                     	;# 
   858  0211                     	;# 
   859  0211                     	;# 
   860  0212                     	;# 
   861  0212                     	;# 
   862  0213                     	;# 
   863  0213                     	;# 
   864  0214                     	;# 
   865  0214                     	;# 
   866  0215                     	;# 
   867  0215                     	;# 
   868  0215                     	;# 
   869  0216                     	;# 
   870  0216                     	;# 
   871  0217                     	;# 
   872  0217                     	;# 
   873  028C                     	;# 
   874  028D                     	;# 
   875  028E                     	;# 
   876  0291                     	;# 
   877  0291                     	;# 
   878  0292                     	;# 
   879  0293                     	;# 
   880  0298                     	;# 
   881  0298                     	;# 
   882  0299                     	;# 
   883  029A                     	;# 
   884  030C                     	;# 
   885  030D                     	;# 
   886  030E                     	;# 
   887  038C                     	;# 
   888  038D                     	;# 
   889  038E                     	;# 
   890  0390                     	;# 
   891  0391                     	;# 
   892  0392                     	;# 
   893  0393                     	;# 
   894  0394                     	;# 
   895  0395                     	;# 
   896  0396                     	;# 
   897  0397                     	;# 
   898  0398                     	;# 
   899  0399                     	;# 
   900  039D                     	;# 
   901  039E                     	;# 
   902  039F                     	;# 
   903  0511                     	;# 
   904  0513                     	;# 
   905  051A                     	;# 
   906  0811                     	;# 
   907  0812                     	;# 
   908  0813                     	;# 
   909  0814                     	;# 
   910  0815                     	;# 
   911  0816                     	;# 
   912  0817                     	;# 
   913  0818                     	;# 
   914  0819                     	;# 
   915  081A                     	;# 
   916  081B                     	;# 
   917  081C                     	;# 
   918  081D                     	;# 
   919  081E                     	;# 
   920  081F                     	;# 
   921  0820                     	;# 
   922  0821                     	;# 
   923  0821                     	;# 
   924  0822                     	;# 
   925  0823                     	;# 
   926  0823                     	;# 
   927  0824                     	;# 
   928  0825                     	;# 
   929  0825                     	;# 
   930  0826                     	;# 
   931  0827                     	;# 
   932  0827                     	;# 
   933  0828                     	;# 
   934  0829                     	;# 
   935  082A                     	;# 
   936  082B                     	;# 
   937  082C                     	;# 
   938  082D                     	;# 
   939  082E                     	;# 
   940  082F                     	;# 
   941  0831                     	;# 
   942  0832                     	;# 
   943  0833                     	;# 
   944  0834                     	;# 
   945  0835                     	;# 
   946  0836                     	;# 
   947  0837                     	;# 
   948  0838                     	;# 
   949  0839                     	;# 
   950  083A                     	;# 
   951  083B                     	;# 
   952  083C                     	;# 
   953  083D                     	;# 
   954  083E                     	;# 
   955  083F                     	;# 
   956  0840                     	;# 
   957  0841                     	;# 
   958  0841                     	;# 
   959  0842                     	;# 
   960  0843                     	;# 
   961  0843                     	;# 
   962  0844                     	;# 
   963  0845                     	;# 
   964  0845                     	;# 
   965  0846                     	;# 
   966  0847                     	;# 
   967  0847                     	;# 
   968  0848                     	;# 
   969  0849                     	;# 
   970  084A                     	;# 
   971  084B                     	;# 
   972  084C                     	;# 
   973  084D                     	;# 
   974  084E                     	;# 
   975  084F                     	;# 
   976  0FE4                     	;# 
   977  0FE5                     	;# 
   978  0FE6                     	;# 
   979  0FE7                     	;# 
   980  0FE8                     	;# 
   981  0FE9                     	;# 
   982  0FEA                     	;# 
   983  0FEB                     	;# 
   984  0FED                     	;# 
   985  0FEE                     	;# 
   986  0FEF                     	;# 
   987  0000                     	;# 
   988  0001                     	;# 
   989  0002                     	;# 
   990  0003                     	;# 
   991  0004                     	;# 
   992  0005                     	;# 
   993  0006                     	;# 
   994  0007                     	;# 
   995  0008                     	;# 
   996  0009                     	;# 
   997  000A                     	;# 
   998  000B                     	;# 
   999  000C                     	;# 
  1000  000D                     	;# 
  1001  000E                     	;# 
  1002  0010                     	;# 
  1003  0011                     	;# 
  1004  0012                     	;# 
  1005  0014                     	;# 
  1006  0015                     	;# 
  1007  0016                     	;# 
  1008  0016                     	;# 
  1009  0017                     	;# 
  1010  0018                     	;# 
  1011  0019                     	;# 
  1012  001A                     	;# 
  1013  001B                     	;# 
  1014  001C                     	;# 
  1015  008C                     	;# 
  1016  008D                     	;# 
  1017  008E                     	;# 
  1018  0090                     	;# 
  1019  0091                     	;# 
  1020  0092                     	;# 
  1021  0094                     	;# 
  1022  0095                     	;# 
  1023  0096                     	;# 
  1024  0097                     	;# 
  1025  0098                     	;# 
  1026  0099                     	;# 
  1027  009A                     	;# 
  1028  009B                     	;# 
  1029  009B                     	;# 
  1030  009C                     	;# 
  1031  009D                     	;# 
  1032  009E                     	;# 
  1033  009F                     	;# 
  1034  010C                     	;# 
  1035  010D                     	;# 
  1036  010E                     	;# 
  1037  0111                     	;# 
  1038  0112                     	;# 
  1039  0113                     	;# 
  1040  0114                     	;# 
  1041  0115                     	;# 
  1042  0116                     	;# 
  1043  0117                     	;# 
  1044  0118                     	;# 
  1045  0119                     	;# 
  1046  011D                     	;# 
  1047  011D                     	;# 
  1048  011E                     	;# 
  1049  011F                     	;# 
  1050  018C                     	;# 
  1051  018D                     	;# 
  1052  0191                     	;# 
  1053  0191                     	;# 
  1054  0192                     	;# 
  1055  0193                     	;# 
  1056  0193                     	;# 
  1057  0193                     	;# 
  1058  0194                     	;# 
  1059  0195                     	;# 
  1060  0196                     	;# 
  1061  0199                     	;# 
  1062  0199                     	;# 
  1063  0199                     	;# 
  1064  019A                     	;# 
  1065  019A                     	;# 
  1066  019A                     	;# 
  1067  019B                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019C                     	;# 
  1073  019C                     	;# 
  1074  019C                     	;# 
  1075  019D                     	;# 
  1076  019D                     	;# 
  1077  019D                     	;# 
  1078  019E                     	;# 
  1079  019E                     	;# 
  1080  019E                     	;# 
  1081  019F                     	;# 
  1082  019F                     	;# 
  1083  019F                     	;# 
  1084  019F                     	;# 
  1085  019F                     	;# 
  1086  020C                     	;# 
  1087  020D                     	;# 
  1088  020E                     	;# 
  1089  0210                     	;# 
  1090  0211                     	;# 
  1091  0211                     	;# 
  1092  0212                     	;# 
  1093  0212                     	;# 
  1094  0213                     	;# 
  1095  0213                     	;# 
  1096  0214                     	;# 
  1097  0214                     	;# 
  1098  0215                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0216                     	;# 
  1102  0216                     	;# 
  1103  0217                     	;# 
  1104  0217                     	;# 
  1105  028C                     	;# 
  1106  028D                     	;# 
  1107  028E                     	;# 
  1108  0291                     	;# 
  1109  0291                     	;# 
  1110  0292                     	;# 
  1111  0293                     	;# 
  1112  0298                     	;# 
  1113  0298                     	;# 
  1114  0299                     	;# 
  1115  029A                     	;# 
  1116  030C                     	;# 
  1117  030D                     	;# 
  1118  030E                     	;# 
  1119  038C                     	;# 
  1120  038D                     	;# 
  1121  038E                     	;# 
  1122  0390                     	;# 
  1123  0391                     	;# 
  1124  0392                     	;# 
  1125  0393                     	;# 
  1126  0394                     	;# 
  1127  0395                     	;# 
  1128  0396                     	;# 
  1129  0397                     	;# 
  1130  0398                     	;# 
  1131  0399                     	;# 
  1132  039D                     	;# 
  1133  039E                     	;# 
  1134  039F                     	;# 
  1135  0511                     	;# 
  1136  0513                     	;# 
  1137  051A                     	;# 
  1138  0811                     	;# 
  1139  0812                     	;# 
  1140  0813                     	;# 
  1141  0814                     	;# 
  1142  0815                     	;# 
  1143  0816                     	;# 
  1144  0817                     	;# 
  1145  0818                     	;# 
  1146  0819                     	;# 
  1147  081A                     	;# 
  1148  081B                     	;# 
  1149  081C                     	;# 
  1150  081D                     	;# 
  1151  081E                     	;# 
  1152  081F                     	;# 
  1153  0820                     	;# 
  1154  0821                     	;# 
  1155  0821                     	;# 
  1156  0822                     	;# 
  1157  0823                     	;# 
  1158  0823                     	;# 
  1159  0824                     	;# 
  1160  0825                     	;# 
  1161  0825                     	;# 
  1162  0826                     	;# 
  1163  0827                     	;# 
  1164  0827                     	;# 
  1165  0828                     	;# 
  1166  0829                     	;# 
  1167  082A                     	;# 
  1168  082B                     	;# 
  1169  082C                     	;# 
  1170  082D                     	;# 
  1171  082E                     	;# 
  1172  082F                     	;# 
  1173  0831                     	;# 
  1174  0832                     	;# 
  1175  0833                     	;# 
  1176  0834                     	;# 
  1177  0835                     	;# 
  1178  0836                     	;# 
  1179  0837                     	;# 
  1180  0838                     	;# 
  1181  0839                     	;# 
  1182  083A                     	;# 
  1183  083B                     	;# 
  1184  083C                     	;# 
  1185  083D                     	;# 
  1186  083E                     	;# 
  1187  083F                     	;# 
  1188  0840                     	;# 
  1189  0841                     	;# 
  1190  0841                     	;# 
  1191  0842                     	;# 
  1192  0843                     	;# 
  1193  0843                     	;# 
  1194  0844                     	;# 
  1195  0845                     	;# 
  1196  0845                     	;# 
  1197  0846                     	;# 
  1198  0847                     	;# 
  1199  0847                     	;# 
  1200  0848                     	;# 
  1201  0849                     	;# 
  1202  084A                     	;# 
  1203  084B                     	;# 
  1204  084C                     	;# 
  1205  084D                     	;# 
  1206  084E                     	;# 
  1207  084F                     	;# 
  1208  0FE4                     	;# 
  1209  0FE5                     	;# 
  1210  0FE6                     	;# 
  1211  0FE7                     	;# 
  1212  0FE8                     	;# 
  1213  0FE9                     	;# 
  1214  0FEA                     	;# 
  1215  0FEB                     	;# 
  1216  0FED                     	;# 
  1217  0FEE                     	;# 
  1218  0FEF                     	;# 
  1219  0000                     	;# 
  1220  0001                     	;# 
  1221  0002                     	;# 
  1222  0003                     	;# 
  1223  0004                     	;# 
  1224  0005                     	;# 
  1225  0006                     	;# 
  1226  0007                     	;# 
  1227  0008                     	;# 
  1228  0009                     	;# 
  1229  000A                     	;# 
  1230  000B                     	;# 
  1231  000C                     	;# 
  1232  000D                     	;# 
  1233  000E                     	;# 
  1234  0010                     	;# 
  1235  0011                     	;# 
  1236  0012                     	;# 
  1237  0014                     	;# 
  1238  0015                     	;# 
  1239  0016                     	;# 
  1240  0016                     	;# 
  1241  0017                     	;# 
  1242  0018                     	;# 
  1243  0019                     	;# 
  1244  001A                     	;# 
  1245  001B                     	;# 
  1246  001C                     	;# 
  1247  008C                     	;# 
  1248  008D                     	;# 
  1249  008E                     	;# 
  1250  0090                     	;# 
  1251  0091                     	;# 
  1252  0092                     	;# 
  1253  0094                     	;# 
  1254  0095                     	;# 
  1255  0096                     	;# 
  1256  0097                     	;# 
  1257  0098                     	;# 
  1258  0099                     	;# 
  1259  009A                     	;# 
  1260  009B                     	;# 
  1261  009B                     	;# 
  1262  009C                     	;# 
  1263  009D                     	;# 
  1264  009E                     	;# 
  1265  009F                     	;# 
  1266  010C                     	;# 
  1267  010D                     	;# 
  1268  010E                     	;# 
  1269  0111                     	;# 
  1270  0112                     	;# 
  1271  0113                     	;# 
  1272  0114                     	;# 
  1273  0115                     	;# 
  1274  0116                     	;# 
  1275  0117                     	;# 
  1276  0118                     	;# 
  1277  0119                     	;# 
  1278  011D                     	;# 
  1279  011D                     	;# 
  1280  011E                     	;# 
  1281  011F                     	;# 
  1282  018C                     	;# 
  1283  018D                     	;# 
  1284  0191                     	;# 
  1285  0191                     	;# 
  1286  0192                     	;# 
  1287  0193                     	;# 
  1288  0193                     	;# 
  1289  0193                     	;# 
  1290  0194                     	;# 
  1291  0195                     	;# 
  1292  0196                     	;# 
  1293  0199                     	;# 
  1294  0199                     	;# 
  1295  0199                     	;# 
  1296  019A                     	;# 
  1297  019A                     	;# 
  1298  019A                     	;# 
  1299  019B                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019B                     	;# 
  1303  019B                     	;# 
  1304  019C                     	;# 
  1305  019C                     	;# 
  1306  019C                     	;# 
  1307  019D                     	;# 
  1308  019D                     	;# 
  1309  019D                     	;# 
  1310  019E                     	;# 
  1311  019E                     	;# 
  1312  019E                     	;# 
  1313  019F                     	;# 
  1314  019F                     	;# 
  1315  019F                     	;# 
  1316  019F                     	;# 
  1317  019F                     	;# 
  1318  020C                     	;# 
  1319  020D                     	;# 
  1320  020E                     	;# 
  1321  0210                     	;# 
  1322  0211                     	;# 
  1323  0211                     	;# 
  1324  0212                     	;# 
  1325  0212                     	;# 
  1326  0213                     	;# 
  1327  0213                     	;# 
  1328  0214                     	;# 
  1329  0214                     	;# 
  1330  0215                     	;# 
  1331  0215                     	;# 
  1332  0215                     	;# 
  1333  0216                     	;# 
  1334  0216                     	;# 
  1335  0217                     	;# 
  1336  0217                     	;# 
  1337  028C                     	;# 
  1338  028D                     	;# 
  1339  028E                     	;# 
  1340  0291                     	;# 
  1341  0291                     	;# 
  1342  0292                     	;# 
  1343  0293                     	;# 
  1344  0298                     	;# 
  1345  0298                     	;# 
  1346  0299                     	;# 
  1347  029A                     	;# 
  1348  030C                     	;# 
  1349  030D                     	;# 
  1350  030E                     	;# 
  1351  038C                     	;# 
  1352  038D                     	;# 
  1353  038E                     	;# 
  1354  0390                     	;# 
  1355  0391                     	;# 
  1356  0392                     	;# 
  1357  0393                     	;# 
  1358  0394                     	;# 
  1359  0395                     	;# 
  1360  0396                     	;# 
  1361  0397                     	;# 
  1362  0398                     	;# 
  1363  0399                     	;# 
  1364  039D                     	;# 
  1365  039E                     	;# 
  1366  039F                     	;# 
  1367  0511                     	;# 
  1368  0513                     	;# 
  1369  051A                     	;# 
  1370  0811                     	;# 
  1371  0812                     	;# 
  1372  0813                     	;# 
  1373  0814                     	;# 
  1374  0815                     	;# 
  1375  0816                     	;# 
  1376  0817                     	;# 
  1377  0818                     	;# 
  1378  0819                     	;# 
  1379  081A                     	;# 
  1380  081B                     	;# 
  1381  081C                     	;# 
  1382  081D                     	;# 
  1383  081E                     	;# 
  1384  081F                     	;# 
  1385  0820                     	;# 
  1386  0821                     	;# 
  1387  0821                     	;# 
  1388  0822                     	;# 
  1389  0823                     	;# 
  1390  0823                     	;# 
  1391  0824                     	;# 
  1392  0825                     	;# 
  1393  0825                     	;# 
  1394  0826                     	;# 
  1395  0827                     	;# 
  1396  0827                     	;# 
  1397  0828                     	;# 
  1398  0829                     	;# 
  1399  082A                     	;# 
  1400  082B                     	;# 
  1401  082C                     	;# 
  1402  082D                     	;# 
  1403  082E                     	;# 
  1404  082F                     	;# 
  1405  0831                     	;# 
  1406  0832                     	;# 
  1407  0833                     	;# 
  1408  0834                     	;# 
  1409  0835                     	;# 
  1410  0836                     	;# 
  1411  0837                     	;# 
  1412  0838                     	;# 
  1413  0839                     	;# 
  1414  083A                     	;# 
  1415  083B                     	;# 
  1416  083C                     	;# 
  1417  083D                     	;# 
  1418  083E                     	;# 
  1419  083F                     	;# 
  1420  0840                     	;# 
  1421  0841                     	;# 
  1422  0841                     	;# 
  1423  0842                     	;# 
  1424  0843                     	;# 
  1425  0843                     	;# 
  1426  0844                     	;# 
  1427  0845                     	;# 
  1428  0845                     	;# 
  1429  0846                     	;# 
  1430  0847                     	;# 
  1431  0847                     	;# 
  1432  0848                     	;# 
  1433  0849                     	;# 
  1434  084A                     	;# 
  1435  084B                     	;# 
  1436  084C                     	;# 
  1437  084D                     	;# 
  1438  084E                     	;# 
  1439  084F                     	;# 
  1440  0FE4                     	;# 
  1441  0FE5                     	;# 
  1442  0FE6                     	;# 
  1443  0FE7                     	;# 
  1444  0FE8                     	;# 
  1445  0FE9                     	;# 
  1446  0FEA                     	;# 
  1447  0FEB                     	;# 
  1448  0FED                     	;# 
  1449  0FEE                     	;# 
  1450  0FEF                     	;# 
  1451                           
  1452                           	psect	idataBANK1
  1453  0F53                     __pidataBANK1:	
  1454                           
  1455                           ;initializer for _CRC16_LookupHigh
  1456  0F53  3400               	retlw	0
  1457  0F54  3400               	retlw	0
  1458  0F55  3410               	retlw	16
  1459  0F56  3400               	retlw	0
  1460  0F57  3420               	retlw	32
  1461  0F58  3400               	retlw	0
  1462  0F59  3430               	retlw	48
  1463  0F5A  3400               	retlw	0
  1464  0F5B  3440               	retlw	64
  1465  0F5C  3400               	retlw	0
  1466  0F5D  3450               	retlw	80
  1467  0F5E  3400               	retlw	0
  1468  0F5F  3460               	retlw	96
  1469  0F60  3400               	retlw	0
  1470  0F61  3470               	retlw	112
  1471  0F62  3400               	retlw	0
  1472  0F63  3481               	retlw	129
  1473  0F64  3400               	retlw	0
  1474  0F65  3491               	retlw	145
  1475  0F66  3400               	retlw	0
  1476  0F67  34A1               	retlw	161
  1477  0F68  3400               	retlw	0
  1478  0F69  34B1               	retlw	177
  1479  0F6A  3400               	retlw	0
  1480  0F6B  34C1               	retlw	193
  1481  0F6C  3400               	retlw	0
  1482  0F6D  34D1               	retlw	209
  1483  0F6E  3400               	retlw	0
  1484  0F6F  34E1               	retlw	225
  1485  0F70  3400               	retlw	0
  1486  0F71  34F1               	retlw	241
  1487  0F72  3400               	retlw	0
  1488                           
  1489                           ;initializer for _dest_address
  1490  0F73  3400               	retlw	0
  1491  0F74  3400               	retlw	0
  1492  0F75  3400               	retlw	0
  1493  0F76  3400               	retlw	0
  1494  0F77  3400               	retlw	0
  1495  0F78  3400               	retlw	0
  1496  0F79  34FF               	retlw	255
  1497  0F7A  34FF               	retlw	255
  1498                           
  1499                           	psect	idataBANK3
  1500  0EA4                     __pidataBANK3:	
  1501                           
  1502                           ;initializer for _CRC16_LookupLow
  1503  0EA4  3400               	retlw	0
  1504  0EA5  3400               	retlw	0
  1505  0EA6  3421               	retlw	33
  1506  0EA7  3400               	retlw	0
  1507  0EA8  3442               	retlw	66
  1508  0EA9  3400               	retlw	0
  1509  0EAA  3463               	retlw	99
  1510  0EAB  3400               	retlw	0
  1511  0EAC  3484               	retlw	132
  1512  0EAD  3400               	retlw	0
  1513  0EAE  34A5               	retlw	165
  1514  0EAF  3400               	retlw	0
  1515  0EB0  34C6               	retlw	198
  1516  0EB1  3400               	retlw	0
  1517  0EB2  34E7               	retlw	231
  1518  0EB3  3400               	retlw	0
  1519  0EB4  3408               	retlw	8
  1520  0EB5  3400               	retlw	0
  1521  0EB6  3429               	retlw	41
  1522  0EB7  3400               	retlw	0
  1523  0EB8  344A               	retlw	74
  1524  0EB9  3400               	retlw	0
  1525  0EBA  346B               	retlw	107
  1526  0EBB  3400               	retlw	0
  1527  0EBC  348C               	retlw	140
  1528  0EBD  3400               	retlw	0
  1529  0EBE  34AD               	retlw	173
  1530  0EBF  3400               	retlw	0
  1531  0EC0  34CE               	retlw	206
  1532  0EC1  3400               	retlw	0
  1533  0EC2  34EF               	retlw	239
  1534  0EC3  3400               	retlw	0
  1535  0016                     _TMR1	set	22
  1536  0011                     _PIR1bits	set	17
  1537  0012                     _PIR2bits	set	18
  1538  000D                     _PORTBbits	set	13
  1539  000E                     _PORTCbits	set	14
  1540  0018                     _T1CONbits	set	24
  1541  0019                     _T1GCONbits	set	25
  1542  009B                     _ADRES	set	155
  1543  009D                     _ADCON0bits	set	157
  1544  009E                     _ADCON1bits	set	158
  1545  009A                     _OSCSTATbits	set	154
  1546  008C                     _TRISA	set	140
  1547  008D                     _TRISB	set	141
  1548  008E                     _TRISC	set	142
  1549  0097                     _WDTCONbits	set	151
  1550  04B8                     _SWDTEN	set	1208
  1551  018C                     _ANSELA	set	396
  1552  018D                     _ANSELB	set	397
  1553  0191                     _EEADRL	set	401
  1554  0195                     _EECON1bits	set	405
  1555  0196                     _EECON2	set	406
  1556  0193                     _EEDATL	set	403
  1557  0199                     _RC1REG	set	409
  1558  019D                     _RC1STAbits	set	413
  1559  019B                     _SPBRG	set	411
  1560  019A                     _TX1REG	set	410
  1561  019E                     _TX1STAbits	set	414
  1562  019E                     _TXSTAbits	set	414
  1563                           
  1564                           ; #config settings
  1565  0000                     
  1566                           	psect	cinit
  1567  0743                     start_initialization:	
  1568  0743                     __initialization:	
  1569                           
  1570                           ; Clear objects allocated to COMMON
  1571  0743  01FC               	clrf	__pbssCOMMON& (0+127)
  1572                           
  1573                           ; Clear objects allocated to BANK0
  1574  0744  305E               	movlw	low __pbssBANK0
  1575  0745  0084               	movwf	4
  1576  0746  3000               	movlw	high __pbssBANK0
  1577  0747  0085               	movwf	5
  1578  0748  3011               	movlw	17
  1579  0749  318D  25B4  3187   	fcall	clear_ram0
  1580                           
  1581                           ; Clear objects allocated to BANK1
  1582  074C  30C8               	movlw	low __pbssBANK1
  1583  074D  0084               	movwf	4
  1584  074E  3000               	movlw	high __pbssBANK1
  1585  074F  0085               	movwf	5
  1586  0750  3026               	movlw	38
  1587  0751  318D  25B4  3187   	fcall	clear_ram0
  1588                           
  1589                           ; Clear objects allocated to BANK2
  1590  0754  3020               	movlw	low __pbssBANK2
  1591  0755  0084               	movwf	4
  1592  0756  3001               	movlw	high __pbssBANK2
  1593  0757  0085               	movwf	5
  1594  0758  303C               	movlw	60
  1595  0759  318D  25B4  3187   	fcall	clear_ram0
  1596                           
  1597                           ; Initialize objects allocated to BANK1
  1598  075C  3053               	movlw	low __pidataBANK1
  1599  075D  0084               	movwf	4
  1600  075E  308F               	movlw	(high __pidataBANK1)| (0+128)
  1601  075F  0085               	movwf	5
  1602  0760  30A0               	movlw	low __pdataBANK1
  1603  0761  0086               	movwf	6
  1604  0762  3000               	movlw	high __pdataBANK1
  1605  0763  0087               	movwf	7
  1606  0764  3028               	movlw	40
  1607  0765  318D  25AE  3187   	fcall	init_ram
  1608                           
  1609                           ; Initialize objects allocated to BANK3
  1610  0768  30A4               	movlw	low __pidataBANK3
  1611  0769  0084               	movwf	4
  1612  076A  308E               	movlw	(high __pidataBANK3)| (0+128)
  1613  076B  0085               	movwf	5
  1614  076C  30A0               	movlw	low __pdataBANK3
  1615  076D  0086               	movwf	6
  1616  076E  3001               	movlw	high __pdataBANK3
  1617  076F  0087               	movwf	7
  1618  0770  3020               	movlw	32
  1619  0771  318D  25AE         	fcall	init_ram
  1620  0773                     end_of_initialization:	
  1621                           ;End of C runtime variable initialization code
  1622                           
  1623  0773                     __end_of__initialization:	
  1624  0773  0020               	movlb	0
  1625  0774  3180  2811         	ljmp	_main	;jump to C main() function
  1626                           
  1627                           	psect	bssCOMMON
  1628  007C                     __pbssCOMMON:	
  1629  007C                     _CRC16_High:	
  1630  007C                     	ds	1
  1631                           
  1632                           	psect	bssBANK0
  1633  005E                     __pbssBANK0:	
  1634  005E                     _CRC16_Reg:	
  1635  005E                     	ds	2
  1636  0060                     _cmd_itr:	
  1637  0060                     	ds	2
  1638  0062                     _error:	
  1639  0062                     	ds	2
  1640  0064                     _last_xbee_baud:	
  1641  0064                     	ds	2
  1642  0066                     _CRC16_Low:	
  1643  0066                     	ds	1
  1644  0067                     _calc_checksum:	
  1645  0067                     	ds	1
  1646  0068                     _frame_id_itr:	
  1647  0068                     	ds	1
  1648  0069                     _tmr1_err:	
  1649  0069                     	ds	1
  1650  006A                     _xbee_reset_flag:	
  1651  006A                     	ds	1
  1652  006B                     _intervalData:	
  1653  006B                     	ds	4
  1654                           
  1655                           	psect	bssBANK1
  1656  00C8                     __pbssBANK1:	
  1657  00C8                     _packet_buffer:	
  1658  00C8                     	ds	32
  1659  00E8                     _calibrationData:	
  1660  00E8                     	ds	6
  1661                           
  1662                           	psect	dataBANK1
  1663  00A0                     __pdataBANK1:	
  1664  00A0                     _CRC16_LookupHigh:	
  1665  00A0                     	ds	32
  1666  00C0                     _dest_address:	
  1667  00C0                     	ds	8
  1668                           
  1669                           	psect	bssBANK2
  1670  0120                     __pbssBANK2:	
  1671  0120                     _apiFrame:	
  1672  0120                     	ds	60
  1673                           
  1674                           	psect	dataBANK3
  1675  01A0                     __pdataBANK3:	
  1676  01A0                     _CRC16_LookupLow:	
  1677  01A0                     	ds	32
  1678                           
  1679                           	psect	clrtext
  1680  0DB4                     clear_ram0:	
  1681                           ;	Called with FSR0 containing the base address, and
  1682                           ;	WREG with the size to clear
  1683                           
  1684  0DB4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1685  0DB5                     clrloop0:	
  1686  0DB5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1687  0DB6  3101               	addfsr 0,1
  1688  0DB7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1689  0DB8  2DB5               	goto	clrloop0	;have we reached the end yet?
  1690  0DB9  3400               	retlw	0	;all done for this memory range, return
  1691                           
  1692                           	psect	inittext
  1693  0DAE                     init_ram:	
  1694  0DAE  00FE               	movwf	126
  1695  0DAF                     initloop:	
  1696  0DAF  0012               	moviw fsr0++
  1697  0DB0  001E               	movwi fsr1++
  1698  0DB1  0BFE               	decfsz	126,f
  1699  0DB2  2DAF               	goto	initloop
  1700  0DB3  3400               	retlw	0
  1701                           
  1702                           	psect	cstackCOMMON
  1703  0070                     __pcstackCOMMON:	
  1704  0070                     ?_XBee_Disable:	
  1705  0070                     ?_CRC16_Init:	
  1706                           ; 0 bytes @ 0x0
  1707                           
  1708  0070                     ?_SendReceiverBroadcastRequest:	
  1709                           ; 0 bytes @ 0x0
  1710                           
  1711  0070                     ?_XBee_Wake:	
  1712                           ; 0 bytes @ 0x0
  1713                           
  1714  0070                     ?_XBee_Sleep:	
  1715                           ; 0 bytes @ 0x0
  1716                           
  1717  0070                     ?_Timer1_Disable:	
  1718                           ; 0 bytes @ 0x0
  1719                           
  1720  0070                     ?_SendPacket:	
  1721                           ; 0 bytes @ 0x0
  1722                           
  1723  0070                     ?_isr:	
  1724                           ; 0 bytes @ 0x0
  1725                           
  1726  0070                     ??_isr:	
  1727                           ; 0 bytes @ 0x0
  1728                           
  1729  0070                     ?_UART_Transmit:	
  1730                           ; 0 bytes @ 0x0
  1731                           
  1732  0070                     ?_XBee_Reset:	
  1733                           ; 0 bytes @ 0x0
  1734                           
  1735  0070                     ?_CRC16_Update4Bits:	
  1736                           ; 0 bytes @ 0x0
  1737                           
  1738  0070                     ?_CRC16_Update:	
  1739                           ; 0 bytes @ 0x0
  1740                           
  1741                           
  1742                           ; 0 bytes @ 0x0
  1743  0070                     	ds	1
  1744  0071                     ?_EEPROM_Read:	
  1745  0071                     ?_EEPROM_Write:	
  1746                           ; 0 bytes @ 0x1
  1747                           
  1748  0071                     ??_XBee_Disable:	
  1749                           ; 0 bytes @ 0x1
  1750                           
  1751  0071                     ?_ADC_Enable:	
  1752                           ; 0 bytes @ 0x1
  1753                           
  1754  0071                     ??_CRC16_Init:	
  1755                           ; 0 bytes @ 0x1
  1756                           
  1757  0071                     ??_XBee_Sleep:	
  1758                           ; 0 bytes @ 0x1
  1759                           
  1760  0071                     ?_sleep:	
  1761                           ; 0 bytes @ 0x1
  1762                           
  1763  0071                     ??_Timer1_Disable:	
  1764                           ; 0 bytes @ 0x1
  1765                           
  1766  0071                     ?_Timer1_Init:	
  1767                           ; 0 bytes @ 0x1
  1768                           
  1769  0071                     ??_UART_Transmit:	
  1770                           ; 0 bytes @ 0x1
  1771                           
  1772  0071                     ??_CRC16_Update4Bits:	
  1773                           ; 0 bytes @ 0x1
  1774                           
  1775  0071                     ?_memset:	
  1776                           ; 0 bytes @ 0x1
  1777                           
  1778  0071                     ?_checksum:	
  1779                           ; 1 bytes @ 0x1
  1780                           
  1781  0071                     ?_doChecksumVerify:	
  1782                           ; 1 bytes @ 0x1
  1783                           
  1784  0071                     ?_memcpy:	
  1785                           ; 1 bytes @ 0x1
  1786                           
  1787  0071                     ?_UART_Receive:	
  1788                           ; 2 bytes @ 0x1
  1789                           
  1790  0071                     ?___awdiv:	
  1791                           ; 2 bytes @ 0x1
  1792                           
  1793  0071                     ?___wmul:	
  1794                           ; 2 bytes @ 0x1
  1795                           
  1796  0071                     ?_swap_endian_32:	
  1797                           ; 2 bytes @ 0x1
  1798                           
  1799  0071                     ?___aldiv:	
  1800                           ; 4 bytes @ 0x1
  1801                           
  1802  0071                     UART_Transmit@c:	
  1803                           ; 4 bytes @ 0x1
  1804                           
  1805  0071                     ADC_Enable@port_pin:	
  1806                           ; 1 bytes @ 0x1
  1807                           
  1808  0071                     EEPROM_Read@data:	
  1809                           ; 1 bytes @ 0x1
  1810                           
  1811  0071                     EEPROM_Write@data:	
  1812                           ; 1 bytes @ 0x1
  1813                           
  1814  0071                     Timer1_Init@tmr1cs:	
  1815                           ; 1 bytes @ 0x1
  1816                           
  1817  0071                     sleep@seconds:	
  1818                           ; 2 bytes @ 0x1
  1819                           
  1820  0071                     checksum@length:	
  1821                           ; 2 bytes @ 0x1
  1822                           
  1823  0071                     doChecksumVerify@length:	
  1824                           ; 2 bytes @ 0x1
  1825                           
  1826  0071                     ___awdiv@divisor:	
  1827                           ; 2 bytes @ 0x1
  1828                           
  1829  0071                     memcpy@d1:	
  1830                           ; 2 bytes @ 0x1
  1831                           
  1832  0071                     memset@c:	
  1833                           ; 2 bytes @ 0x1
  1834                           
  1835  0071                     ___wmul@multiplier:	
  1836                           ; 2 bytes @ 0x1
  1837                           
  1838  0071                     UART_Receive@tmo:	
  1839                           ; 2 bytes @ 0x1
  1840                           
  1841  0071                     swap_endian_32@n:	
  1842                           ; 4 bytes @ 0x1
  1843                           
  1844  0071                     ___aldiv@divisor:	
  1845                           ; 4 bytes @ 0x1
  1846                           
  1847                           
  1848                           ; 4 bytes @ 0x1
  1849  0071                     	ds	1
  1850  0072                     ??_ADC_Enable:	
  1851  0072                     ?_UART_TransmitMsg:	
  1852                           ; 0 bytes @ 0x2
  1853                           
  1854  0072                     UART_TransmitMsg@len:	
  1855                           ; 0 bytes @ 0x2
  1856                           
  1857  0072                     EEPROM_Read@length:	
  1858                           ; 2 bytes @ 0x2
  1859                           
  1860  0072                     EEPROM_Write@length:	
  1861                           ; 2 bytes @ 0x2
  1862                           
  1863                           
  1864                           ; 2 bytes @ 0x2
  1865  0072                     	ds	1
  1866  0073                     ??_sleep:	
  1867  0073                     ??_checksum:	
  1868                           ; 0 bytes @ 0x3
  1869                           
  1870  0073                     doChecksumVerify@checksum:	
  1871                           ; 0 bytes @ 0x3
  1872                           
  1873  0073                     Timer1_Init@t1ckps:	
  1874                           ; 1 bytes @ 0x3
  1875                           
  1876  0073                     sleep@i:	
  1877                           ; 2 bytes @ 0x3
  1878                           
  1879  0073                     ___awdiv@dividend:	
  1880                           ; 2 bytes @ 0x3
  1881                           
  1882  0073                     memcpy@s1:	
  1883                           ; 2 bytes @ 0x3
  1884                           
  1885  0073                     memset@n:	
  1886                           ; 2 bytes @ 0x3
  1887                           
  1888  0073                     ___wmul@multiplicand:	
  1889                           ; 2 bytes @ 0x3
  1890                           
  1891                           
  1892                           ; 2 bytes @ 0x3
  1893  0073                     	ds	1
  1894  0074                     ??_EEPROM_Read:	
  1895  0074                     ??_EEPROM_Write:	
  1896                           ; 0 bytes @ 0x4
  1897                           
  1898  0074                     ??_doChecksumVerify:	
  1899                           ; 0 bytes @ 0x4
  1900                           
  1901  0074                     UART_TransmitMsg@end_char:	
  1902                           ; 0 bytes @ 0x4
  1903                           
  1904  0074                     ADC_Enable@select:	
  1905                           ; 1 bytes @ 0x4
  1906                           
  1907                           
  1908                           ; 1 bytes @ 0x4
  1909  0074                     	ds	1
  1910  0075                     ??_memset:	
  1911  0075                     ??_Timer1_Init:	
  1912                           ; 0 bytes @ 0x5
  1913                           
  1914  0075                     ??_UART_TransmitMsg:	
  1915                           ; 0 bytes @ 0x5
  1916                           
  1917  0075                     ??_UART_Receive:	
  1918                           ; 0 bytes @ 0x5
  1919                           
  1920  0075                     ??___awdiv:	
  1921                           ; 0 bytes @ 0x5
  1922                           
  1923  0075                     ??___wmul:	
  1924                           ; 0 bytes @ 0x5
  1925                           
  1926  0075                     checksum@addr:	
  1927                           ; 0 bytes @ 0x5
  1928                           
  1929  0075                     EEPROM_Write@address:	
  1930                           ; 1 bytes @ 0x5
  1931                           
  1932  0075                     memcpy@n:	
  1933                           ; 1 bytes @ 0x5
  1934                           
  1935  0075                     ___wmul@product:	
  1936                           ; 2 bytes @ 0x5
  1937                           
  1938  0075                     swap_endian_32@r:	
  1939                           ; 2 bytes @ 0x5
  1940                           
  1941  0075                     ___aldiv@dividend:	
  1942                           ; 4 bytes @ 0x5
  1943                           
  1944                           
  1945                           ; 4 bytes @ 0x5
  1946  0075                     	ds	1
  1947  0076                     UART_TransmitMsg@_msg:	
  1948  0076                     checksum@address:	
  1949                           ; 1 bytes @ 0x6
  1950                           
  1951  0076                     doChecksumVerify@address:	
  1952                           ; 1 bytes @ 0x6
  1953                           
  1954  0076                     EEPROM_Read@address:	
  1955                           ; 1 bytes @ 0x6
  1956                           
  1957  0076                     EEPROM_Write@i:	
  1958                           ; 1 bytes @ 0x6
  1959                           
  1960  0076                     ___awdiv@counter:	
  1961                           ; 1 bytes @ 0x6
  1962                           
  1963  0076                     memset@p1:	
  1964                           ; 1 bytes @ 0x6
  1965                           
  1966                           
  1967                           ; 1 bytes @ 0x6
  1968  0076                     	ds	1
  1969  0077                     ?_timer1_poll_delay:	
  1970  0077                     ??_memcpy:	
  1971                           ; 0 bytes @ 0x7
  1972                           
  1973  0077                     checksum@checksum:	
  1974                           ; 0 bytes @ 0x7
  1975                           
  1976  0077                     doChecksumVerify@check:	
  1977                           ; 1 bytes @ 0x7
  1978                           
  1979  0077                     EEPROM_Read@i:	
  1980                           ; 1 bytes @ 0x7
  1981                           
  1982  0077                     CRC16_Update4Bits@val:	
  1983                           ; 1 bytes @ 0x7
  1984                           
  1985  0077                     ___awdiv@sign:	
  1986                           ; 1 bytes @ 0x7
  1987                           
  1988  0077                     memset@p:	
  1989                           ; 1 bytes @ 0x7
  1990                           
  1991  0077                     timer1_poll_delay@ticks:	
  1992                           ; 1 bytes @ 0x7
  1993                           
  1994  0077                     UART_TransmitMsg@i:	
  1995                           ; 2 bytes @ 0x7
  1996                           
  1997  0077                     UART_Receive@i:	
  1998                           ; 2 bytes @ 0x7
  1999                           
  2000                           
  2001                           ; 4 bytes @ 0x7
  2002  0077                     	ds	1
  2003  0078                     CRC16_Update4Bits@t:	
  2004  0078                     checksum@i:	
  2005                           ; 1 bytes @ 0x8
  2006                           
  2007  0078                     doChecksumVerify@i:	
  2008                           ; 2 bytes @ 0x8
  2009                           
  2010  0078                     ___awdiv@quotient:	
  2011                           ; 2 bytes @ 0x8
  2012                           
  2013  0078                     memcpy@d:	
  2014                           ; 2 bytes @ 0x8
  2015                           
  2016                           
  2017                           ; 2 bytes @ 0x8
  2018  0078                     	ds	1
  2019  0079                     ??_CRC16_Update:	
  2020  0079                     ??___aldiv:	
  2021                           ; 0 bytes @ 0x9
  2022                           
  2023  0079                     timer1_poll_delay@division:	
  2024                           ; 0 bytes @ 0x9
  2025                           
  2026                           
  2027                           ; 2 bytes @ 0x9
  2028  0079                     	ds	1
  2029  007A                     CRC16_Update@val:	
  2030  007A                     UART_Init@spbrg:	
  2031                           ; 1 bytes @ 0xA
  2032                           
  2033  007A                     memcpy@s:	
  2034                           ; 2 bytes @ 0xA
  2035                           
  2036                           
  2037                           ; 2 bytes @ 0xA
  2038  007A                     	ds	1
  2039  007B                     ??_timer1_poll_delay:	
  2040  007B                     ??_CRC16_Generate:	
  2041                           ; 0 bytes @ 0xB
  2042                           
  2043                           
  2044                           ; 0 bytes @ 0xB
  2045  007B                     	ds	1
  2046  007C                     ??_XBee_Enable:	
  2047  007C                     ??_XBee_Wake:	
  2048                           ; 0 bytes @ 0xC
  2049                           
  2050  007C                     ??_pulseLed:	
  2051                           ; 0 bytes @ 0xC
  2052                           
  2053  007C                     ??_timer1_poll_delay_ms:	
  2054                           ; 0 bytes @ 0xC
  2055                           
  2056  007C                     ??_XBee_Reset:	
  2057                           ; 0 bytes @ 0xC
  2058                           
  2059                           
  2060                           	psect	cstackBANK0
  2061  0020                     __pcstackBANK0:	
  2062                           ; 0 bytes @ 0xC
  2063                           
  2064  0020                     ??_swap_endian_32:	
  2065  0020                     ?_CRC16_Generate:	
  2066                           ; 0 bytes @ 0x0
  2067                           
  2068  0020                     ?_UART_ReceiveMsgTmo:	
  2069                           ; 2 bytes @ 0x0
  2070                           
  2071  0020                     timer1_poll_delay@tmr1_turned_on:	
  2072                           ; 2 bytes @ 0x0
  2073                           
  2074  0020                     ___aldiv@counter:	
  2075                           ; 1 bytes @ 0x0
  2076                           
  2077  0020                     UART_ReceiveMsgTmo@len:	
  2078                           ; 1 bytes @ 0x0
  2079                           
  2080  0020                     CRC16_Generate@len:	
  2081                           ; 2 bytes @ 0x0
  2082                           
  2083                           
  2084                           ; 2 bytes @ 0x0
  2085  0020                     	ds	1
  2086  0021                     ?_pulseLed:	
  2087  0021                     ?_timer1_poll_delay_ms:	
  2088                           ; 0 bytes @ 0x1
  2089                           
  2090  0021                     ?_ADC_ReadOne:	
  2091                           ; 0 bytes @ 0x1
  2092                           
  2093  0021                     ___aldiv@sign:	
  2094                           ; 2 bytes @ 0x1
  2095                           
  2096  0021                     pulseLed@ticks:	
  2097                           ; 1 bytes @ 0x1
  2098                           
  2099  0021                     timer1_poll_delay_ms@ms:	
  2100                           ; 2 bytes @ 0x1
  2101                           
  2102                           
  2103                           ; 2 bytes @ 0x1
  2104  0021                     	ds	1
  2105  0022                     UART_ReceiveMsgTmo@end_char:	
  2106  0022                     CRC16_Generate@msg:	
  2107                           ; 1 bytes @ 0x2
  2108                           
  2109  0022                     ___aldiv@quotient:	
  2110                           ; 1 bytes @ 0x2
  2111                           
  2112                           
  2113                           ; 4 bytes @ 0x2
  2114  0022                     	ds	1
  2115  0023                     ??_ADC_ReadOne:	
  2116  0023                     CRC16_Generate@i:	
  2117                           ; 0 bytes @ 0x3
  2118                           
  2119  0023                     UART_ReceiveMsgTmo@tmo:	
  2120                           ; 2 bytes @ 0x3
  2121                           
  2122                           
  2123                           ; 4 bytes @ 0x3
  2124  0023                     	ds	1
  2125  0024                     ADC_ReadOne@channel:	
  2126                           
  2127                           ; 1 bytes @ 0x4
  2128  0024                     	ds	1
  2129  0025                     ADC_ReadOne@result:	
  2130                           
  2131                           ; 2 bytes @ 0x5
  2132  0025                     	ds	1
  2133  0026                     ?_UART_Init:	
  2134  0026                     UART_Init@baud:	
  2135                           ; 0 bytes @ 0x6
  2136                           
  2137                           
  2138                           ; 2 bytes @ 0x6
  2139  0026                     	ds	1
  2140  0027                     ??_UART_ReceiveMsgTmo:	
  2141  0027                     ?_ADC_Read:	
  2142                           ; 0 bytes @ 0x7
  2143                           
  2144                           
  2145                           ; 2 bytes @ 0x7
  2146  0027                     	ds	1
  2147  0028                     ??_UART_Init:	
  2148                           
  2149                           ; 0 bytes @ 0x8
  2150  0028                     	ds	1
  2151  0029                     ??_ADC_Read:	
  2152  0029                     UART_ReceiveMsgTmo@msg:	
  2153                           ; 0 bytes @ 0x9
  2154                           
  2155                           
  2156                           ; 1 bytes @ 0x9
  2157  0029                     	ds	1
  2158  002A                     UART_ReceiveMsgTmo@c:	
  2159                           
  2160                           ; 2 bytes @ 0xA
  2161  002A                     	ds	1
  2162  002B                     ADC_Read@res:	
  2163                           
  2164                           ; 8 bytes @ 0xB
  2165  002B                     	ds	1
  2166  002C                     UART_ReceiveMsgTmo@i:	
  2167                           
  2168                           ; 2 bytes @ 0xC
  2169  002C                     	ds	1
  2170  002D                     ?_XBee_Enable:	
  2171  002D                     XBee_Enable@baud:	
  2172                           ; 0 bytes @ 0xD
  2173                           
  2174                           
  2175                           ; 2 bytes @ 0xD
  2176  002D                     	ds	1
  2177  002E                     ?_XBAPI_HandleFrame:	
  2178  002E                     XBAPI_HandleFrame@expected:	
  2179                           ; 2 bytes @ 0xE
  2180                           
  2181                           
  2182                           ; 2 bytes @ 0xE
  2183  002E                     	ds	1
  2184  002F                     XBee_Wake@i:	
  2185                           
  2186                           ; 4 bytes @ 0xF
  2187  002F                     	ds	1
  2188  0030                     XBAPI_HandleFrame@do_tmo:	
  2189                           
  2190                           ; 2 bytes @ 0x10
  2191  0030                     	ds	2
  2192  0032                     ??_XBAPI_HandleFrame:	
  2193                           
  2194                           ; 0 bytes @ 0x12
  2195  0032                     	ds	1
  2196  0033                     ADC_Read@channel:	
  2197                           
  2198                           ; 1 bytes @ 0x13
  2199  0033                     	ds	1
  2200  0034                     XBAPI_HandleFrame@bytes_read:	
  2201  0034                     ADC_Read@sum:	
  2202                           ; 2 bytes @ 0x14
  2203                           
  2204                           
  2205                           ; 2 bytes @ 0x14
  2206  0034                     	ds	2
  2207  0036                     XBAPI_HandleFrame@packet:	
  2208  0036                     ADC_Read@i:	
  2209                           ; 1 bytes @ 0x16
  2210                           
  2211                           
  2212                           ; 1 bytes @ 0x16
  2213  0036                     	ds	1
  2214  0037                     XBAPI_HandleFrame@received_length:	
  2215                           
  2216                           ; 2 bytes @ 0x17
  2217  0037                     	ds	2
  2218  0039                     XBAPI_HandleFrame@tmo:	
  2219                           
  2220                           ; 4 bytes @ 0x19
  2221  0039                     	ds	4
  2222  003D                     ?_XBAPI_Command:	
  2223  003D                     ?_XBAPI_Transmit:	
  2224                           ; 2 bytes @ 0x1D
  2225                           
  2226  003D                     XBAPI_Transmit@data:	
  2227                           ; 2 bytes @ 0x1D
  2228                           
  2229  003D                     XBAPI_Command@command:	
  2230                           ; 1 bytes @ 0x1D
  2231                           
  2232                           
  2233                           ; 2 bytes @ 0x1D
  2234  003D                     	ds	1
  2235  003E                     XBAPI_Transmit@length:	
  2236                           
  2237                           ; 2 bytes @ 0x1E
  2238  003E                     	ds	1
  2239  003F                     XBAPI_Command@data:	
  2240                           
  2241                           ; 4 bytes @ 0x1F
  2242  003F                     	ds	1
  2243  0040                     XBAPI_Transmit@id:	
  2244                           
  2245                           ; 2 bytes @ 0x20
  2246  0040                     	ds	2
  2247  0042                     ??_XBAPI_Transmit:	
  2248                           
  2249                           ; 0 bytes @ 0x22
  2250  0042                     	ds	1
  2251  0043                     XBAPI_Transmit@address:	
  2252  0043                     XBAPI_Command@id:	
  2253                           ; 1 bytes @ 0x23
  2254                           
  2255                           
  2256                           ; 2 bytes @ 0x23
  2257  0043                     	ds	1
  2258  0044                     _XBAPI_Transmit$864:	
  2259                           
  2260                           ; 2 bytes @ 0x24
  2261  0044                     	ds	1
  2262  0045                     XBAPI_Command@data_valid:	
  2263                           
  2264                           ; 2 bytes @ 0x25
  2265  0045                     	ds	1
  2266  0046                     XBAPI_Transmit@error:	
  2267                           
  2268                           ; 2 bytes @ 0x26
  2269  0046                     	ds	1
  2270  0047                     ??_XBAPI_Command:	
  2271                           
  2272                           ; 0 bytes @ 0x27
  2273  0047                     	ds	1
  2274  0048                     ??_SendPacket:	
  2275                           
  2276                           ; 0 bytes @ 0x28
  2277  0048                     	ds	2
  2278  004A                     XBAPI_Command@check:	
  2279  004A                     SendPacket@packet:	
  2280                           ; 1 bytes @ 0x2A
  2281                           
  2282                           
  2283                           ; 1 bytes @ 0x2A
  2284  004A                     	ds	1
  2285  004B                     SendPacket@status:	
  2286  004B                     _XBAPI_Command$876:	
  2287                           ; 1 bytes @ 0x2B
  2288                           
  2289                           
  2290                           ; 2 bytes @ 0x2B
  2291  004B                     	ds	1
  2292  004C                     ??_SendReceiverBroadcastRequest:	
  2293  004C                     ?_SendReport:	
  2294                           ; 0 bytes @ 0x2C
  2295                           
  2296  004C                     SendReport@thermistorResistance:	
  2297                           ; 0 bytes @ 0x2C
  2298                           
  2299                           
  2300                           ; 2 bytes @ 0x2C
  2301  004C                     	ds	1
  2302  004D                     XBAPI_Command@atCmdLength:	
  2303                           
  2304                           ; 1 bytes @ 0x2D
  2305  004D                     	ds	1
  2306  004E                     SendReport@thermRes25C:	
  2307                           
  2308                           ; 2 bytes @ 0x2E
  2309  004E                     	ds	2
  2310  0050                     SendReport@thermBeta:	
  2311                           
  2312                           ; 2 bytes @ 0x30
  2313  0050                     	ds	2
  2314  0052                     SendReport@topResValue:	
  2315                           
  2316                           ; 2 bytes @ 0x32
  2317  0052                     	ds	2
  2318  0054                     ??_SendReport:	
  2319                           
  2320                           ; 0 bytes @ 0x34
  2321  0054                     	ds	1
  2322  0055                     ?_main:	
  2323  0055                     main@argc:	
  2324                           ; 2 bytes @ 0x35
  2325                           
  2326                           
  2327                           ; 2 bytes @ 0x35
  2328  0055                     	ds	2
  2329  0057                     main@argv:	
  2330                           
  2331                           ; 2 bytes @ 0x37
  2332  0057                     	ds	2
  2333  0059                     ??_main:	
  2334                           
  2335                           ; 0 bytes @ 0x39
  2336  0059                     	ds	1
  2337  005A                     main@thermistorResistance:	
  2338                           
  2339                           ; 4 bytes @ 0x3A
  2340  005A                     	ds	4
  2341                           
  2342                           	psect	maintext
  2343  0011                     __pmaintext:	
  2344 ;;
  2345 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2346 ;;
  2347 ;; *************** function _main *****************
  2348 ;; Defined at:
  2349 ;;		line 60 in file "main.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  argc            2   53[BANK0 ] int 
  2352 ;;  argv            2   55[BANK0 ] PTR PTR unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  thermistorRe    4   58[BANK0 ] long 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  2   53[BANK0 ] int 
  2357 ;; Registers used:
  2358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 17F/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2364 ;;      Params:         0       4       0       0       0       0       0       0
  2365 ;;      Locals:         0       4       0       0       0       0       0       0
  2366 ;;      Temps:          0       1       0       0       0       0       0       0
  2367 ;;      Totals:         0       9       0       0       0       0       0       0
  2368 ;;Total ram usage:        9 bytes
  2369 ;; Hardware stack levels required when called:    8
  2370 ;; This function calls:
  2371 ;;		_pulseLed
  2372 ;;		_EEPROM_Read
  2373 ;;		_memset
  2374 ;;		_EEPROM_Write
  2375 ;;		_XBee_Enable
  2376 ;;		_XBAPI_Command
  2377 ;;		_XBee_Disable
  2378 ;;		_ADC_Enable
  2379 ;;		_CRC16_Init
  2380 ;;		_SendReceiverBroadcastRequest
  2381 ;;		_XBAPI_HandleFrame
  2382 ;;		_ADC_Read
  2383 ;;		_XBee_Wake
  2384 ;;		_SendReport
  2385 ;;		_XBee_Sleep
  2386 ;;		_sleep
  2387 ;; This function is called by:
  2388 ;;		Startup code after reset
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           
  2393                           ;psect for function _main
  2394  0011                     _main:	
  2395                           
  2396                           ;main.c: 62: TRISC = 0x80 | (0x14);;
  2397                           
  2398                           ;incstack = 0
  2399                           ; Regs used in _main: [allreg]
  2400  0011  3094               	movlw	148
  2401  0012  0021               	movlb	1	; select bank1
  2402  0013  008E               	movwf	14	;volatile
  2403                           
  2404                           ;main.c: 63: TRISB = 0x0;
  2405  0014  018D               	clrf	13	;volatile
  2406                           
  2407                           ;main.c: 64: TRISA = 0x0;
  2408  0015  018C               	clrf	12	;volatile
  2409                           
  2410                           ;main.c: 66: pulseLed(5000);
  2411  0016  3088               	movlw	136
  2412  0017  0020               	movlb	0	; select bank0
  2413  0018  00A1               	movwf	?_pulseLed
  2414  0019  3013               	movlw	19
  2415  001A  00A2               	movwf	?_pulseLed+1
  2416  001B  318D  25DD  3180   	fcall	_pulseLed
  2417                           
  2418                           ;main.c: 68: PORTBbits.RB0 = 1;
  2419  001E  0020               	movlb	0	; select bank0
  2420  001F  140D               	bsf	13,0	;volatile
  2421                           
  2422                           ;main.c: 71: EEPROM_Read(0x00, (byte*)&calibrationData, sizeof(CalibrationData));
  2423  0020  30E8               	movlw	_calibrationData& (0+255)
  2424  0021  00D9               	movwf	??_main
  2425  0022  0859               	movf	??_main,w
  2426  0023  00F1               	movwf	?_EEPROM_Read
  2427  0024  3006               	movlw	6
  2428  0025  00F2               	movwf	?_EEPROM_Read+1
  2429  0026  3000               	movlw	0
  2430  0027  00F3               	movwf	?_EEPROM_Read+2
  2431  0028  3000               	movlw	0
  2432  0029  318E  26C4  3180   	fcall	_EEPROM_Read
  2433                           
  2434                           ;main.c: 72: if(calibrationData.magic != 0xF00D) {
  2435  002C  30F0               	movlw	240
  2436  002D  0021               	movlb	1	; select bank1
  2437  002E  0669               	xorwf	(_calibrationData+1)^(0+128),w
  2438  002F  1D03               	skipz
  2439  0030  2833               	goto	u1955
  2440  0031  300D               	movlw	13
  2441  0032  0668               	xorwf	_calibrationData^(0+128),w
  2442  0033                     u1955:	
  2443  0033  1903               	skipnz
  2444  0034  2853               	goto	l2434
  2445                           
  2446                           ;main.c: 73: memset(&calibrationData, 0, sizeof(CalibrationData));
  2447  0035  3000               	movlw	0
  2448  0036  00F1               	movwf	?_memset
  2449  0037  3000               	movlw	0
  2450  0038  00F2               	movwf	?_memset+1
  2451  0039  3006               	movlw	6
  2452  003A  00F3               	movwf	?_memset+2
  2453  003B  3000               	movlw	0
  2454  003C  00F4               	movwf	?_memset+3
  2455  003D  30E8               	movlw	_calibrationData& (0+255)
  2456  003E  318E  264C  3180   	fcall	_memset
  2457                           
  2458                           ;main.c: 74: calibrationData.magic = 0xF00D;
  2459  0041  300D               	movlw	13
  2460  0042  0021               	movlb	1	; select bank1
  2461  0043  00E8               	movwf	_calibrationData^(0+128)
  2462  0044  30F0               	movlw	240
  2463  0045  00E9               	movwf	(_calibrationData^(0+128)+1)
  2464                           
  2465                           ;main.c: 75: EEPROM_Write(0x00, (byte*)&calibrationData, sizeof(CalibrationData));
  2466  0046  30E8               	movlw	_calibrationData& (0+255)
  2467  0047  0020               	movlb	0	; select bank0
  2468  0048  00D9               	movwf	??_main
  2469  0049  0859               	movf	??_main,w
  2470  004A  00F1               	movwf	?_EEPROM_Write
  2471  004B  3006               	movlw	6
  2472  004C  00F2               	movwf	?_EEPROM_Write+1
  2473  004D  3000               	movlw	0
  2474  004E  00F3               	movwf	?_EEPROM_Write+2
  2475  004F  3000               	movlw	0
  2476  0050  318F  277B  3180   	fcall	_EEPROM_Write
  2477  0053                     l2434:	
  2478                           
  2479                           ;main.c: 76: }
  2480                           ;main.c: 79: EEPROM_Read((0x00+sizeof(CalibrationData)), (byte*)&intervalData, sizeof(In
      +                          tervalData));
  2481  0053  306B               	movlw	_intervalData& (0+255)
  2482  0054  0020               	movlb	0	; select bank0
  2483  0055  00D9               	movwf	??_main
  2484  0056  0859               	movf	??_main,w
  2485  0057  00F1               	movwf	?_EEPROM_Read
  2486  0058  3004               	movlw	4
  2487  0059  00F2               	movwf	?_EEPROM_Read+1
  2488  005A  3000               	movlw	0
  2489  005B  00F3               	movwf	?_EEPROM_Read+2
  2490  005C  3006               	movlw	6
  2491  005D  318E  26C4  3180   	fcall	_EEPROM_Read
  2492                           
  2493                           ;main.c: 80: if(intervalData.magic != 0xFACE) {
  2494  0060  30FA               	movlw	250
  2495  0061  0020               	movlb	0	; select bank0
  2496  0062  066C               	xorwf	_intervalData+1,w
  2497  0063  1D03               	skipz
  2498  0064  2867               	goto	u1965
  2499  0065  30CE               	movlw	206
  2500  0066  066B               	xorwf	_intervalData,w
  2501  0067                     u1965:	
  2502  0067  1903               	skipnz
  2503  0068  287D               	goto	l2442
  2504                           
  2505                           ;main.c: 81: intervalData.magic = 0xFACE;
  2506  0069  30CE               	movlw	206
  2507  006A  00EB               	movwf	_intervalData
  2508  006B  30FA               	movlw	250
  2509  006C  00EC               	movwf	_intervalData+1
  2510                           
  2511                           ;main.c: 82: intervalData.interval = 60;
  2512  006D  303C               	movlw	60
  2513  006E  00ED               	movwf	_intervalData+2
  2514  006F  3000               	movlw	0
  2515  0070  00EE               	movwf	_intervalData+3
  2516                           
  2517                           ;main.c: 83: EEPROM_Write((0x00+sizeof(CalibrationData)), (byte*)&intervalData, sizeof(I
      +                          ntervalData));
  2518  0071  306B               	movlw	_intervalData& (0+255)
  2519  0072  00D9               	movwf	??_main
  2520  0073  0859               	movf	??_main,w
  2521  0074  00F1               	movwf	?_EEPROM_Write
  2522  0075  3004               	movlw	4
  2523  0076  00F2               	movwf	?_EEPROM_Write+1
  2524  0077  3000               	movlw	0
  2525  0078  00F3               	movwf	?_EEPROM_Write+2
  2526  0079  3006               	movlw	6
  2527  007A  318F  277B  3180   	fcall	_EEPROM_Write
  2528  007D                     l2442:	
  2529                           
  2530                           ;main.c: 84: }
  2531                           ;main.c: 86: XBee_Enable(9600);
  2532  007D  3080               	movlw	128
  2533  007E  0020               	movlb	0	; select bank0
  2534  007F  00AD               	movwf	?_XBee_Enable
  2535  0080  3025               	movlw	37
  2536  0081  00AE               	movwf	?_XBee_Enable+1
  2537  0082  318E  2686  3180   	fcall	_XBee_Enable
  2538                           
  2539                           ;main.c: 88: error = XBAPI_Command(0x4D53, 1L, 0xc0, 1);
  2540  0085  3053               	movlw	83
  2541  0086  0020               	movlb	0	; select bank0
  2542  0087  00BD               	movwf	?_XBAPI_Command
  2543  0088  304D               	movlw	77
  2544  0089  00BE               	movwf	?_XBAPI_Command+1
  2545  008A  3000               	movlw	0
  2546  008B  00C2               	movwf	?_XBAPI_Command+5
  2547  008C  3000               	movlw	0
  2548  008D  00C1               	movwf	?_XBAPI_Command+4
  2549  008E  3000               	movlw	0
  2550  008F  00C0               	movwf	?_XBAPI_Command+3
  2551  0090  3001               	movlw	1
  2552  0091  00BF               	movwf	?_XBAPI_Command+2
  2553  0092  30C0               	movlw	192
  2554  0093  00C3               	movwf	?_XBAPI_Command+6
  2555  0094  3000               	movlw	0
  2556  0095  00C4               	movwf	?_XBAPI_Command+7
  2557  0096  3001               	movlw	1
  2558  0097  00C5               	movwf	?_XBAPI_Command+8
  2559  0098  3000               	movlw	0
  2560  0099  00C6               	movwf	?_XBAPI_Command+9
  2561  009A  3182  2297  3180   	fcall	_XBAPI_Command
  2562  009D  0020               	movlb	0	; select bank0
  2563  009E  083E               	movf	?_XBAPI_Command+1,w
  2564  009F  01E3               	clrf	_error+1
  2565  00A0  07E3               	addwf	_error+1,f
  2566  00A1  083D               	movf	?_XBAPI_Command,w
  2567  00A2  01E2               	clrf	_error
  2568  00A3  07E2               	addwf	_error,f
  2569                           
  2570                           ;main.c: 89: if(error) {
  2571  00A4  0863               	movf	_error+1,w
  2572  00A5  0462               	iorwf	_error,w
  2573  00A6  1903               	skipnz
  2574  00A7  28AC               	goto	l2450
  2575                           
  2576                           ;main.c: 90: XBee_Disable();
  2577  00A8  318D  25A8  3180   	fcall	_XBee_Disable
  2578  00AB                     l75:	
  2579                           ;main.c: 91: while(1){
  2580                           
  2581  00AB  28AB               	goto	l75
  2582  00AC                     l2450:	
  2583                           
  2584                           ;main.c: 93: }
  2585                           ;main.c: 94: }
  2586                           ;main.c: 96: cmd_itr++;
  2587  00AC  3001               	movlw	1
  2588  00AD  0020               	movlb	0	; select bank0
  2589  00AE  07E0               	addwf	_cmd_itr,f
  2590  00AF  3000               	movlw	0
  2591  00B0  3DE1               	addwfc	_cmd_itr+1,f
  2592                           
  2593                           ;main.c: 98: error = XBAPI_Command(0x4341, 0, 0xc1, 0);
  2594  00B1  3041               	movlw	65
  2595  00B2  00BD               	movwf	?_XBAPI_Command
  2596  00B3  3043               	movlw	67
  2597  00B4  00BE               	movwf	?_XBAPI_Command+1
  2598  00B5  3000               	movlw	0
  2599  00B6  00C2               	movwf	?_XBAPI_Command+5
  2600  00B7  3000               	movlw	0
  2601  00B8  00C1               	movwf	?_XBAPI_Command+4
  2602  00B9  3000               	movlw	0
  2603  00BA  00C0               	movwf	?_XBAPI_Command+3
  2604  00BB  3000               	movlw	0
  2605  00BC  00BF               	movwf	?_XBAPI_Command+2
  2606  00BD  30C1               	movlw	193
  2607  00BE  00C3               	movwf	?_XBAPI_Command+6
  2608  00BF  3000               	movlw	0
  2609  00C0  00C4               	movwf	?_XBAPI_Command+7
  2610  00C1  3000               	movlw	0
  2611  00C2  00C5               	movwf	?_XBAPI_Command+8
  2612  00C3  3000               	movlw	0
  2613  00C4  00C6               	movwf	?_XBAPI_Command+9
  2614  00C5  3182  2297  3180   	fcall	_XBAPI_Command
  2615  00C8  0020               	movlb	0	; select bank0
  2616  00C9  083E               	movf	?_XBAPI_Command+1,w
  2617  00CA  01E3               	clrf	_error+1
  2618  00CB  07E3               	addwf	_error+1,f
  2619  00CC  083D               	movf	?_XBAPI_Command,w
  2620  00CD  01E2               	clrf	_error
  2621  00CE  07E2               	addwf	_error,f
  2622                           
  2623                           ;main.c: 99: if(error) {
  2624  00CF  0863               	movf	_error+1,w
  2625  00D0  0462               	iorwf	_error,w
  2626  00D1  1903               	skipnz
  2627  00D2  28D7               	goto	l2458
  2628                           
  2629                           ;main.c: 100: XBee_Disable();
  2630  00D3  318D  25A8  3180   	fcall	_XBee_Disable
  2631  00D6                     l79:	
  2632                           ;main.c: 101: while(1){
  2633                           
  2634  00D6  28D6               	goto	l79
  2635  00D7                     l2458:	
  2636                           
  2637                           ;main.c: 103: }
  2638                           ;main.c: 104: }
  2639                           ;main.c: 106: cmd_itr++;
  2640  00D7  3001               	movlw	1
  2641  00D8  0020               	movlb	0	; select bank0
  2642  00D9  07E0               	addwf	_cmd_itr,f
  2643  00DA  3000               	movlw	0
  2644  00DB  3DE1               	addwfc	_cmd_itr+1,f
  2645                           
  2646                           ;main.c: 108: ADC_Enable(1, 1);
  2647  00DC  01F1               	clrf	?_ADC_Enable
  2648  00DD  0AF1               	incf	?_ADC_Enable,f
  2649  00DE  3001               	movlw	1
  2650  00DF  3186  268E  3180   	fcall	_ADC_Enable
  2651                           
  2652                           ;main.c: 111: CRC16_Init();
  2653  00E2  318D  25C3  3180   	fcall	_CRC16_Init
  2654                           
  2655                           ;main.c: 116: SendReceiverBroadcastRequest();
  2656  00E5  318E  26E5  3180   	fcall	_SendReceiverBroadcastRequest
  2657                           
  2658                           ;main.c: 117: XBAPI_HandleFrame(0x90, 0);
  2659  00E8  3090               	movlw	144
  2660  00E9  0020               	movlb	0	; select bank0
  2661  00EA  00AE               	movwf	?_XBAPI_HandleFrame
  2662  00EB  3000               	movlw	0
  2663  00EC  00AF               	movwf	?_XBAPI_HandleFrame+1
  2664  00ED  3000               	movlw	0
  2665  00EE  00B0               	movwf	?_XBAPI_HandleFrame+2
  2666  00EF  3000               	movlw	0
  2667  00F0  00B1               	movwf	?_XBAPI_HandleFrame+3
  2668  00F1  3181  2129  3180   	fcall	_XBAPI_HandleFrame
  2669                           
  2670                           ;main.c: 120: PORTBbits.RB0 = 0;
  2671  00F4  0020               	movlb	0	; select bank0
  2672  00F5  100D               	bcf	13,0	;volatile
  2673  00F6                     l2470:	
  2674                           ;main.c: 123: while(1) {
  2675                           
  2676                           
  2677                           ;main.c: 124: PORTCbits.RC3 = 1;
  2678  00F6  0020               	movlb	0	; select bank0
  2679  00F7  158E               	bsf	14,3	;volatile
  2680                           
  2681                           ;main.c: 127: long thermistorResistance = ADC_Read(10);
  2682  00F8  300A               	movlw	10
  2683  00F9  3186  2600  3180   	fcall	_ADC_Read
  2684  00FC  0020               	movlb	0	; select bank0
  2685  00FD  0827               	movf	?_ADC_Read,w
  2686  00FE  00DA               	movwf	main@thermistorResistance
  2687  00FF  0828               	movf	?_ADC_Read+1,w
  2688  0100  00DB               	movwf	main@thermistorResistance+1
  2689  0101  01DC               	clrf	main@thermistorResistance+2
  2690  0102  01DD               	clrf	main@thermistorResistance+3
  2691                           
  2692                           ;main.c: 129: XBee_Wake();
  2693  0103  3184  24B4  3180   	fcall	_XBee_Wake
  2694                           
  2695                           ;main.c: 131: SendReport(thermistorResistance, 5000, 3948, 16200);
  2696  0106  0020               	movlb	0	; select bank0
  2697  0107  085B               	movf	main@thermistorResistance+1,w
  2698  0108  01CD               	clrf	?_SendReport+1
  2699  0109  07CD               	addwf	?_SendReport+1,f
  2700  010A  085A               	movf	main@thermistorResistance,w
  2701  010B  01CC               	clrf	?_SendReport
  2702  010C  07CC               	addwf	?_SendReport,f
  2703  010D  3088               	movlw	136
  2704  010E  00CE               	movwf	?_SendReport+2
  2705  010F  3013               	movlw	19
  2706  0110  00CF               	movwf	?_SendReport+3
  2707  0111  306C               	movlw	108
  2708  0112  00D0               	movwf	?_SendReport+4
  2709  0113  300F               	movlw	15
  2710  0114  00D1               	movwf	?_SendReport+5
  2711  0115  3048               	movlw	72
  2712  0116  00D2               	movwf	?_SendReport+6
  2713  0117  303F               	movlw	63
  2714  0118  00D3               	movwf	?_SendReport+7
  2715  0119  3185  25B1  3180   	fcall	_SendReport
  2716                           
  2717                           ;main.c: 132: XBee_Sleep();
  2718  011C  318D  25AB  3180   	fcall	_XBee_Sleep
  2719                           
  2720                           ;main.c: 133: PORTCbits.RC3 = 0;
  2721  011F  0020               	movlb	0	; select bank0
  2722  0120  118E               	bcf	14,3	;volatile
  2723                           
  2724                           ;main.c: 135: sleep(59);
  2725  0121  303B               	movlw	59
  2726  0122  00F1               	movwf	?_sleep
  2727  0123  3000               	movlw	0
  2728  0124  00F2               	movwf	?_sleep+1
  2729  0125  318E  2619  3180   	fcall	_sleep
  2730  0128  28F6               	goto	l2470
  2731  0129                     __end_of_main:	
  2732                           
  2733                           	psect	text1
  2734  0DAB                     __ptext1:	
  2735 ;; *************** function _XBee_Sleep *****************
  2736 ;; Defined at:
  2737 ;;		line 38 in file "xbee.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;		None
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;		None               void
  2744 ;; Registers used:
  2745 ;;		None
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2751 ;;      Params:         0       0       0       0       0       0       0       0
  2752 ;;      Locals:         0       0       0       0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0       0       0       0
  2754 ;;      Totals:         0       0       0       0       0       0       0       0
  2755 ;;Total ram usage:        0 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function _XBee_Sleep
  2767  0DAB                     _XBee_Sleep:	
  2768                           
  2769                           ;xbee.c: 39: PORTCbits.RC1 = 1;
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in _XBee_Sleep: []
  2773  0DAB  0020               	movlb	0	; select bank0
  2774  0DAC  148E               	bsf	14,1	;volatile
  2775  0DAD  0008               	return
  2776  0DAE                     __end_of_XBee_Sleep:	
  2777                           
  2778                           	psect	text2
  2779  05B1                     __ptext2:	
  2780 ;; *************** function _SendReport *****************
  2781 ;; Defined at:
  2782 ;;		line 12 in file "packets.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  thermistorRe    2   44[BANK0 ] int 
  2785 ;;  thermRes25C     2   46[BANK0 ] int 
  2786 ;;  thermBeta       2   48[BANK0 ] int 
  2787 ;;  topResValue     2   50[BANK0 ] int 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;		None               void
  2792 ;; Registers used:
  2793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2799 ;;      Params:         0       8       0       0       0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0       0       0       0
  2801 ;;      Temps:          0       1       0       0       0       0       0       0
  2802 ;;      Totals:         0       9       0       0       0       0       0       0
  2803 ;;Total ram usage:        9 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    7
  2806 ;; This function calls:
  2807 ;;		_CRC16_Generate
  2808 ;;		_SendPacket
  2809 ;; This function is called by:
  2810 ;;		_main
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _SendReport
  2816  05B1                     _SendReport:	
  2817                           
  2818                           ;packets.c: 14: packet_buffer.header.command = 0x00;
  2819                           
  2820                           ;incstack = 0
  2821                           ; Regs used in _SendReport: [allreg]
  2822  05B1  0021               	movlb	1	; select bank1
  2823  05B2  01CD               	clrf	(_packet_buffer^(0+128)+5)
  2824                           
  2825                           ;packets.c: 15: packet_buffer.header.magic = 0xAA55;
  2826  05B3  3055               	movlw	85
  2827  05B4  00C8               	movwf	_packet_buffer^(0+128)
  2828  05B5  30AA               	movlw	170
  2829  05B6  00C9               	movwf	(_packet_buffer^(0+128)+1)
  2830                           
  2831                           ;packets.c: 16: packet_buffer.header.revision = 0;
  2832  05B7  01CC               	clrf	(_packet_buffer^(0+128)+4)
  2833                           
  2834                           ;packets.c: 17: packet_buffer.report.thermistorBeta = thermBeta;
  2835  05B8  0020               	movlb	0	; select bank0
  2836  05B9  0851               	movf	SendReport@thermBeta+1,w
  2837  05BA  0021               	movlb	1	; select bank1
  2838  05BB  01D5               	clrf	((_packet_buffer+1)^(0+128)+12)
  2839  05BC  07D5               	addwf	((_packet_buffer+1)^(0+128)+12),f
  2840  05BD  0020               	movlb	0	; select bank0
  2841  05BE  0850               	movf	SendReport@thermBeta,w
  2842  05BF  0021               	movlb	1	; select bank1
  2843  05C0  01D4               	clrf	(_packet_buffer^(0+128)+12)
  2844  05C1  07D4               	addwf	(_packet_buffer^(0+128)+12),f
  2845                           
  2846                           ;packets.c: 18: packet_buffer.report.thermistorResistance = thermistorResistance;
  2847  05C2  0020               	movlb	0	; select bank0
  2848  05C3  084D               	movf	SendReport@thermistorResistance+1,w
  2849  05C4  0021               	movlb	1	; select bank1
  2850  05C5  01D1               	clrf	((_packet_buffer+1)^(0+128)+8)
  2851  05C6  07D1               	addwf	((_packet_buffer+1)^(0+128)+8),f
  2852  05C7  0020               	movlb	0	; select bank0
  2853  05C8  084C               	movf	SendReport@thermistorResistance,w
  2854  05C9  0021               	movlb	1	; select bank1
  2855  05CA  01D0               	clrf	(_packet_buffer^(0+128)+8)
  2856  05CB  07D0               	addwf	(_packet_buffer^(0+128)+8),f
  2857                           
  2858                           ;packets.c: 19: packet_buffer.report.thermistorResistance25C = thermRes25C;
  2859  05CC  0020               	movlb	0	; select bank0
  2860  05CD  084F               	movf	SendReport@thermRes25C+1,w
  2861  05CE  0021               	movlb	1	; select bank1
  2862  05CF  01D3               	clrf	((_packet_buffer+1)^(0+128)+10)
  2863  05D0  07D3               	addwf	((_packet_buffer+1)^(0+128)+10),f
  2864  05D1  0020               	movlb	0	; select bank0
  2865  05D2  084E               	movf	SendReport@thermRes25C,w
  2866  05D3  0021               	movlb	1	; select bank1
  2867  05D4  01D2               	clrf	(_packet_buffer^(0+128)+10)
  2868  05D5  07D2               	addwf	(_packet_buffer^(0+128)+10),f
  2869                           
  2870                           ;packets.c: 20: packet_buffer.report.topResistorValue = topResValue;
  2871  05D6  0020               	movlb	0	; select bank0
  2872  05D7  0853               	movf	SendReport@topResValue+1,w
  2873  05D8  0021               	movlb	1	; select bank1
  2874  05D9  01D7               	clrf	((_packet_buffer+1)^(0+128)+14)
  2875  05DA  07D7               	addwf	((_packet_buffer+1)^(0+128)+14),f
  2876  05DB  0020               	movlb	0	; select bank0
  2877  05DC  0852               	movf	SendReport@topResValue,w
  2878  05DD  0021               	movlb	1	; select bank1
  2879  05DE  01D6               	clrf	(_packet_buffer^(0+128)+14)
  2880  05DF  07D6               	addwf	(_packet_buffer^(0+128)+14),f
  2881                           
  2882                           ;packets.c: 21: packet_buffer.report.xbee_reset = xbee_reset_flag | (tmr1_err<<1);
  2883  05E0  0020               	movlb	0	; select bank0
  2884  05E1  3569               	lslf	_tmr1_err,w
  2885  05E2  046A               	iorwf	_xbee_reset_flag,w
  2886  05E3  00D4               	movwf	??_SendReport
  2887  05E4  0854               	movf	??_SendReport,w
  2888  05E5  0021               	movlb	1	; select bank1
  2889  05E6  00D8               	movwf	(_packet_buffer^(0+128)+16)
  2890                           
  2891                           ;packets.c: 22: packet_buffer.header.crc16 = CRC16_Generate((byte*)&packet_buffer, sizeo
      +                          f(Packet));
  2892  05E7  3020               	movlw	32
  2893  05E8  0020               	movlb	0	; select bank0
  2894  05E9  00A0               	movwf	?_CRC16_Generate
  2895  05EA  3000               	movlw	0
  2896  05EB  00A1               	movwf	?_CRC16_Generate+1
  2897  05EC  30C8               	movlw	_packet_buffer& (0+255)
  2898  05ED  318F  27D3  3185   	fcall	_CRC16_Generate
  2899  05F0  0020               	movlb	0	; select bank0
  2900  05F1  0821               	movf	?_CRC16_Generate+1,w
  2901  05F2  0021               	movlb	1	; select bank1
  2902  05F3  01CB               	clrf	((_packet_buffer+1)^(0+128)+2)
  2903  05F4  07CB               	addwf	((_packet_buffer+1)^(0+128)+2),f
  2904  05F5  0020               	movlb	0	; select bank0
  2905  05F6  0820               	movf	?_CRC16_Generate,w
  2906  05F7  0021               	movlb	1	; select bank1
  2907  05F8  01CA               	clrf	(_packet_buffer^(0+128)+2)
  2908  05F9  07CA               	addwf	(_packet_buffer^(0+128)+2),f
  2909                           
  2910                           ;packets.c: 24: xbee_reset_flag = 0;
  2911  05FA  0020               	movlb	0	; select bank0
  2912  05FB  01EA               	clrf	_xbee_reset_flag
  2913                           
  2914                           ;packets.c: 26: SendPacket(&packet_buffer);
  2915  05FC  30C8               	movlw	_packet_buffer& (0+255)
  2916  05FD  318F  2707         	fcall	_SendPacket
  2917  05FF  0008               	return
  2918  0600                     __end_of_SendReport:	
  2919                           
  2920                           	psect	text3
  2921  04B4                     __ptext3:	
  2922 ;; *************** function _XBee_Wake *****************
  2923 ;; Defined at:
  2924 ;;		line 42 in file "xbee.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  i               4   15[BANK0 ] long 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;		None               void
  2931 ;; Registers used:
  2932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2938 ;;      Params:         0       0       0       0       0       0       0       0
  2939 ;;      Locals:         0       4       0       0       0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0
  2941 ;;      Totals:         0       4       0       0       0       0       0       0
  2942 ;;Total ram usage:        4 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    4
  2945 ;; This function calls:
  2946 ;;		_XBee_Enable
  2947 ;;		_XBee_Disable
  2948 ;;		_timer1_poll_delay_ms
  2949 ;; This function is called by:
  2950 ;;		_main
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           
  2955                           ;psect for function _XBee_Wake
  2956  04B4                     _XBee_Wake:	
  2957                           
  2958                           ;xbee.c: 43: PORTCbits.RC1 = 0;
  2959                           
  2960                           ;incstack = 0
  2961                           ; Regs used in _XBee_Wake: [allreg]
  2962  04B4  0020               	movlb	0	; select bank0
  2963  04B5  108E               	bcf	14,1	;volatile
  2964                           
  2965                           ;xbee.c: 45: long i = 0;
  2966  04B6  3000               	movlw	0
  2967  04B7  00B2               	movwf	XBee_Wake@i+3
  2968  04B8  3000               	movlw	0
  2969  04B9  00B1               	movwf	XBee_Wake@i+2
  2970  04BA  3000               	movlw	0
  2971  04BB  00B0               	movwf	XBee_Wake@i+1
  2972  04BC  3000               	movlw	0
  2973  04BD  00AF               	movwf	XBee_Wake@i
  2974  04BE                     l233:	
  2975                           ;xbee.c: 46: while(PORTCbits.RC4 && i++ < 8000000) {
  2976                           
  2977  04BE  1E0E               	btfss	14,4	;volatile
  2978  04BF  2CDC               	goto	l2620
  2979  04C0  3001               	movlw	1
  2980  04C1  07AF               	addwf	XBee_Wake@i,f
  2981  04C2  3000               	movlw	0
  2982  04C3  3DB0               	addwfc	XBee_Wake@i+1,f
  2983  04C4  3000               	movlw	0
  2984  04C5  3DB1               	addwfc	XBee_Wake@i+2,f
  2985  04C6  3000               	movlw	0
  2986  04C7  3DB2               	addwfc	XBee_Wake@i+3,f
  2987  04C8  0832               	movf	XBee_Wake@i+3,w
  2988  04C9  3A80               	xorlw	128
  2989  04CA  00FF               	movwf	127
  2990  04CB  3000               	movlw	0
  2991  04CC  3A80               	xorlw	128
  2992  04CD  027F               	subwf	127,w
  2993  04CE  1D03               	skipz
  2994  04CF  2CDA               	goto	u2113
  2995  04D0  307A               	movlw	122
  2996  04D1  0231               	subwf	XBee_Wake@i+2,w
  2997  04D2  1D03               	skipz
  2998  04D3  2CDA               	goto	u2113
  2999  04D4  3012               	movlw	18
  3000  04D5  0230               	subwf	XBee_Wake@i+1,w
  3001  04D6  1D03               	skipz
  3002  04D7  2CDA               	goto	u2113
  3003  04D8  3001               	movlw	1
  3004  04D9  022F               	subwf	XBee_Wake@i,w
  3005  04DA                     u2113:	
  3006  04DA  1C03               	skipc
  3007  04DB  2CBE               	goto	l233
  3008  04DC                     l2620:	
  3009                           
  3010                           ;xbee.c: 47: }
  3011                           ;xbee.c: 50: if(i >= 8000000-1 && PORTCbits.RC4) {
  3012  04DC  0832               	movf	XBee_Wake@i+3,w
  3013  04DD  3A80               	xorlw	128
  3014  04DE  00FF               	movwf	127
  3015  04DF  3000               	movlw	0
  3016  04E0  3A80               	xorlw	128
  3017  04E1  027F               	subwf	127,w
  3018  04E2  1D03               	skipz
  3019  04E3  2CEE               	goto	u2123
  3020  04E4  307A               	movlw	122
  3021  04E5  0231               	subwf	XBee_Wake@i+2,w
  3022  04E6  1D03               	skipz
  3023  04E7  2CEE               	goto	u2123
  3024  04E8  3011               	movlw	17
  3025  04E9  0230               	subwf	XBee_Wake@i+1,w
  3026  04EA  1D03               	skipz
  3027  04EB  2CEE               	goto	u2123
  3028  04EC  30FF               	movlw	255
  3029  04ED  022F               	subwf	XBee_Wake@i,w
  3030  04EE                     u2123:	
  3031  04EE  1C03               	skipc
  3032  04EF  0008               	return
  3033  04F0  1E0E               	btfss	14,4	;volatile
  3034  04F1  0008               	return
  3035                           
  3036                           ;xbee.c: 51: PORTBbits.RB0 = 1;
  3037  04F2  140D               	bsf	13,0	;volatile
  3038                           
  3039                           ;xbee.c: 52: XBee_Disable();
  3040  04F3  318D  25A8  3184   	fcall	_XBee_Disable
  3041                           
  3042                           ;xbee.c: 54: timer1_poll_delay_ms(1);
  3043  04F6  3001               	movlw	1
  3044  04F7  0020               	movlb	0	; select bank0
  3045  04F8  00A1               	movwf	?_timer1_poll_delay_ms
  3046  04F9  3000               	movlw	0
  3047  04FA  00A2               	movwf	?_timer1_poll_delay_ms+1
  3048  04FB  318E  2631  3184   	fcall	_timer1_poll_delay_ms
  3049                           
  3050                           ;xbee.c: 55: XBee_Enable(9600);
  3051  04FE  3080               	movlw	128
  3052  04FF  0020               	movlb	0	; select bank0
  3053  0500  00AD               	movwf	?_XBee_Enable
  3054  0501  3025               	movlw	37
  3055  0502  00AE               	movwf	?_XBee_Enable+1
  3056  0503  318E  2686         	fcall	_XBee_Enable
  3057                           
  3058                           ;xbee.c: 56: PORTBbits.RB0 = 0;
  3059  0505  0020               	movlb	0	; select bank0
  3060  0506  100D               	bcf	13,0	;volatile
  3061                           
  3062                           ;xbee.c: 57: xbee_reset_flag = 1;
  3063  0507  01EA               	clrf	_xbee_reset_flag
  3064  0508  0AEA               	incf	_xbee_reset_flag,f
  3065  0509  0008               	return
  3066  050A                     __end_of_XBee_Wake:	
  3067                           
  3068                           	psect	text4
  3069  0600                     __ptext4:	
  3070 ;; *************** function _ADC_Read *****************
  3071 ;; Defined at:
  3072 ;;		line 39 in file "adc.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  channel         1    wreg     unsigned char 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  channel         1   19[BANK0 ] unsigned char 
  3077 ;;  res             8   11[BANK0 ] int [4]
  3078 ;;  sum             2   20[BANK0 ] int 
  3079 ;;  i               1   22[BANK0 ] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  2    7[BANK0 ] unsigned int 
  3082 ;; Registers used:
  3083 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3089 ;;      Params:         0       2       0       0       0       0       0       0
  3090 ;;      Locals:         0      12       0       0       0       0       0       0
  3091 ;;      Temps:          0       2       0       0       0       0       0       0
  3092 ;;      Totals:         0      16       0       0       0       0       0       0
  3093 ;;Total ram usage:       16 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    4
  3096 ;; This function calls:
  3097 ;;		_ADC_ReadOne
  3098 ;;		___awdiv
  3099 ;; This function is called by:
  3100 ;;		_main
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           
  3105                           ;psect for function _ADC_Read
  3106  0600                     _ADC_Read:	
  3107                           
  3108                           ;incstack = 0
  3109                           ; Regs used in _ADC_Read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3110                           ;ADC_Read@channel stored from wreg
  3111  0600  0020               	movlb	0	; select bank0
  3112  0601  00B3               	movwf	ADC_Read@channel
  3113                           
  3114                           ;adc.c: 40: int res[4];
  3115                           ;adc.c: 41: byte i;
  3116                           ;adc.c: 42: for(i=0; i<4; i++) {
  3117  0602  01B6               	clrf	ADC_Read@i
  3118  0603  3004               	movlw	4
  3119  0604  0236               	subwf	ADC_Read@i,w
  3120  0605  1803               	btfsc	3,0
  3121  0606  2E1C               	goto	l2598
  3122  0607                     l2592:	
  3123                           
  3124                           ;adc.c: 43: res[i] = ADC_ReadOne(channel);
  3125  0607  0833               	movf	ADC_Read@channel,w
  3126  0608  3187  2776  3186   	fcall	_ADC_ReadOne
  3127  060B  0020               	movlb	0	; select bank0
  3128  060C  3536               	lslf	ADC_Read@i,w
  3129  060D  3E2B               	addlw	ADC_Read@res& (0+255)
  3130  060E  0086               	movwf	6
  3131  060F  0187               	clrf	7
  3132  0610  0821               	movf	?_ADC_ReadOne,w
  3133  0611  3FC0               	movwi [0]fsr1
  3134  0612  0822               	movf	?_ADC_ReadOne+1,w
  3135  0613  3FC1               	movwi [1]fsr1
  3136  0614  3001               	movlw	1
  3137  0615  00A9               	movwf	??_ADC_Read
  3138  0616  0829               	movf	??_ADC_Read,w
  3139  0617  07B6               	addwf	ADC_Read@i,f
  3140  0618  3004               	movlw	4
  3141  0619  0236               	subwf	ADC_Read@i,w
  3142  061A  1C03               	skipc
  3143  061B  2E07               	goto	l2592
  3144  061C                     l2598:	
  3145                           
  3146                           ;adc.c: 44: }
  3147                           ;adc.c: 46: int sum = 0;
  3148  061C  01B4               	clrf	ADC_Read@sum
  3149  061D  01B5               	clrf	ADC_Read@sum+1
  3150                           
  3151                           ;adc.c: 47: for(i=0; i<4; i++) {
  3152  061E  01B6               	clrf	ADC_Read@i
  3153  061F  3004               	movlw	4
  3154  0620  0236               	subwf	ADC_Read@i,w
  3155  0621  1803               	btfsc	3,0
  3156  0622  2E37               	goto	l2610
  3157  0623                     l2604:	
  3158                           
  3159                           ;adc.c: 48: sum += res[i];
  3160  0623  3536               	lslf	ADC_Read@i,w
  3161  0624  3E2B               	addlw	ADC_Read@res& (0+255)
  3162  0625  0086               	movwf	6
  3163  0626  0187               	clrf	7
  3164  0627  3F40               	moviw [0]fsr1
  3165  0628  00A9               	movwf	??_ADC_Read
  3166  0629  3F41               	moviw [1]fsr1
  3167  062A  00AA               	movwf	??_ADC_Read+1
  3168  062B  0829               	movf	??_ADC_Read,w
  3169  062C  07B4               	addwf	ADC_Read@sum,f
  3170  062D  082A               	movf	??_ADC_Read+1,w
  3171  062E  3DB5               	addwfc	ADC_Read@sum+1,f
  3172  062F  3001               	movlw	1
  3173  0630  00A9               	movwf	??_ADC_Read
  3174  0631  0829               	movf	??_ADC_Read,w
  3175  0632  07B6               	addwf	ADC_Read@i,f
  3176  0633  3004               	movlw	4
  3177  0634  0236               	subwf	ADC_Read@i,w
  3178  0635  1C03               	skipc
  3179  0636  2E23               	goto	l2604
  3180  0637                     l2610:	
  3181                           
  3182                           ;adc.c: 49: }
  3183                           ;adc.c: 51: return sum/4;
  3184  0637  3004               	movlw	4
  3185  0638  00F1               	movwf	?___awdiv
  3186  0639  3000               	movlw	0
  3187  063A  00F2               	movwf	?___awdiv+1
  3188  063B  0835               	movf	ADC_Read@sum+1,w
  3189  063C  01F4               	clrf	?___awdiv+3
  3190  063D  07F4               	addwf	?___awdiv+3,f
  3191  063E  0834               	movf	ADC_Read@sum,w
  3192  063F  01F3               	clrf	?___awdiv+2
  3193  0640  07F3               	addwf	?___awdiv+2,f
  3194  0641  3185  255E         	fcall	___awdiv
  3195  0643  0872               	movf	?___awdiv+1,w
  3196  0644  0020               	movlb	0	; select bank0
  3197  0645  01A8               	clrf	?_ADC_Read+1
  3198  0646  07A8               	addwf	?_ADC_Read+1,f
  3199  0647  0871               	movf	?___awdiv,w
  3200  0648  01A7               	clrf	?_ADC_Read
  3201  0649  07A7               	addwf	?_ADC_Read,f
  3202  064A  0008               	return
  3203  064B                     __end_of_ADC_Read:	
  3204                           
  3205                           	psect	text5
  3206  055E                     __ptext5:	
  3207 ;; *************** function ___awdiv *****************
  3208 ;; Defined at:
  3209 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\awdiv.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  divisor         2    1[COMMON] int 
  3212 ;;  dividend        2    3[COMMON] int 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  quotient        2    8[COMMON] int 
  3215 ;;  sign            1    7[COMMON] unsigned char 
  3216 ;;  counter         1    6[COMMON] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  2    1[COMMON] int 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3226 ;;      Params:         4       0       0       0       0       0       0       0
  3227 ;;      Locals:         4       0       0       0       0       0       0       0
  3228 ;;      Temps:          1       0       0       0       0       0       0       0
  3229 ;;      Totals:         9       0       0       0       0       0       0       0
  3230 ;;Total ram usage:        9 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    1
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_ADC_Read
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function ___awdiv
  3242  055E                     ___awdiv:	
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3246  055E  01F7               	clrf	___awdiv@sign
  3247  055F  1FF2               	btfss	___awdiv@divisor+1,7
  3248  0560  2D68               	goto	l2330
  3249  0561  09F1               	comf	___awdiv@divisor,f
  3250  0562  09F2               	comf	___awdiv@divisor+1,f
  3251  0563  0AF1               	incf	___awdiv@divisor,f
  3252  0564  1903               	skipnz
  3253  0565  0AF2               	incf	___awdiv@divisor+1,f
  3254  0566  01F7               	clrf	___awdiv@sign
  3255  0567  0AF7               	incf	___awdiv@sign,f
  3256  0568                     l2330:	
  3257  0568  1FF4               	btfss	___awdiv@dividend+1,7
  3258  0569  2D73               	goto	l2336
  3259  056A  09F3               	comf	___awdiv@dividend,f
  3260  056B  09F4               	comf	___awdiv@dividend+1,f
  3261  056C  0AF3               	incf	___awdiv@dividend,f
  3262  056D  1903               	skipnz
  3263  056E  0AF4               	incf	___awdiv@dividend+1,f
  3264  056F  3001               	movlw	1
  3265  0570  00F5               	movwf	??___awdiv
  3266  0571  0875               	movf	??___awdiv,w
  3267  0572  06F7               	xorwf	___awdiv@sign,f
  3268  0573                     l2336:	
  3269  0573  01F8               	clrf	___awdiv@quotient
  3270  0574  01F9               	clrf	___awdiv@quotient+1
  3271  0575  0872               	movf	___awdiv@divisor+1,w
  3272  0576  0471               	iorwf	___awdiv@divisor,w
  3273  0577  1903               	skipnz
  3274  0578  2DA2               	goto	l2358
  3275  0579  01F6               	clrf	___awdiv@counter
  3276  057A  0AF6               	incf	___awdiv@counter,f
  3277  057B                     l2346:	
  3278  057B  1BF2               	btfsc	___awdiv@divisor+1,7
  3279  057C  2D87               	goto	l2348
  3280  057D  3001               	movlw	1
  3281  057E                     u1805:	
  3282  057E  35F1               	lslf	___awdiv@divisor,f
  3283  057F  0DF2               	rlf	___awdiv@divisor+1,f
  3284  0580  0B89               	decfsz	9,f
  3285  0581  2D7E               	goto	u1805
  3286  0582  3001               	movlw	1
  3287  0583  00F5               	movwf	??___awdiv
  3288  0584  0875               	movf	??___awdiv,w
  3289  0585  07F6               	addwf	___awdiv@counter,f
  3290  0586  2D7B               	goto	l2346
  3291  0587                     l2348:	
  3292  0587  3001               	movlw	1
  3293  0588                     u1825:	
  3294  0588  35F8               	lslf	___awdiv@quotient,f
  3295  0589  0DF9               	rlf	___awdiv@quotient+1,f
  3296  058A  0B89               	decfsz	9,f
  3297  058B  2D88               	goto	u1825
  3298  058C  0872               	movf	___awdiv@divisor+1,w
  3299  058D  0274               	subwf	___awdiv@dividend+1,w
  3300  058E  1D03               	skipz
  3301  058F  2D92               	goto	u1835
  3302  0590  0871               	movf	___awdiv@divisor,w
  3303  0591  0273               	subwf	___awdiv@dividend,w
  3304  0592                     u1835:	
  3305  0592  1C03               	skipc
  3306  0593  2D99               	goto	l2354
  3307  0594  0871               	movf	___awdiv@divisor,w
  3308  0595  02F3               	subwf	___awdiv@dividend,f
  3309  0596  0872               	movf	___awdiv@divisor+1,w
  3310  0597  3BF4               	subwfb	___awdiv@dividend+1,f
  3311  0598  1478               	bsf	___awdiv@quotient,0
  3312  0599                     l2354:	
  3313  0599  3001               	movlw	1
  3314  059A                     u1845:	
  3315  059A  36F2               	lsrf	___awdiv@divisor+1,f
  3316  059B  0CF1               	rrf	___awdiv@divisor,f
  3317  059C  0B89               	decfsz	9,f
  3318  059D  2D9A               	goto	u1845
  3319  059E  3001               	movlw	1
  3320  059F  02F6               	subwf	___awdiv@counter,f
  3321  05A0  1D03               	btfss	3,2
  3322  05A1  2D87               	goto	l2348
  3323  05A2                     l2358:	
  3324  05A2  0877               	movf	___awdiv@sign,w
  3325  05A3  1903               	btfsc	3,2
  3326  05A4  2DAA               	goto	l2362
  3327  05A5  09F8               	comf	___awdiv@quotient,f
  3328  05A6  09F9               	comf	___awdiv@quotient+1,f
  3329  05A7  0AF8               	incf	___awdiv@quotient,f
  3330  05A8  1903               	skipnz
  3331  05A9  0AF9               	incf	___awdiv@quotient+1,f
  3332  05AA                     l2362:	
  3333  05AA  0879               	movf	___awdiv@quotient+1,w
  3334  05AB  01F2               	clrf	?___awdiv+1
  3335  05AC  07F2               	addwf	?___awdiv+1,f
  3336  05AD  0878               	movf	___awdiv@quotient,w
  3337  05AE  01F1               	clrf	?___awdiv
  3338  05AF  07F1               	addwf	?___awdiv,f
  3339  05B0  0008               	return
  3340  05B1                     __end_of___awdiv:	
  3341                           
  3342                           	psect	text6
  3343  0776                     __ptext6:	
  3344 ;; *************** function _ADC_ReadOne *****************
  3345 ;; Defined at:
  3346 ;;		line 21 in file "adc.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  channel         1    wreg     unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  channel         1    4[BANK0 ] unsigned char 
  3351 ;;  result          2    5[BANK0 ] unsigned short 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  2    1[BANK0 ] unsigned int 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0, pclath, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3361 ;;      Params:         0       2       0       0       0       0       0       0
  3362 ;;      Locals:         0       3       0       0       0       0       0       0
  3363 ;;      Temps:          0       1       0       0       0       0       0       0
  3364 ;;      Totals:         0       6       0       0       0       0       0       0
  3365 ;;Total ram usage:        6 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    3
  3368 ;; This function calls:
  3369 ;;		_timer1_poll_delay
  3370 ;; This function is called by:
  3371 ;;		_ADC_Read
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           
  3376                           ;psect for function _ADC_ReadOne
  3377  0776                     _ADC_ReadOne:	
  3378                           
  3379                           ;incstack = 0
  3380                           ; Regs used in _ADC_ReadOne: [wreg+status,2+status,0+pclath+cstack]
  3381                           ;ADC_ReadOne@channel stored from wreg
  3382  0776  0020               	movlb	0	; select bank0
  3383  0777  00A4               	movwf	ADC_ReadOne@channel
  3384                           
  3385                           ;adc.c: 22: ADCON0bits.CHS = channel;
  3386  0778  0824               	movf	ADC_ReadOne@channel,w
  3387  0779  00A3               	movwf	??_ADC_ReadOne
  3388  077A  0DA3               	rlf	??_ADC_ReadOne,f
  3389  077B  0DA3               	rlf	??_ADC_ReadOne,f
  3390  077C  0021               	movlb	1	; select bank1
  3391  077D  081D               	movf	29,w	;volatile
  3392  077E  0020               	movlb	0	; select bank0
  3393  077F  0623               	xorwf	??_ADC_ReadOne,w
  3394  0780  3983               	andlw	-125
  3395  0781  0623               	xorwf	??_ADC_ReadOne,w
  3396  0782  0021               	movlb	1	; select bank1
  3397  0783  009D               	movwf	29	;volatile
  3398                           
  3399                           ;adc.c: 23: ADCON0bits.ADON = 1;
  3400  0784  141D               	bsf	29,0	;volatile
  3401                           
  3402                           ;adc.c: 26: timer1_poll_delay(50, 0);
  3403  0785  3032               	movlw	50
  3404  0786  00F7               	movwf	?_timer1_poll_delay
  3405  0787  3000               	movlw	0
  3406  0788  00F8               	movwf	?_timer1_poll_delay+1
  3407  0789  3000               	movlw	0
  3408  078A  00F9               	movwf	?_timer1_poll_delay+2
  3409  078B  3000               	movlw	0
  3410  078C  00FA               	movwf	?_timer1_poll_delay+3
  3411  078D  3186  26CE  3187   	fcall	_timer1_poll_delay
  3412                           
  3413                           ;adc.c: 28: ADCON0bits.GO = 1;
  3414  0790  0021               	movlb	1	; select bank1
  3415  0791  149D               	bsf	29,1	;volatile
  3416  0792                     l335:	
  3417                           ;adc.c: 29: while(ADCON0bits.GO) {}
  3418                           
  3419  0792  189D               	btfsc	29,1	;volatile
  3420  0793  2F92               	goto	l335
  3421                           
  3422                           ;adc.c: 31: unsigned short result = ADRES;
  3423  0794  081C               	movf	28,w	;volatile
  3424  0795  0020               	movlb	0	; select bank0
  3425  0796  01A6               	clrf	ADC_ReadOne@result+1
  3426  0797  07A6               	addwf	ADC_ReadOne@result+1,f
  3427  0798  0021               	movlb	1	; select bank1
  3428  0799  081B               	movf	27,w	;volatile
  3429  079A  0020               	movlb	0	; select bank0
  3430  079B  01A5               	clrf	ADC_ReadOne@result
  3431  079C  07A5               	addwf	ADC_ReadOne@result,f
  3432                           
  3433                           ;adc.c: 32: PIR1bits.ADIF = 0;
  3434  079D  1311               	bcf	17,6	;volatile
  3435                           
  3436                           ;adc.c: 34: ADCON0bits.ADON = 0;
  3437  079E  0021               	movlb	1	; select bank1
  3438  079F  101D               	bcf	29,0	;volatile
  3439                           
  3440                           ;adc.c: 36: return result;
  3441  07A0  0020               	movlb	0	; select bank0
  3442  07A1  0826               	movf	ADC_ReadOne@result+1,w
  3443  07A2  01A2               	clrf	?_ADC_ReadOne+1
  3444  07A3  07A2               	addwf	?_ADC_ReadOne+1,f
  3445  07A4  0825               	movf	ADC_ReadOne@result,w
  3446  07A5  01A1               	clrf	?_ADC_ReadOne
  3447  07A6  07A1               	addwf	?_ADC_ReadOne,f
  3448  07A7  0008               	return
  3449  07A8                     __end_of_ADC_ReadOne:	
  3450                           
  3451                           	psect	text7
  3452  0EE5                     __ptext7:	
  3453 ;; *************** function _SendReceiverBroadcastRequest *****************
  3454 ;; Defined at:
  3455 ;;		line 29 in file "packets.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;		None
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;		None
  3460 ;; Return value:  Size  Location     Type
  3461 ;;		None               void
  3462 ;; Registers used:
  3463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3469 ;;      Params:         0       0       0       0       0       0       0       0
  3470 ;;      Locals:         0       0       0       0       0       0       0       0
  3471 ;;      Temps:          0       1       0       0       0       0       0       0
  3472 ;;      Totals:         0       1       0       0       0       0       0       0
  3473 ;;Total ram usage:        1 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    7
  3476 ;; This function calls:
  3477 ;;		_CRC16_Generate
  3478 ;;		_SendPacket
  3479 ;; This function is called by:
  3480 ;;		_main
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           
  3485                           ;psect for function _SendReceiverBroadcastRequest
  3486  0EE5                     _SendReceiverBroadcastRequest:	
  3487                           
  3488                           ;packets.c: 30: packet_buffer.header.command = 0x04;
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in _SendReceiverBroadcastRequest: [allreg]
  3492  0EE5  3004               	movlw	4
  3493  0EE6  0020               	movlb	0	; select bank0
  3494  0EE7  00CC               	movwf	??_SendReceiverBroadcastRequest
  3495  0EE8  084C               	movf	??_SendReceiverBroadcastRequest,w
  3496  0EE9  0021               	movlb	1	; select bank1
  3497  0EEA  00CD               	movwf	(_packet_buffer^(0+128)+5)
  3498                           
  3499                           ;packets.c: 31: packet_buffer.header.magic = 0xAA55;
  3500  0EEB  3055               	movlw	85
  3501  0EEC  00C8               	movwf	_packet_buffer^(0+128)
  3502  0EED  30AA               	movlw	170
  3503  0EEE  00C9               	movwf	(_packet_buffer^(0+128)+1)
  3504                           
  3505                           ;packets.c: 32: packet_buffer.header.revision = 0;
  3506  0EEF  01CC               	clrf	(_packet_buffer^(0+128)+4)
  3507                           
  3508                           ;packets.c: 33: packet_buffer.header.crc16 = CRC16_Generate((byte*)&packet_buffer, sizeo
      +                          f(Packet));
  3509  0EF0  3020               	movlw	32
  3510  0EF1  0020               	movlb	0	; select bank0
  3511  0EF2  00A0               	movwf	?_CRC16_Generate
  3512  0EF3  3000               	movlw	0
  3513  0EF4  00A1               	movwf	?_CRC16_Generate+1
  3514  0EF5  30C8               	movlw	_packet_buffer& (0+255)
  3515  0EF6  318F  27D3  318E   	fcall	_CRC16_Generate
  3516  0EF9  0020               	movlb	0	; select bank0
  3517  0EFA  0821               	movf	?_CRC16_Generate+1,w
  3518  0EFB  0021               	movlb	1	; select bank1
  3519  0EFC  01CB               	clrf	((_packet_buffer+1)^(0+128)+2)
  3520  0EFD  07CB               	addwf	((_packet_buffer+1)^(0+128)+2),f
  3521  0EFE  0020               	movlb	0	; select bank0
  3522  0EFF  0820               	movf	?_CRC16_Generate,w
  3523  0F00  0021               	movlb	1	; select bank1
  3524  0F01  01CA               	clrf	(_packet_buffer^(0+128)+2)
  3525  0F02  07CA               	addwf	(_packet_buffer^(0+128)+2),f
  3526                           
  3527                           ;packets.c: 35: SendPacket(&packet_buffer);
  3528  0F03  30C8               	movlw	_packet_buffer& (0+255)
  3529  0F04  318F  2707         	fcall	_SendPacket
  3530  0F06  0008               	return
  3531  0F07                     __end_of_SendReceiverBroadcastRequest:	
  3532                           
  3533                           	psect	text8
  3534  0F07                     __ptext8:	
  3535 ;; *************** function _SendPacket *****************
  3536 ;; Defined at:
  3537 ;;		line 44 in file "packets.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  packet          1    wreg     PTR struct .
  3540 ;;		 -> packet_buffer(32), 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  packet          1   42[BANK0 ] PTR struct .
  3543 ;;		 -> packet_buffer(32), 
  3544 ;;  status          1   43[BANK0 ] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;		None               void
  3547 ;; Registers used:
  3548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3554 ;;      Params:         0       0       0       0       0       0       0       0
  3555 ;;      Locals:         0       2       0       0       0       0       0       0
  3556 ;;      Temps:          0       2       0       0       0       0       0       0
  3557 ;;      Totals:         0       4       0       0       0       0       0       0
  3558 ;;Total ram usage:        4 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    6
  3561 ;; This function calls:
  3562 ;;		_XBAPI_Transmit
  3563 ;; This function is called by:
  3564 ;;		_SendReport
  3565 ;;		_SendReceiverBroadcastRequest
  3566 ;;		___doTestSendPacket
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           
  3571                           ;psect for function _SendPacket
  3572  0F07                     _SendPacket:	
  3573                           
  3574                           ;incstack = 0
  3575                           ; Regs used in _SendPacket: [allreg]
  3576                           ;SendPacket@packet stored from wreg
  3577  0F07  0020               	movlb	0	; select bank0
  3578  0F08  00CA               	movwf	SendPacket@packet
  3579                           
  3580                           ;packets.c: 45: if(frame_id_itr == 0) {
  3581  0F09  08E8               	movf	_frame_id_itr,f
  3582  0F0A  1D03               	skipz
  3583  0F0B  2F10               	goto	l2788
  3584                           
  3585                           ;packets.c: 46: frame_id_itr++;
  3586  0F0C  3001               	movlw	1
  3587  0F0D  00C8               	movwf	??_SendPacket
  3588  0F0E  0848               	movf	??_SendPacket,w
  3589  0F0F  07E8               	addwf	_frame_id_itr,f
  3590  0F10                     l2788:	
  3591                           
  3592                           ;packets.c: 47: }
  3593                           ;packets.c: 48: byte status = 1;
  3594  0F10  01CB               	clrf	SendPacket@status
  3595  0F11  0ACB               	incf	SendPacket@status,f
  3596  0F12                     l2792:	
  3597                           ;packets.c: 49: while(status) {
  3598                           
  3599  0F12  08CB               	movf	SendPacket@status,f
  3600  0F13  1903               	btfsc	3,2
  3601  0F14  0008               	return
  3602                           
  3603                           ;packets.c: 50: status = XBAPI_Transmit(&dest_address, (byte*) packet, sizeof(Packet), 0
      +                          );
  3604  0F15  084A               	movf	SendPacket@packet,w
  3605  0F16  00C8               	movwf	??_SendPacket
  3606  0F17  0848               	movf	??_SendPacket,w
  3607  0F18  00BD               	movwf	?_XBAPI_Transmit
  3608  0F19  3020               	movlw	32
  3609  0F1A  00BE               	movwf	?_XBAPI_Transmit+1
  3610  0F1B  3000               	movlw	0
  3611  0F1C  00BF               	movwf	?_XBAPI_Transmit+2
  3612  0F1D  3000               	movlw	0
  3613  0F1E  00C0               	movwf	?_XBAPI_Transmit+3
  3614  0F1F  3000               	movlw	0
  3615  0F20  00C1               	movwf	?_XBAPI_Transmit+4
  3616  0F21  30C0               	movlw	_dest_address& (0+255)
  3617  0F22  3183  2344  318F   	fcall	_XBAPI_Transmit
  3618  0F25  0020               	movlb	0	; select bank0
  3619  0F26  083D               	movf	?_XBAPI_Transmit,w
  3620  0F27  00C9               	movwf	??_SendPacket+1
  3621  0F28  0849               	movf	??_SendPacket+1,w
  3622  0F29  00CB               	movwf	SendPacket@status
  3623  0F2A  2F12               	goto	l2792
  3624  0F2B                     __end_of_SendPacket:	
  3625                           
  3626                           	psect	text9
  3627  0344                     __ptext9:	
  3628 ;; *************** function _XBAPI_Transmit *****************
  3629 ;; Defined at:
  3630 ;;		line 116 in file "xbee.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  address         1    wreg     PTR struct __XBeeAddress
  3633 ;;		 -> dest_address(8), 
  3634 ;;  data            1   29[BANK0 ] PTR const unsigned char 
  3635 ;;		 -> packet_buffer(32), 
  3636 ;;  length          2   30[BANK0 ] int 
  3637 ;;  id              2   32[BANK0 ] int 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  address         1   35[BANK0 ] PTR struct __XBeeAddress
  3640 ;;		 -> dest_address(8), 
  3641 ;;  error           2   38[BANK0 ] int 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  2   29[BANK0 ] int 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3651 ;;      Params:         0       5       0       0       0       0       0       0
  3652 ;;      Locals:         0       5       0       0       0       0       0       0
  3653 ;;      Temps:          0       1       0       0       0       0       0       0
  3654 ;;      Totals:         0      11       0       0       0       0       0       0
  3655 ;;Total ram usage:       11 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    5
  3658 ;; This function calls:
  3659 ;;		_XBAPI_HandleFrame
  3660 ;;		_UART_TransmitMsg
  3661 ;;		_XBee_Reset
  3662 ;;		_checksum
  3663 ;;		_memcpy
  3664 ;; This function is called by:
  3665 ;;		_SendPacket
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           
  3670                           ;psect for function _XBAPI_Transmit
  3671  0344                     _XBAPI_Transmit:	
  3672                           
  3673                           ;incstack = 0
  3674                           ; Regs used in _XBAPI_Transmit: [allreg]
  3675                           ;XBAPI_Transmit@address stored from wreg
  3676  0344  0020               	movlb	0	; select bank0
  3677  0345  00C3               	movwf	XBAPI_Transmit@address
  3678                           
  3679                           ;xbee.c: 120: apiFrame.tx.start_delimiter = 0x7e;
  3680  0346  307E               	movlw	126
  3681  0347  00C2               	movwf	??_XBAPI_Transmit
  3682  0348  0842               	movf	??_XBAPI_Transmit,w
  3683  0349  0022               	movlb	2	; select bank2
  3684  034A  00A0               	movwf	_apiFrame^(0+256)
  3685                           
  3686                           ;xbee.c: 121: apiFrame.tx.length[0] = 0;
  3687  034B  01A1               	clrf	(_apiFrame^(0+256)+1)
  3688                           
  3689                           ;xbee.c: 122: apiFrame.tx.length[1] = sizeof(TxFrame)-4;
  3690  034C  302E               	movlw	46
  3691  034D  0020               	movlb	0	; select bank0
  3692  034E  00C2               	movwf	??_XBAPI_Transmit
  3693  034F  0842               	movf	??_XBAPI_Transmit,w
  3694  0350  0022               	movlb	2	; select bank2
  3695  0351  00A2               	movwf	(_apiFrame^(0+256)+2)
  3696                           
  3697                           ;xbee.c: 123: apiFrame.tx.frame_id = id;
  3698  0352  0020               	movlb	0	; select bank0
  3699  0353  0840               	movf	XBAPI_Transmit@id,w
  3700  0354  00C2               	movwf	??_XBAPI_Transmit
  3701  0355  0842               	movf	??_XBAPI_Transmit,w
  3702  0356  0022               	movlb	2	; select bank2
  3703  0357  00A4               	movwf	(_apiFrame^(0+256)+4)
  3704                           
  3705                           ;xbee.c: 124: apiFrame.tx.frame_type = 0x10;
  3706  0358  3010               	movlw	16
  3707  0359  0020               	movlb	0	; select bank0
  3708  035A  00C2               	movwf	??_XBAPI_Transmit
  3709  035B  0842               	movf	??_XBAPI_Transmit,w
  3710  035C  0022               	movlb	2	; select bank2
  3711  035D  00A3               	movwf	(_apiFrame^(0+256)+3)
  3712                           
  3713                           ;xbee.c: 125: memcpy(&apiFrame.tx.destination_address, address, sizeof(XBeeAddress));
  3714  035E  3025               	movlw	low (_apiFrame+5)
  3715  035F  00F1               	movwf	?_memcpy
  3716  0360  3001               	movlw	high (_apiFrame+5)
  3717  0361  00F2               	movwf	?_memcpy+1
  3718  0362  0020               	movlb	0	; select bank0
  3719  0363  0843               	movf	XBAPI_Transmit@address,w
  3720  0364  00F3               	movwf	?_memcpy+2
  3721  0365  3000               	movlw	0
  3722  0366  00F4               	movwf	?_memcpy+3
  3723  0367  3008               	movlw	8
  3724  0368  00F5               	movwf	?_memcpy+4
  3725  0369  3000               	movlw	0
  3726  036A  00F6               	movwf	?_memcpy+5
  3727  036B  318F  27A6  3183   	fcall	_memcpy
  3728                           
  3729                           ;xbee.c: 126: apiFrame.tx.reserved = 0xFEFF;
  3730  036E  30FF               	movlw	255
  3731  036F  0022               	movlb	2	; select bank2
  3732  0370  00AD               	movwf	(_apiFrame^(0+256)+13)
  3733  0371  30FE               	movlw	254
  3734  0372  00AE               	movwf	(_apiFrame^(0+256)+14)
  3735                           
  3736                           ;xbee.c: 127: apiFrame.tx.transmit_options = 0;
  3737  0373  01B0               	clrf	(_apiFrame^(0+256)+16)
  3738                           
  3739                           ;xbee.c: 128: apiFrame.tx.broadcast_radius = 0;
  3740  0374  01AF               	clrf	(_apiFrame^(0+256)+15)
  3741                           
  3742                           ;xbee.c: 129: memcpy(&apiFrame.tx.packet, data, (length>sizeof(Packet)) ? sizeof(Packet)
      +                           : length);
  3743  0375  3000               	movlw	0
  3744  0376  0020               	movlb	0	; select bank0
  3745  0377  023F               	subwf	XBAPI_Transmit@length+1,w
  3746  0378  3021               	movlw	33
  3747  0379  1903               	skipnz
  3748  037A  023E               	subwf	XBAPI_Transmit@length,w
  3749  037B  1803               	skipnc
  3750  037C  2B84               	goto	l2720
  3751  037D  083F               	movf	XBAPI_Transmit@length+1,w
  3752  037E  01C5               	clrf	_XBAPI_Transmit$864+1
  3753  037F  07C5               	addwf	_XBAPI_Transmit$864+1,f
  3754  0380  083E               	movf	XBAPI_Transmit@length,w
  3755  0381  01C4               	clrf	_XBAPI_Transmit$864
  3756  0382  07C4               	addwf	_XBAPI_Transmit$864,f
  3757  0383  2B88               	goto	l2722
  3758  0384                     l2720:	
  3759  0384  3020               	movlw	32
  3760  0385  00C4               	movwf	_XBAPI_Transmit$864
  3761  0386  3000               	movlw	0
  3762  0387  00C5               	movwf	_XBAPI_Transmit$864+1
  3763  0388                     l2722:	
  3764  0388  3031               	movlw	low (_apiFrame+17)
  3765  0389  00F1               	movwf	?_memcpy
  3766  038A  3001               	movlw	high (_apiFrame+17)
  3767  038B  00F2               	movwf	?_memcpy+1
  3768  038C  083D               	movf	XBAPI_Transmit@data,w
  3769  038D  00F3               	movwf	?_memcpy+2
  3770  038E  3000               	movlw	0
  3771  038F  00F4               	movwf	?_memcpy+3
  3772  0390  0845               	movf	_XBAPI_Transmit$864+1,w
  3773  0391  01F6               	clrf	?_memcpy+5
  3774  0392  07F6               	addwf	?_memcpy+5,f
  3775  0393  0844               	movf	_XBAPI_Transmit$864,w
  3776  0394  01F5               	clrf	?_memcpy+4
  3777  0395  07F5               	addwf	?_memcpy+4,f
  3778  0396  318F  27A6  3183   	fcall	_memcpy
  3779                           
  3780                           ;xbee.c: 130: apiFrame.tx.checksum = checksum(apiFrame.buffer+3, sizeof(TxFrame)-4);
  3781  0399  302E               	movlw	46
  3782  039A  00F1               	movwf	?_checksum
  3783  039B  3000               	movlw	0
  3784  039C  00F2               	movwf	?_checksum+1
  3785  039D  3023               	movlw	(_apiFrame+3)& (0+255)
  3786  039E  318F  272B  3183   	fcall	_checksum
  3787  03A1  0020               	movlb	0	; select bank0
  3788  03A2  00C2               	movwf	??_XBAPI_Transmit
  3789  03A3  0842               	movf	??_XBAPI_Transmit,w
  3790  03A4  0022               	movlb	2	; select bank2
  3791  03A5  00D1               	movwf	(_apiFrame^(0+256)+49)
  3792                           
  3793                           ;xbee.c: 132: UART_TransmitMsg((byte*)&apiFrame, sizeof(TxFrame), 0);
  3794  03A6  3032               	movlw	50
  3795  03A7  00F2               	movwf	?_UART_TransmitMsg
  3796  03A8  3000               	movlw	0
  3797  03A9  00F3               	movwf	?_UART_TransmitMsg+1
  3798  03AA  01F4               	clrf	?_UART_TransmitMsg+2
  3799  03AB  3020               	movlw	_apiFrame& (0+255)
  3800  03AC  3187  27A8  3183   	fcall	_UART_TransmitMsg
  3801                           
  3802                           ;xbee.c: 134: int error = 0;
  3803  03AF  0020               	movlb	0	; select bank0
  3804  03B0  01C6               	clrf	XBAPI_Transmit@error
  3805  03B1  01C7               	clrf	XBAPI_Transmit@error+1
  3806                           
  3807                           ;xbee.c: 135: if(id) {
  3808  03B2  0841               	movf	XBAPI_Transmit@id+1,w
  3809  03B3  0440               	iorwf	XBAPI_Transmit@id,w
  3810  03B4  1903               	skipnz
  3811  03B5  2BD2               	goto	l2738
  3812                           
  3813                           ;xbee.c: 136: error = XBAPI_HandleFrame(0x8B, 1);
  3814  03B6  308B               	movlw	139
  3815  03B7  00AE               	movwf	?_XBAPI_HandleFrame
  3816  03B8  3000               	movlw	0
  3817  03B9  00AF               	movwf	?_XBAPI_HandleFrame+1
  3818  03BA  3001               	movlw	1
  3819  03BB  00B0               	movwf	?_XBAPI_HandleFrame+2
  3820  03BC  3000               	movlw	0
  3821  03BD  00B1               	movwf	?_XBAPI_HandleFrame+3
  3822  03BE  3181  2129  3183   	fcall	_XBAPI_HandleFrame
  3823  03C1  0020               	movlb	0	; select bank0
  3824  03C2  082F               	movf	?_XBAPI_HandleFrame+1,w
  3825  03C3  01C7               	clrf	XBAPI_Transmit@error+1
  3826  03C4  07C7               	addwf	XBAPI_Transmit@error+1,f
  3827  03C5  082E               	movf	?_XBAPI_HandleFrame,w
  3828  03C6  01C6               	clrf	XBAPI_Transmit@error
  3829  03C7  07C6               	addwf	XBAPI_Transmit@error,f
  3830                           
  3831                           ;xbee.c: 137: if(error == -2) {
  3832  03C8  30FF               	movlw	255
  3833  03C9  0647               	xorwf	XBAPI_Transmit@error+1,w
  3834  03CA  1D03               	skipz
  3835  03CB  2BCE               	goto	u2205
  3836  03CC  30FE               	movlw	254
  3837  03CD  0646               	xorwf	XBAPI_Transmit@error,w
  3838  03CE                     u2205:	
  3839  03CE  1D03               	skipz
  3840  03CF  2BD2               	goto	l2738
  3841                           
  3842                           ;xbee.c: 139: XBee_Reset();
  3843  03D0  318D  25EE         	fcall	_XBee_Reset
  3844  03D2                     l2738:	
  3845                           
  3846                           ;xbee.c: 140: }
  3847                           ;xbee.c: 141: }
  3848                           ;xbee.c: 143: return error;
  3849  03D2  0020               	movlb	0	; select bank0
  3850  03D3  0847               	movf	XBAPI_Transmit@error+1,w
  3851  03D4  01BE               	clrf	?_XBAPI_Transmit+1
  3852  03D5  07BE               	addwf	?_XBAPI_Transmit+1,f
  3853  03D6  0846               	movf	XBAPI_Transmit@error,w
  3854  03D7  01BD               	clrf	?_XBAPI_Transmit
  3855  03D8  07BD               	addwf	?_XBAPI_Transmit,f
  3856  03D9  0008               	return
  3857  03DA                     __end_of_XBAPI_Transmit:	
  3858                           
  3859                           	psect	text10
  3860  0DEE                     __ptext10:	
  3861 ;; *************** function _XBee_Reset *****************
  3862 ;; Defined at:
  3863 ;;		line 32 in file "xbee.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;		None
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;		None
  3868 ;; Return value:  Size  Location     Type
  3869 ;;		None               void
  3870 ;; Registers used:
  3871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3877 ;;      Params:         0       0       0       0       0       0       0       0
  3878 ;;      Locals:         0       0       0       0       0       0       0       0
  3879 ;;      Temps:          0       0       0       0       0       0       0       0
  3880 ;;      Totals:         0       0       0       0       0       0       0       0
  3881 ;;Total ram usage:        0 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; Hardware stack levels required when called:    4
  3884 ;; This function calls:
  3885 ;;		_XBee_Enable
  3886 ;;		_XBee_Disable
  3887 ;;		_timer1_poll_delay_ms
  3888 ;; This function is called by:
  3889 ;;		_XBAPI_Transmit
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           
  3894                           ;psect for function _XBee_Reset
  3895  0DEE                     _XBee_Reset:	
  3896                           
  3897                           ;xbee.c: 33: XBee_Disable();
  3898                           
  3899                           ;incstack = 0
  3900                           ; Regs used in _XBee_Reset: [allreg]
  3901  0DEE  318D  25A8  318D   	fcall	_XBee_Disable
  3902                           
  3903                           ;xbee.c: 34: timer1_poll_delay_ms(1);
  3904  0DF1  3001               	movlw	1
  3905  0DF2  0020               	movlb	0	; select bank0
  3906  0DF3  00A1               	movwf	?_timer1_poll_delay_ms
  3907  0DF4  3000               	movlw	0
  3908  0DF5  00A2               	movwf	?_timer1_poll_delay_ms+1
  3909  0DF6  318E  2631  318D   	fcall	_timer1_poll_delay_ms
  3910                           
  3911                           ;xbee.c: 35: XBee_Enable(last_xbee_baud);
  3912  0DF9  0020               	movlb	0	; select bank0
  3913  0DFA  0865               	movf	_last_xbee_baud+1,w
  3914  0DFB  01AE               	clrf	?_XBee_Enable+1
  3915  0DFC  07AE               	addwf	?_XBee_Enable+1,f
  3916  0DFD  0864               	movf	_last_xbee_baud,w
  3917  0DFE  01AD               	clrf	?_XBee_Enable
  3918  0DFF  07AD               	addwf	?_XBee_Enable,f
  3919  0E00  318E  2686         	fcall	_XBee_Enable
  3920  0E02  0008               	return
  3921  0E03                     __end_of_XBee_Reset:	
  3922                           
  3923                           	psect	text11
  3924  0E31                     __ptext11:	
  3925 ;; *************** function _timer1_poll_delay_ms *****************
  3926 ;; Defined at:
  3927 ;;		line 51 in file "timer.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  ms              2    1[BANK0 ] unsigned short 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;		None               void
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0, pclath, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3941 ;;      Params:         0       2       0       0       0       0       0       0
  3942 ;;      Locals:         0       0       0       0       0       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0       0       0
  3944 ;;      Totals:         0       2       0       0       0       0       0       0
  3945 ;;Total ram usage:        2 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    3
  3948 ;; This function calls:
  3949 ;;		_timer1_poll_delay
  3950 ;;		___wmul
  3951 ;; This function is called by:
  3952 ;;		_XBee_Reset
  3953 ;;		_XBee_Wake
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           
  3958                           ;psect for function _timer1_poll_delay_ms
  3959  0E31                     _timer1_poll_delay_ms:	
  3960                           
  3961                           ;timer.c: 54: timer1_poll_delay(ms*(8000000/1000), 0);
  3962                           
  3963                           ;incstack = 0
  3964                           ; Regs used in _timer1_poll_delay_ms: [wreg+status,2+status,0+pclath+cstack]
  3965  0E31  0020               	movlb	0	; select bank0
  3966  0E32  0822               	movf	timer1_poll_delay_ms@ms+1,w
  3967  0E33  01F2               	clrf	?___wmul+1
  3968  0E34  07F2               	addwf	?___wmul+1,f
  3969  0E35  0821               	movf	timer1_poll_delay_ms@ms,w
  3970  0E36  01F1               	clrf	?___wmul
  3971  0E37  07F1               	addwf	?___wmul,f
  3972  0E38  3040               	movlw	64
  3973  0E39  00F3               	movwf	?___wmul+2
  3974  0E3A  301F               	movlw	31
  3975  0E3B  00F4               	movwf	?___wmul+3
  3976  0E3C  318E  2669  318E   	fcall	___wmul
  3977  0E3F  0872               	movf	?___wmul+1,w
  3978  0E40  01F8               	clrf	?_timer1_poll_delay+1
  3979  0E41  07F8               	addwf	?_timer1_poll_delay+1,f
  3980  0E42  0871               	movf	?___wmul,w
  3981  0E43  01F7               	clrf	?_timer1_poll_delay
  3982  0E44  07F7               	addwf	?_timer1_poll_delay,f
  3983  0E45  3000               	movlw	0
  3984  0E46  00F9               	movwf	?_timer1_poll_delay+2
  3985  0E47  3000               	movlw	0
  3986  0E48  00FA               	movwf	?_timer1_poll_delay+3
  3987  0E49  3186  26CE         	fcall	_timer1_poll_delay
  3988  0E4B  0008               	return
  3989  0E4C                     __end_of_timer1_poll_delay_ms:	
  3990                           
  3991                           	psect	text12
  3992  0E69                     __ptext12:	
  3993 ;; *************** function ___wmul *****************
  3994 ;; Defined at:
  3995 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\wmul.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  multiplier      2    1[COMMON] unsigned int 
  3998 ;;  multiplicand    2    3[COMMON] unsigned int 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  product         2    5[COMMON] unsigned int 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  2    1[COMMON] unsigned int 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4010 ;;      Params:         4       0       0       0       0       0       0       0
  4011 ;;      Locals:         2       0       0       0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0
  4013 ;;      Totals:         6       0       0       0       0       0       0       0
  4014 ;;Total ram usage:        6 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    1
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_timer1_poll_delay_ms
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           
  4025                           ;psect for function ___wmul
  4026  0E69                     ___wmul:	
  4027                           
  4028                           ;incstack = 0
  4029                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4030  0E69  01F5               	clrf	___wmul@product
  4031  0E6A  01F6               	clrf	___wmul@product+1
  4032  0E6B                     l2368:	
  4033  0E6B  1C71               	btfss	___wmul@multiplier,0
  4034  0E6C  2E71               	goto	l876
  4035  0E6D  0873               	movf	___wmul@multiplicand,w
  4036  0E6E  07F5               	addwf	___wmul@product,f
  4037  0E6F  0874               	movf	___wmul@multiplicand+1,w
  4038  0E70  3DF6               	addwfc	___wmul@product+1,f
  4039  0E71                     l876:	
  4040  0E71  3001               	movlw	1
  4041  0E72                     u1885:	
  4042  0E72  35F3               	lslf	___wmul@multiplicand,f
  4043  0E73  0DF4               	rlf	___wmul@multiplicand+1,f
  4044  0E74  0B89               	decfsz	9,f
  4045  0E75  2E72               	goto	u1885
  4046  0E76  3001               	movlw	1
  4047  0E77                     u1895:	
  4048  0E77  36F2               	lsrf	___wmul@multiplier+1,f
  4049  0E78  0CF1               	rrf	___wmul@multiplier,f
  4050  0E79  0B89               	decfsz	9,f
  4051  0E7A  2E77               	goto	u1895
  4052  0E7B  0872               	movf	___wmul@multiplier+1,w
  4053  0E7C  0471               	iorwf	___wmul@multiplier,w
  4054  0E7D  1D03               	skipz
  4055  0E7E  2E6B               	goto	l2368
  4056  0E7F  0876               	movf	___wmul@product+1,w
  4057  0E80  01F2               	clrf	?___wmul+1
  4058  0E81  07F2               	addwf	?___wmul+1,f
  4059  0E82  0875               	movf	___wmul@product,w
  4060  0E83  01F1               	clrf	?___wmul
  4061  0E84  07F1               	addwf	?___wmul,f
  4062  0E85  0008               	return
  4063  0E86                     __end_of___wmul:	
  4064                           
  4065                           	psect	text13
  4066  0DA8                     __ptext13:	
  4067 ;; *************** function _XBee_Disable *****************
  4068 ;; Defined at:
  4069 ;;		line 61 in file "xbee.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;		None               void
  4076 ;; Registers used:
  4077 ;;		None
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4083 ;;      Params:         0       0       0       0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0
  4086 ;;      Totals:         0       0       0       0       0       0       0       0
  4087 ;;Total ram usage:        0 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    1
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_main
  4094 ;;		_XBee_Reset
  4095 ;;		_XBee_Wake
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           
  4100                           ;psect for function _XBee_Disable
  4101  0DA8                     _XBee_Disable:	
  4102                           
  4103                           ;xbee.c: 62: PORTCbits.RC0 = 0;
  4104                           
  4105                           ;incstack = 0
  4106                           ; Regs used in _XBee_Disable: []
  4107  0DA8  0020               	movlb	0	; select bank0
  4108  0DA9  100E               	bcf	14,0	;volatile
  4109  0DAA  0008               	return
  4110  0DAB                     __end_of_XBee_Disable:	
  4111                           
  4112                           	psect	text14
  4113  0E86                     __ptext14:	
  4114 ;; *************** function _XBee_Enable *****************
  4115 ;; Defined at:
  4116 ;;		line 19 in file "xbee.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  baud            2   13[BANK0 ] int 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;		None               void
  4123 ;; Registers used:
  4124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4130 ;;      Params:         0       2       0       0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0
  4132 ;;      Temps:          0       0       0       0       0       0       0       0
  4133 ;;      Totals:         0       2       0       0       0       0       0       0
  4134 ;;Total ram usage:        2 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    3
  4137 ;; This function calls:
  4138 ;;		_sleep
  4139 ;;		_UART_Init
  4140 ;; This function is called by:
  4141 ;;		_main
  4142 ;;		_XBee_Reset
  4143 ;;		_XBee_Wake
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           
  4148                           ;psect for function _XBee_Enable
  4149  0E86                     _XBee_Enable:	
  4150                           
  4151                           ;xbee.c: 20: PORTCbits.RC0 = 1;
  4152                           
  4153                           ;incstack = 0
  4154                           ; Regs used in _XBee_Enable: [allreg]
  4155  0E86  0020               	movlb	0	; select bank0
  4156  0E87  140E               	bsf	14,0	;volatile
  4157                           
  4158                           ;xbee.c: 21: PORTCbits.RC1 = 0;
  4159  0E88  108E               	bcf	14,1	;volatile
  4160  0E89                     l218:	
  4161                           ;xbee.c: 23: while(!PORTCbits.RC2) {}
  4162                           
  4163  0E89  1D0E               	btfss	14,2	;volatile
  4164  0E8A  2E89               	goto	l218
  4165  0E8B                     l221:	
  4166                           ;xbee.c: 24: while(PORTCbits.RC4) {}
  4167                           
  4168  0E8B  1A0E               	btfsc	14,4	;volatile
  4169  0E8C  2E8B               	goto	l221
  4170                           
  4171                           ;xbee.c: 26: UART_Init(baud);
  4172  0E8D  082E               	movf	XBee_Enable@baud+1,w
  4173  0E8E  01A7               	clrf	?_UART_Init+1
  4174  0E8F  07A7               	addwf	?_UART_Init+1,f
  4175  0E90  082D               	movf	XBee_Enable@baud,w
  4176  0E91  01A6               	clrf	?_UART_Init
  4177  0E92  07A6               	addwf	?_UART_Init,f
  4178  0E93  3187  270E  318E   	fcall	_UART_Init
  4179                           
  4180                           ;xbee.c: 27: last_xbee_baud = baud;
  4181  0E96  0020               	movlb	0	; select bank0
  4182  0E97  082E               	movf	XBee_Enable@baud+1,w
  4183  0E98  01E5               	clrf	_last_xbee_baud+1
  4184  0E99  07E5               	addwf	_last_xbee_baud+1,f
  4185  0E9A  082D               	movf	XBee_Enable@baud,w
  4186  0E9B  01E4               	clrf	_last_xbee_baud
  4187  0E9C  07E4               	addwf	_last_xbee_baud,f
  4188                           
  4189                           ;xbee.c: 29: sleep(1);
  4190  0E9D  3001               	movlw	1
  4191  0E9E  00F1               	movwf	?_sleep
  4192  0E9F  3000               	movlw	0
  4193  0EA0  00F2               	movwf	?_sleep+1
  4194  0EA1  318E  2619         	fcall	_sleep
  4195  0EA3  0008               	return
  4196  0EA4                     __end_of_XBee_Enable:	
  4197                           
  4198                           	psect	text15
  4199  070E                     __ptext15:	
  4200 ;; *************** function _UART_Init *****************
  4201 ;; Defined at:
  4202 ;;		line 7 in file "uart.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  baud            2    6[BANK0 ] int 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  spbrg           2   10[COMMON] int 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;		None               void
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0, pclath, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4216 ;;      Params:         0       2       0       0       0       0       0       0
  4217 ;;      Locals:         2       0       0       0       0       0       0       0
  4218 ;;      Temps:          0       5       0       0       0       0       0       0
  4219 ;;      Totals:         2       7       0       0       0       0       0       0
  4220 ;;Total ram usage:        9 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    2
  4223 ;; This function calls:
  4224 ;;		___aldiv
  4225 ;; This function is called by:
  4226 ;;		_XBee_Enable
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           
  4231                           ;psect for function _UART_Init
  4232  070E                     _UART_Init:	
  4233                           
  4234                           ;uart.c: 8: TX1STAbits.SYNC = 0;
  4235                           
  4236                           ;incstack = 0
  4237                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  4238  070E  0023               	movlb	3	; select bank3
  4239  070F  121E               	bcf	30,4	;volatile
  4240                           
  4241                           ;uart.c: 9: RC1STAbits.SPEN = 1;
  4242  0710  179D               	bsf	29,7	;volatile
  4243                           
  4244                           ;uart.c: 10: RC1STAbits.CREN = 1;
  4245  0711  161D               	bsf	29,4	;volatile
  4246                           
  4247                           ;uart.c: 11: TX1STAbits.TXEN = 1;
  4248  0712  169E               	bsf	30,5	;volatile
  4249                           
  4250                           ;uart.c: 13: int spbrg = ((8000000/baud)>>6) - 1;
  4251  0713  0020               	movlb	0	; select bank0
  4252  0714  0826               	movf	UART_Init@baud,w
  4253  0715  00F1               	movwf	?___aldiv
  4254  0716  0827               	movf	UART_Init@baud+1,w
  4255  0717  00F2               	movwf	?___aldiv+1
  4256  0718  0D89               	rlf	9,f
  4257  0719  3B89               	subwfb	9,f
  4258  071A  0989               	comf	9,f
  4259  071B  00F3               	movwf	?___aldiv+2
  4260  071C  00F4               	movwf	?___aldiv+3
  4261  071D  3000               	movlw	0
  4262  071E  00F8               	movwf	?___aldiv+7
  4263  071F  307A               	movlw	122
  4264  0720  00F7               	movwf	?___aldiv+6
  4265  0721  3012               	movlw	18
  4266  0722  00F6               	movwf	?___aldiv+5
  4267  0723  3000               	movlw	0
  4268  0724  00F5               	movwf	?___aldiv+4
  4269  0725  3183  23DA  3187   	fcall	___aldiv
  4270  0728  0871               	movf	?___aldiv,w
  4271  0729  0020               	movlb	0	; select bank0
  4272  072A  00A8               	movwf	??_UART_Init
  4273  072B  0872               	movf	?___aldiv+1,w
  4274  072C  00A9               	movwf	??_UART_Init+1
  4275  072D  0873               	movf	?___aldiv+2,w
  4276  072E  00AA               	movwf	??_UART_Init+2
  4277  072F  0874               	movf	?___aldiv+3,w
  4278  0730  00AB               	movwf	??_UART_Init+3
  4279  0731  3006               	movlw	6
  4280  0732  00AC               	movwf	??_UART_Init+4
  4281  0733                     u1325:	
  4282  0733  37AB               	asrf	??_UART_Init+3,f
  4283  0734  0CAA               	rrf	??_UART_Init+2,f
  4284  0735  0CA9               	rrf	??_UART_Init+1,f
  4285  0736  0CA8               	rrf	??_UART_Init,f
  4286  0737  0BAC               	decfsz	??_UART_Init+4,f
  4287  0738  2F33               	goto	u1325
  4288  0739  0828               	movf	??_UART_Init,w
  4289  073A  3EFF               	addlw	255
  4290  073B  00FA               	movwf	UART_Init@spbrg
  4291  073C  30FF               	movlw	255
  4292  073D  3D29               	addwfc	??_UART_Init+1,w
  4293  073E  00FB               	movwf	UART_Init@spbrg+1
  4294                           
  4295                           ;uart.c: 14: SPBRG = spbrg;
  4296  073F  087A               	movf	UART_Init@spbrg,w
  4297  0740  0023               	movlb	3	; select bank3
  4298  0741  009B               	movwf	27	;volatile
  4299  0742  0008               	return
  4300  0743                     __end_of_UART_Init:	
  4301                           
  4302                           	psect	text16
  4303  03DA                     __ptext16:	
  4304 ;; *************** function ___aldiv *****************
  4305 ;; Defined at:
  4306 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic\aldiv.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  divisor         4    1[COMMON] long 
  4309 ;;  dividend        4    5[COMMON] long 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  quotient        4    2[BANK0 ] long 
  4312 ;;  sign            1    1[BANK0 ] unsigned char 
  4313 ;;  counter         1    0[BANK0 ] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  4    1[COMMON] long 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4323 ;;      Params:         8       0       0       0       0       0       0       0
  4324 ;;      Locals:         0       6       0       0       0       0       0       0
  4325 ;;      Temps:          1       0       0       0       0       0       0       0
  4326 ;;      Totals:         9       6       0       0       0       0       0       0
  4327 ;;Total ram usage:       15 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    1
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_UART_Init
  4334 ;;		_GetOhms
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           
  4339                           ;psect for function ___aldiv
  4340  03DA                     ___aldiv:	
  4341                           
  4342                           ;incstack = 0
  4343                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4344  03DA  0020               	movlb	0	; select bank0
  4345  03DB  01A1               	clrf	___aldiv@sign
  4346  03DC  1FF4               	btfss	___aldiv@divisor+3,7
  4347  03DD  2BEB               	goto	l546
  4348  03DE  09F1               	comf	___aldiv@divisor,f
  4349  03DF  09F2               	comf	___aldiv@divisor+1,f
  4350  03E0  09F3               	comf	___aldiv@divisor+2,f
  4351  03E1  09F4               	comf	___aldiv@divisor+3,f
  4352  03E2  0AF1               	incf	___aldiv@divisor,f
  4353  03E3  1903               	skipnz
  4354  03E4  0AF2               	incf	___aldiv@divisor+1,f
  4355  03E5  1903               	skipnz
  4356  03E6  0AF3               	incf	___aldiv@divisor+2,f
  4357  03E7  1903               	skipnz
  4358  03E8  0AF4               	incf	___aldiv@divisor+3,f
  4359  03E9  01A1               	clrf	___aldiv@sign
  4360  03EA  0AA1               	incf	___aldiv@sign,f
  4361  03EB                     l546:	
  4362  03EB  1FF8               	btfss	___aldiv@dividend+3,7
  4363  03EC  2BFC               	goto	l2292
  4364  03ED  09F5               	comf	___aldiv@dividend,f
  4365  03EE  09F6               	comf	___aldiv@dividend+1,f
  4366  03EF  09F7               	comf	___aldiv@dividend+2,f
  4367  03F0  09F8               	comf	___aldiv@dividend+3,f
  4368  03F1  0AF5               	incf	___aldiv@dividend,f
  4369  03F2  1903               	skipnz
  4370  03F3  0AF6               	incf	___aldiv@dividend+1,f
  4371  03F4  1903               	skipnz
  4372  03F5  0AF7               	incf	___aldiv@dividend+2,f
  4373  03F6  1903               	skipnz
  4374  03F7  0AF8               	incf	___aldiv@dividend+3,f
  4375  03F8  3001               	movlw	1
  4376  03F9  00F9               	movwf	??___aldiv
  4377  03FA  0879               	movf	??___aldiv,w
  4378  03FB  06A1               	xorwf	___aldiv@sign,f
  4379  03FC                     l2292:	
  4380  03FC  3000               	movlw	0
  4381  03FD  00A5               	movwf	___aldiv@quotient+3
  4382  03FE  3000               	movlw	0
  4383  03FF  00A4               	movwf	___aldiv@quotient+2
  4384  0400  3000               	movlw	0
  4385  0401  00A3               	movwf	___aldiv@quotient+1
  4386  0402  3000               	movlw	0
  4387  0403  00A2               	movwf	___aldiv@quotient
  4388  0404  0874               	movf	___aldiv@divisor+3,w
  4389  0405  0473               	iorwf	___aldiv@divisor+2,w
  4390  0406  0472               	iorwf	___aldiv@divisor+1,w
  4391  0407  0471               	iorwf	___aldiv@divisor,w
  4392  0408  1903               	skipnz
  4393  0409  2C45               	goto	l2314
  4394  040A  01A0               	clrf	___aldiv@counter
  4395  040B  0AA0               	incf	___aldiv@counter,f
  4396  040C                     l2300:	
  4397  040C  1BF4               	btfsc	___aldiv@divisor+3,7
  4398  040D  2C1A               	goto	l2302
  4399  040E  3001               	movlw	1
  4400  040F                     u1705:	
  4401  040F  35F1               	lslf	___aldiv@divisor,f
  4402  0410  0DF2               	rlf	___aldiv@divisor+1,f
  4403  0411  0DF3               	rlf	___aldiv@divisor+2,f
  4404  0412  0DF4               	rlf	___aldiv@divisor+3,f
  4405  0413  0B89               	decfsz	9,f
  4406  0414  2C0F               	goto	u1705
  4407  0415  3001               	movlw	1
  4408  0416  00F9               	movwf	??___aldiv
  4409  0417  0879               	movf	??___aldiv,w
  4410  0418  07A0               	addwf	___aldiv@counter,f
  4411  0419  2C0C               	goto	l2300
  4412  041A                     l2302:	
  4413  041A  3001               	movlw	1
  4414  041B                     u1725:	
  4415  041B  35A2               	lslf	___aldiv@quotient,f
  4416  041C  0DA3               	rlf	___aldiv@quotient+1,f
  4417  041D  0DA4               	rlf	___aldiv@quotient+2,f
  4418  041E  0DA5               	rlf	___aldiv@quotient+3,f
  4419  041F  0B89               	decfsz	9,f
  4420  0420  2C1B               	goto	u1725
  4421  0421  0874               	movf	___aldiv@divisor+3,w
  4422  0422  0278               	subwf	___aldiv@dividend+3,w
  4423  0423  1D03               	skipz
  4424  0424  2C2F               	goto	u1735
  4425  0425  0873               	movf	___aldiv@divisor+2,w
  4426  0426  0277               	subwf	___aldiv@dividend+2,w
  4427  0427  1D03               	skipz
  4428  0428  2C2F               	goto	u1735
  4429  0429  0872               	movf	___aldiv@divisor+1,w
  4430  042A  0276               	subwf	___aldiv@dividend+1,w
  4431  042B  1D03               	skipz
  4432  042C  2C2F               	goto	u1735
  4433  042D  0871               	movf	___aldiv@divisor,w
  4434  042E  0275               	subwf	___aldiv@dividend,w
  4435  042F                     u1735:	
  4436  042F  1C03               	skipc
  4437  0430  2C3A               	goto	l2310
  4438  0431  0871               	movf	___aldiv@divisor,w
  4439  0432  02F5               	subwf	___aldiv@dividend,f
  4440  0433  0872               	movf	___aldiv@divisor+1,w
  4441  0434  3BF6               	subwfb	___aldiv@dividend+1,f
  4442  0435  0873               	movf	___aldiv@divisor+2,w
  4443  0436  3BF7               	subwfb	___aldiv@dividend+2,f
  4444  0437  0874               	movf	___aldiv@divisor+3,w
  4445  0438  3BF8               	subwfb	___aldiv@dividend+3,f
  4446  0439  1422               	bsf	___aldiv@quotient,0
  4447  043A                     l2310:	
  4448  043A  3001               	movlw	1
  4449  043B                     u1745:	
  4450  043B  36F4               	lsrf	___aldiv@divisor+3,f
  4451  043C  0CF3               	rrf	___aldiv@divisor+2,f
  4452  043D  0CF2               	rrf	___aldiv@divisor+1,f
  4453  043E  0CF1               	rrf	___aldiv@divisor,f
  4454  043F  0B89               	decfsz	9,f
  4455  0440  2C3B               	goto	u1745
  4456  0441  3001               	movlw	1
  4457  0442  02A0               	subwf	___aldiv@counter,f
  4458  0443  1D03               	btfss	3,2
  4459  0444  2C1A               	goto	l2302
  4460  0445                     l2314:	
  4461  0445  0821               	movf	___aldiv@sign,w
  4462  0446  1903               	btfsc	3,2
  4463  0447  2C53               	goto	l2318
  4464  0448  09A2               	comf	___aldiv@quotient,f
  4465  0449  09A3               	comf	___aldiv@quotient+1,f
  4466  044A  09A4               	comf	___aldiv@quotient+2,f
  4467  044B  09A5               	comf	___aldiv@quotient+3,f
  4468  044C  0AA2               	incf	___aldiv@quotient,f
  4469  044D  1903               	skipnz
  4470  044E  0AA3               	incf	___aldiv@quotient+1,f
  4471  044F  1903               	skipnz
  4472  0450  0AA4               	incf	___aldiv@quotient+2,f
  4473  0451  1903               	skipnz
  4474  0452  0AA5               	incf	___aldiv@quotient+3,f
  4475  0453                     l2318:	
  4476  0453  0825               	movf	___aldiv@quotient+3,w
  4477  0454  00F4               	movwf	?___aldiv+3
  4478  0455  0824               	movf	___aldiv@quotient+2,w
  4479  0456  00F3               	movwf	?___aldiv+2
  4480  0457  0823               	movf	___aldiv@quotient+1,w
  4481  0458  00F2               	movwf	?___aldiv+1
  4482  0459  0822               	movf	___aldiv@quotient,w
  4483  045A  00F1               	movwf	?___aldiv
  4484  045B  0008               	return
  4485  045C                     __end_of___aldiv:	
  4486                           
  4487                           	psect	text17
  4488  0E19                     __ptext17:	
  4489 ;; *************** function _sleep *****************
  4490 ;; Defined at:
  4491 ;;		line 57 in file "timer.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  seconds         2    1[COMMON] unsigned short 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  i               2    3[COMMON] int 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;		None               void
  4498 ;; Registers used:
  4499 ;;		wreg, status,2, status,0
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4505 ;;      Params:         2       0       0       0       0       0       0       0
  4506 ;;      Locals:         2       0       0       0       0       0       0       0
  4507 ;;      Temps:          0       0       0       0       0       0       0       0
  4508 ;;      Totals:         4       0       0       0       0       0       0       0
  4509 ;;Total ram usage:        4 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    1
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_main
  4516 ;;		_XBee_Enable
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           
  4521                           ;psect for function _sleep
  4522  0E19                     _sleep:	
  4523                           
  4524                           ;timer.c: 58: int i;
  4525                           ;timer.c: 59: for(i=0; i<seconds; i++) {
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in _sleep: [wreg+status,2+status,0]
  4529  0E19  01F3               	clrf	sleep@i
  4530  0E1A  01F4               	clrf	sleep@i+1
  4531  0E1B                     l2050:	
  4532  0E1B  0872               	movf	sleep@seconds+1,w
  4533  0E1C  0274               	subwf	sleep@i+1,w
  4534  0E1D  1D03               	skipz
  4535  0E1E  2E21               	goto	u1315
  4536  0E1F  0871               	movf	sleep@seconds,w
  4537  0E20  0273               	subwf	sleep@i,w
  4538  0E21                     u1315:	
  4539  0E21  1803               	btfsc	3,0
  4540  0E22  0008               	return
  4541                           
  4542                           ;timer.c: 60: WDTCONbits.SWDTEN = 1;
  4543  0E23  0021               	movlb	1	; select bank1
  4544  0E24  1417               	bsf	23,0	;volatile
  4545                           
  4546                           ;timer.c: 61: WDTCONbits.WDTPS = 10;
  4547  0E25  0817               	movf	23,w	;volatile
  4548  0E26  39C1               	andlw	-63
  4549  0E27  3814               	iorlw	20
  4550  0E28  0097               	movwf	23	;volatile
  4551  0E29  0063               	sleep	;# 
  4552                           
  4553                           ;timer.c: 63: WDTCONbits.SWDTEN = 0;
  4554  0E2A  0021               	movlb	1	; select bank1
  4555  0E2B  1017               	bcf	23,0	;volatile
  4556  0E2C  3001               	movlw	1
  4557  0E2D  07F3               	addwf	sleep@i,f
  4558  0E2E  3000               	movlw	0
  4559  0E2F  3DF4               	addwfc	sleep@i+1,f
  4560  0E30  2E1B               	goto	l2050
  4561  0E31                     __end_of_sleep:	
  4562                           
  4563                           	psect	text18
  4564  0FD3                     __ptext18:	
  4565 ;; *************** function _CRC16_Generate *****************
  4566 ;; Defined at:
  4567 ;;		line 66 in file "crc16.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  msg             1    wreg     PTR unsigned char 
  4570 ;;		 -> packet_buffer(32), 
  4571 ;;  len             2    0[BANK0 ] int 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  msg             1    2[BANK0 ] PTR unsigned char 
  4574 ;;		 -> packet_buffer(32), 
  4575 ;;  i               2    3[BANK0 ] int 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  2    0[BANK0 ] unsigned short 
  4578 ;; Registers used:
  4579 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4585 ;;      Params:         0       2       0       0       0       0       0       0
  4586 ;;      Locals:         0       3       0       0       0       0       0       0
  4587 ;;      Temps:          1       0       0       0       0       0       0       0
  4588 ;;      Totals:         1       5       0       0       0       0       0       0
  4589 ;;Total ram usage:        6 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    3
  4592 ;; This function calls:
  4593 ;;		_CRC16_Init
  4594 ;;		_CRC16_Update
  4595 ;; This function is called by:
  4596 ;;		_SendReport
  4597 ;;		_SendReceiverBroadcastRequest
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function _CRC16_Generate
  4603  0FD3                     _CRC16_Generate:	
  4604                           
  4605                           ;incstack = 0
  4606                           ; Regs used in _CRC16_Generate: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  4607                           ;CRC16_Generate@msg stored from wreg
  4608  0FD3  0020               	movlb	0	; select bank0
  4609  0FD4  00A2               	movwf	CRC16_Generate@msg
  4610                           
  4611                           ;crc16.c: 67: CRC16_Init();
  4612  0FD5  318D  25C3  318F   	fcall	_CRC16_Init
  4613                           
  4614                           ;crc16.c: 68: int i;
  4615                           ;crc16.c: 69: for(i=0; i<len; i++) {
  4616  0FD8  0020               	movlb	0	; select bank0
  4617  0FD9  01A3               	clrf	CRC16_Generate@i
  4618  0FDA  01A4               	clrf	CRC16_Generate@i+1
  4619  0FDB                     l2778:	
  4620  0FDB  0824               	movf	CRC16_Generate@i+1,w
  4621  0FDC  3A80               	xorlw	128
  4622  0FDD  00FB               	movwf	??_CRC16_Generate
  4623  0FDE  0821               	movf	CRC16_Generate@len+1,w
  4624  0FDF  3A80               	xorlw	128
  4625  0FE0  027B               	subwf	??_CRC16_Generate,w
  4626  0FE1  1D03               	skipz
  4627  0FE2  2FE5               	goto	u2285
  4628  0FE3  0820               	movf	CRC16_Generate@len,w
  4629  0FE4  0223               	subwf	CRC16_Generate@i,w
  4630  0FE5                     u2285:	
  4631  0FE5  1803               	btfsc	3,0
  4632  0FE6  2FF8               	goto	l2780
  4633                           
  4634                           ;crc16.c: 70: CRC16_Update(msg[i]);
  4635  0FE7  0020               	movlb	0	; select bank0
  4636  0FE8  0823               	movf	CRC16_Generate@i,w
  4637  0FE9  0722               	addwf	CRC16_Generate@msg,w
  4638  0FEA  00FB               	movwf	??_CRC16_Generate
  4639  0FEB  087B               	movf	??_CRC16_Generate,w
  4640  0FEC  0086               	movwf	6
  4641  0FED  0187               	clrf	7
  4642  0FEE  0801               	movf	1,w
  4643  0FEF  318D  25CD  318F   	fcall	_CRC16_Update
  4644  0FF2  3001               	movlw	1
  4645  0FF3  0020               	movlb	0	; select bank0
  4646  0FF4  07A3               	addwf	CRC16_Generate@i,f
  4647  0FF5  3000               	movlw	0
  4648  0FF6  3DA4               	addwfc	CRC16_Generate@i+1,f
  4649  0FF7  2FDB               	goto	l2778
  4650  0FF8                     l2780:	
  4651                           
  4652                           ;crc16.c: 71: }
  4653                           ;crc16.c: 73: return CRC16_Reg;
  4654  0FF8  0020               	movlb	0	; select bank0
  4655  0FF9  085F               	movf	_CRC16_Reg+1,w
  4656  0FFA  01A1               	clrf	?_CRC16_Generate+1
  4657  0FFB  07A1               	addwf	?_CRC16_Generate+1,f
  4658  0FFC  085E               	movf	_CRC16_Reg,w
  4659  0FFD  01A0               	clrf	?_CRC16_Generate
  4660  0FFE  07A0               	addwf	?_CRC16_Generate,f
  4661  0FFF  0008               	return
  4662  1000                     __end_of_CRC16_Generate:	
  4663                           
  4664                           	psect	text19
  4665  0DCD                     __ptext19:	
  4666 ;; *************** function _CRC16_Update *****************
  4667 ;; Defined at:
  4668 ;;		line 61 in file "crc16.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  val             1    wreg     unsigned char 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  val             1   10[COMMON] unsigned char 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;		None               void
  4675 ;; Registers used:
  4676 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4682 ;;      Params:         0       0       0       0       0       0       0       0
  4683 ;;      Locals:         1       0       0       0       0       0       0       0
  4684 ;;      Temps:          1       0       0       0       0       0       0       0
  4685 ;;      Totals:         2       0       0       0       0       0       0       0
  4686 ;;Total ram usage:        2 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:    2
  4689 ;; This function calls:
  4690 ;;		_CRC16_Update4Bits
  4691 ;; This function is called by:
  4692 ;;		_CRC16_Generate
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           
  4697                           ;psect for function _CRC16_Update
  4698  0DCD                     _CRC16_Update:	
  4699                           
  4700                           ;incstack = 0
  4701                           ; Regs used in _CRC16_Update: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  4702                           ;CRC16_Update@val stored from wreg
  4703  0DCD  00FA               	movwf	CRC16_Update@val
  4704                           
  4705                           ;crc16.c: 62: CRC16_Update4Bits(val >> 4);
  4706  0DCE  087A               	movf	CRC16_Update@val,w
  4707  0DCF  00F9               	movwf	??_CRC16_Update
  4708  0DD0  3004               	movlw	4
  4709  0DD1                     u1665:	
  4710  0DD1  36F9               	lsrf	??_CRC16_Update,f
  4711  0DD2  0B89               	decfsz	9,f
  4712  0DD3  2DD1               	goto	u1665
  4713  0DD4  0879               	movf	??_CRC16_Update,w
  4714  0DD5  3186  264B  318D   	fcall	_CRC16_Update4Bits
  4715                           
  4716                           ;crc16.c: 63: CRC16_Update4Bits(val & 0x0F);
  4717  0DD8  087A               	movf	CRC16_Update@val,w
  4718  0DD9  390F               	andlw	15
  4719  0DDA  3186  264B         	fcall	_CRC16_Update4Bits
  4720  0DDC  0008               	return
  4721  0DDD                     __end_of_CRC16_Update:	
  4722                           
  4723                           	psect	text20
  4724  064B                     __ptext20:	
  4725 ;; *************** function _CRC16_Update4Bits *****************
  4726 ;; Defined at:
  4727 ;;		line 38 in file "crc16.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  val             1    wreg     unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  val             1    7[COMMON] unsigned char 
  4732 ;;  t               1    8[COMMON] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;		None               void
  4735 ;; Registers used:
  4736 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4742 ;;      Params:         0       0       0       0       0       0       0       0
  4743 ;;      Locals:         2       0       0       0       0       0       0       0
  4744 ;;      Temps:          6       0       0       0       0       0       0       0
  4745 ;;      Totals:         8       0       0       0       0       0       0       0
  4746 ;;Total ram usage:        8 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    1
  4749 ;; This function calls:
  4750 ;;		Nothing
  4751 ;; This function is called by:
  4752 ;;		_CRC16_Update
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           
  4757                           ;psect for function _CRC16_Update4Bits
  4758  064B                     _CRC16_Update4Bits:	
  4759                           
  4760                           ;incstack = 0
  4761                           ; Regs used in _CRC16_Update4Bits: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1]
  4762                           ;CRC16_Update4Bits@val stored from wreg
  4763  064B  00F7               	movwf	CRC16_Update4Bits@val
  4764                           
  4765                           ;crc16.c: 39: unsigned char t;
  4766                           ;crc16.c: 42: t = CRC16_High >> 4;
  4767  064C  087C               	movf	_CRC16_High,w
  4768  064D  00F1               	movwf	??_CRC16_Update4Bits
  4769  064E  3004               	movlw	4
  4770  064F                     u1655:	
  4771  064F  36F1               	lsrf	??_CRC16_Update4Bits,f
  4772  0650  0B89               	decfsz	9,f
  4773  0651  2E4F               	goto	u1655
  4774  0652  0871               	movf	??_CRC16_Update4Bits,w
  4775  0653  00F2               	movwf	??_CRC16_Update4Bits+1
  4776  0654  0872               	movf	??_CRC16_Update4Bits+1,w
  4777  0655  00F8               	movwf	CRC16_Update4Bits@t
  4778                           
  4779                           ;crc16.c: 45: t = t ^ val;
  4780  0656  0878               	movf	CRC16_Update4Bits@t,w
  4781  0657  0677               	xorwf	CRC16_Update4Bits@val,w
  4782  0658  00F1               	movwf	??_CRC16_Update4Bits
  4783  0659  0871               	movf	??_CRC16_Update4Bits,w
  4784  065A  00F8               	movwf	CRC16_Update4Bits@t
  4785                           
  4786                           ;crc16.c: 50: CRC16_Reg = CRC16_Reg << 4;
  4787  065B  0020               	movlb	0	; select bank0
  4788  065C  085F               	movf	_CRC16_Reg+1,w
  4789  065D  00F2               	movwf	??_CRC16_Update4Bits+1
  4790  065E  085E               	movf	_CRC16_Reg,w
  4791  065F  00F1               	movwf	??_CRC16_Update4Bits
  4792  0660  0EF1               	swapf	??_CRC16_Update4Bits,f
  4793  0661  0EF2               	swapf	??_CRC16_Update4Bits+1,f
  4794  0662  30F0               	movlw	240
  4795  0663  05F2               	andwf	??_CRC16_Update4Bits+1,f
  4796  0664  0871               	movf	??_CRC16_Update4Bits,w
  4797  0665  390F               	andlw	15
  4798  0666  04F2               	iorwf	??_CRC16_Update4Bits+1,f
  4799  0667  30F0               	movlw	240
  4800  0668  05F1               	andwf	??_CRC16_Update4Bits,f
  4801  0669  0871               	movf	??_CRC16_Update4Bits,w
  4802  066A  00DE               	movwf	_CRC16_Reg
  4803  066B  0872               	movf	??_CRC16_Update4Bits+1,w
  4804  066C  00DF               	movwf	_CRC16_Reg+1
  4805                           
  4806                           ;crc16.c: 55: CRC16_Reg = CRC16_Reg ^ (CRC16_LookupHigh[t] << 8) | CRC16_LookupLow[t];
  4807  066D  3578               	lslf	CRC16_Update4Bits@t,w
  4808  066E  3EA0               	addlw	_CRC16_LookupLow& (0+255)
  4809  066F  0086               	movwf	6
  4810  0670  3001               	movlw	1	; select bank3/4
  4811  0671  0087               	movwf	7
  4812  0672  3F40               	moviw [0]fsr1
  4813  0673  00F1               	movwf	??_CRC16_Update4Bits
  4814  0674  3F41               	moviw [1]fsr1
  4815  0675  00F2               	movwf	??_CRC16_Update4Bits+1
  4816  0676  3578               	lslf	CRC16_Update4Bits@t,w
  4817  0677  3EA0               	addlw	_CRC16_LookupHigh& (0+255)
  4818  0678  0086               	movwf	6
  4819  0679  0187               	clrf	7
  4820  067A  3F40               	moviw [0]fsr1
  4821  067B  00F3               	movwf	??_CRC16_Update4Bits+2
  4822  067C  3F41               	moviw [1]fsr1
  4823  067D  00F4               	movwf	??_CRC16_Update4Bits+3
  4824  067E  0873               	movf	??_CRC16_Update4Bits+2,w
  4825  067F  00F4               	movwf	??_CRC16_Update4Bits+3
  4826  0680  01F3               	clrf	??_CRC16_Update4Bits+2
  4827  0681  085E               	movf	_CRC16_Reg,w
  4828  0682  0673               	xorwf	??_CRC16_Update4Bits+2,w
  4829  0683  00F5               	movwf	??_CRC16_Update4Bits+4
  4830  0684  085F               	movf	_CRC16_Reg+1,w
  4831  0685  0674               	xorwf	??_CRC16_Update4Bits+3,w
  4832  0686  00F6               	movwf	??_CRC16_Update4Bits+5
  4833  0687  0871               	movf	??_CRC16_Update4Bits,w
  4834  0688  0475               	iorwf	??_CRC16_Update4Bits+4,w
  4835  0689  00DE               	movwf	_CRC16_Reg
  4836  068A  0872               	movf	??_CRC16_Update4Bits+1,w
  4837  068B  0476               	iorwf	??_CRC16_Update4Bits+5,w
  4838  068C  00DF               	movwf	_CRC16_Reg+1
  4839  068D  0008               	return
  4840  068E                     __end_of_CRC16_Update4Bits:	
  4841                           
  4842                           	psect	text21
  4843  0DC3                     __ptext21:	
  4844 ;; *************** function _CRC16_Init *****************
  4845 ;; Defined at:
  4846 ;;		line 28 in file "crc16.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;		None
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;		None
  4851 ;; Return value:  Size  Location     Type
  4852 ;;		None               void
  4853 ;; Registers used:
  4854 ;;		wreg
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4860 ;;      Params:         0       0       0       0       0       0       0       0
  4861 ;;      Locals:         0       0       0       0       0       0       0       0
  4862 ;;      Temps:          1       0       0       0       0       0       0       0
  4863 ;;      Totals:         1       0       0       0       0       0       0       0
  4864 ;;Total ram usage:        1 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    1
  4867 ;; This function calls:
  4868 ;;		Nothing
  4869 ;; This function is called by:
  4870 ;;		_main
  4871 ;;		_CRC16_Generate
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           
  4876                           ;psect for function _CRC16_Init
  4877  0DC3                     _CRC16_Init:	
  4878                           
  4879                           ;crc16.c: 30: CRC16_High = 0xFF;
  4880                           
  4881                           ;incstack = 0
  4882                           ; Regs used in _CRC16_Init: [wreg]
  4883  0DC3  30FF               	movlw	255
  4884  0DC4  00F1               	movwf	??_CRC16_Init
  4885  0DC5  0871               	movf	??_CRC16_Init,w
  4886  0DC6  00FC               	movwf	_CRC16_High
  4887                           
  4888                           ;crc16.c: 31: CRC16_Low = 0xFF;
  4889  0DC7  30FF               	movlw	255
  4890  0DC8  00F1               	movwf	??_CRC16_Init
  4891  0DC9  0871               	movf	??_CRC16_Init,w
  4892  0DCA  0020               	movlb	0	; select bank0
  4893  0DCB  00E6               	movwf	_CRC16_Low
  4894  0DCC  0008               	return
  4895  0DCD                     __end_of_CRC16_Init:	
  4896                           
  4897                           	psect	text22
  4898  068E                     __ptext22:	
  4899 ;; *************** function _ADC_Enable *****************
  4900 ;; Defined at:
  4901 ;;		line 4 in file "adc.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  select          1    wreg     unsigned char 
  4904 ;;  port_pin        1    1[COMMON] unsigned char 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  select          1    4[COMMON] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;		None               void
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4916 ;;      Params:         1       0       0       0       0       0       0       0
  4917 ;;      Locals:         1       0       0       0       0       0       0       0
  4918 ;;      Temps:          2       0       0       0       0       0       0       0
  4919 ;;      Totals:         4       0       0       0       0       0       0       0
  4920 ;;Total ram usage:        4 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    1
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_main
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           
  4931                           ;psect for function _ADC_Enable
  4932  068E                     _ADC_Enable:	
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in _ADC_Enable: [wreg+status,2+status,0]
  4936                           ;ADC_Enable@select stored from wreg
  4937  068E  00F4               	movwf	ADC_Enable@select
  4938                           
  4939                           ;adc.c: 5: ADCON1bits.ADCS = 1;
  4940  068F  0021               	movlb	1	; select bank1
  4941  0690  081E               	movf	30,w	;volatile
  4942  0691  398F               	andlw	-113
  4943  0692  3810               	iorlw	16
  4944  0693  009E               	movwf	30	;volatile
  4945                           
  4946                           ;adc.c: 6: if(select) {
  4947  0694  0874               	movf	ADC_Enable@select,w
  4948  0695  1903               	btfsc	3,2
  4949  0696  2EAF               	goto	l1898
  4950                           
  4951                           ;adc.c: 8: TRISB |= 1<<port_pin;
  4952  0697  3001               	movlw	1
  4953  0698  00F2               	movwf	??_ADC_Enable
  4954  0699  0A71               	incf	ADC_Enable@port_pin,w
  4955  069A  2E9C               	goto	u1154
  4956  069B                     u1155:	
  4957  069B  35F2               	lslf	??_ADC_Enable,f
  4958  069C                     u1154:	
  4959  069C  0B89               	decfsz	9,f
  4960  069D  2E9B               	goto	u1155
  4961  069E  0872               	movf	??_ADC_Enable,w
  4962  069F  00F3               	movwf	??_ADC_Enable+1
  4963  06A0  0873               	movf	??_ADC_Enable+1,w
  4964  06A1  048D               	iorwf	13,f	;volatile
  4965                           
  4966                           ;adc.c: 9: ANSELB |= 1<<port_pin;
  4967  06A2  3001               	movlw	1
  4968  06A3  00F2               	movwf	??_ADC_Enable
  4969  06A4  0A71               	incf	ADC_Enable@port_pin,w
  4970  06A5  2EA7               	goto	u1164
  4971  06A6                     u1165:	
  4972  06A6  35F2               	lslf	??_ADC_Enable,f
  4973  06A7                     u1164:	
  4974  06A7  0B89               	decfsz	9,f
  4975  06A8  2EA6               	goto	u1165
  4976  06A9  0872               	movf	??_ADC_Enable,w
  4977  06AA  00F3               	movwf	??_ADC_Enable+1
  4978  06AB  0873               	movf	??_ADC_Enable+1,w
  4979  06AC  0023               	movlb	3	; select bank3
  4980  06AD  048D               	iorwf	13,f	;volatile
  4981                           
  4982                           ;adc.c: 10: } else {
  4983  06AE  2EC7               	goto	l331
  4984  06AF                     l1898:	
  4985                           
  4986                           ;adc.c: 11: TRISA |= 1<<port_pin;
  4987  06AF  3001               	movlw	1
  4988  06B0  00F2               	movwf	??_ADC_Enable
  4989  06B1  0A71               	incf	ADC_Enable@port_pin,w
  4990  06B2  2EB4               	goto	u1174
  4991  06B3                     u1175:	
  4992  06B3  35F2               	lslf	??_ADC_Enable,f
  4993  06B4                     u1174:	
  4994  06B4  0B89               	decfsz	9,f
  4995  06B5  2EB3               	goto	u1175
  4996  06B6  0872               	movf	??_ADC_Enable,w
  4997  06B7  00F3               	movwf	??_ADC_Enable+1
  4998  06B8  0873               	movf	??_ADC_Enable+1,w
  4999  06B9  0021               	movlb	1	; select bank1
  5000  06BA  048C               	iorwf	12,f	;volatile
  5001                           
  5002                           ;adc.c: 12: ANSELA |= 1<<port_pin;
  5003  06BB  3001               	movlw	1
  5004  06BC  00F2               	movwf	??_ADC_Enable
  5005  06BD  0A71               	incf	ADC_Enable@port_pin,w
  5006  06BE  2EC0               	goto	u1184
  5007  06BF                     u1185:	
  5008  06BF  35F2               	lslf	??_ADC_Enable,f
  5009  06C0                     u1184:	
  5010  06C0  0B89               	decfsz	9,f
  5011  06C1  2EBF               	goto	u1185
  5012  06C2  0872               	movf	??_ADC_Enable,w
  5013  06C3  00F3               	movwf	??_ADC_Enable+1
  5014  06C4  0873               	movf	??_ADC_Enable+1,w
  5015  06C5  0023               	movlb	3	; select bank3
  5016  06C6  048C               	iorwf	12,f	;volatile
  5017  06C7                     l331:	
  5018                           
  5019                           ;adc.c: 13: }
  5020                           ;adc.c: 15: ADCON1bits.ADPREF = 0;
  5021  06C7  30FC               	movlw	-4
  5022  06C8  0021               	movlb	1	; select bank1
  5023  06C9  059E               	andwf	30,f	;volatile
  5024                           
  5025                           ;adc.c: 16: ADCON1bits.ADNREF = 0;
  5026  06CA  111E               	bcf	30,2	;volatile
  5027                           
  5028                           ;adc.c: 17: ADCON1bits.ADFM = 1;
  5029  06CB  179E               	bsf	30,7	;volatile
  5030                           
  5031                           ;adc.c: 18: ADCON0bits.ADRMD = 0;
  5032  06CC  139D               	bcf	29,7	;volatile
  5033  06CD  0008               	return
  5034  06CE                     __end_of_ADC_Enable:	
  5035                           
  5036                           	psect	text23
  5037  0297                     __ptext23:	
  5038 ;; *************** function _XBAPI_Command *****************
  5039 ;; Defined at:
  5040 ;;		line 169 in file "xbee.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;  command         2   29[BANK0 ] unsigned short 
  5043 ;;  data            4   31[BANK0 ] unsigned long 
  5044 ;;  id              2   35[BANK0 ] int 
  5045 ;;  data_valid      2   37[BANK0 ] int 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  atCmdLength     1   45[BANK0 ] unsigned char 
  5048 ;;  check           1   42[BANK0 ] unsigned char 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  2   29[BANK0 ] int 
  5051 ;; Registers used:
  5052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5058 ;;      Params:         0      10       0       0       0       0       0       0
  5059 ;;      Locals:         0       4       0       0       0       0       0       0
  5060 ;;      Temps:          0       3       0       0       0       0       0       0
  5061 ;;      Totals:         0      17       0       0       0       0       0       0
  5062 ;;Total ram usage:       17 bytes
  5063 ;; Hardware stack levels used:    1
  5064 ;; Hardware stack levels required when called:    4
  5065 ;; This function calls:
  5066 ;;		_XBAPI_HandleFrame
  5067 ;;		_UART_TransmitMsg
  5068 ;;		_checksum
  5069 ;;		_doChecksumVerify
  5070 ;;		_swap_endian_32
  5071 ;; This function is called by:
  5072 ;;		_main
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           
  5077                           ;psect for function _XBAPI_Command
  5078  0297                     _XBAPI_Command:	
  5079                           
  5080                           ;xbee.c: 183: byte atCmdLength = (data_valid) ? sizeof(ATCmdFrame) : sizeof(ATCmdFrame_N
      +                          oData);
  5081                           
  5082                           ;incstack = 0
  5083                           ; Regs used in _XBAPI_Command: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  5084  0297  0020               	movlb	0	; select bank0
  5085  0298  0846               	movf	XBAPI_Command@data_valid+1,w
  5086  0299  0445               	iorwf	XBAPI_Command@data_valid,w
  5087  029A  1D03               	skipz
  5088  029B  2A9E               	goto	l2488
  5089  029C  3008               	movlw	8
  5090  029D  2A9F               	goto	L1
  5091  029E                     l2488:	
  5092  029E  300C               	movlw	12
  5093  029F                     L1:	
  5094  029F  00CB               	movwf	_XBAPI_Command$876
  5095  02A0  3000               	movlw	0
  5096  02A1  00CC               	movwf	_XBAPI_Command$876+1
  5097  02A2  084B               	movf	_XBAPI_Command$876,w
  5098  02A3  00C7               	movwf	??_XBAPI_Command
  5099  02A4  0847               	movf	??_XBAPI_Command,w
  5100  02A5  00CD               	movwf	XBAPI_Command@atCmdLength
  5101                           
  5102                           ;xbee.c: 185: apiFrame.atCmd.start_delimiter = 0x7e;
  5103  02A6  307E               	movlw	126
  5104  02A7  00C7               	movwf	??_XBAPI_Command
  5105  02A8  0847               	movf	??_XBAPI_Command,w
  5106  02A9  0022               	movlb	2	; select bank2
  5107  02AA  00A0               	movwf	_apiFrame^(0+256)
  5108                           
  5109                           ;xbee.c: 186: apiFrame.atCmd.length[0] = (atCmdLength-4) >> 8;
  5110  02AB  0020               	movlb	0	; select bank0
  5111  02AC  084D               	movf	XBAPI_Command@atCmdLength,w
  5112  02AD  3EFC               	addlw	252
  5113  02AE  00C7               	movwf	??_XBAPI_Command
  5114  02AF  30FF               	movlw	255
  5115  02B0  1803               	skipnc
  5116  02B1  3000               	movlw	0
  5117  02B2  00C8               	movwf	??_XBAPI_Command+1
  5118  02B3  0848               	movf	??_XBAPI_Command+1,w
  5119  02B4  00C9               	movwf	??_XBAPI_Command+2
  5120  02B5  0849               	movf	??_XBAPI_Command+2,w
  5121  02B6  0022               	movlb	2	; select bank2
  5122  02B7  00A1               	movwf	(_apiFrame^(0+256)+1)
  5123                           
  5124                           ;xbee.c: 187: apiFrame.atCmd.length[1] = (atCmdLength-4) & 0xFF;
  5125  02B8  0020               	movlb	0	; select bank0
  5126  02B9  084D               	movf	XBAPI_Command@atCmdLength,w
  5127  02BA  3EFC               	addlw	252
  5128  02BB  00C7               	movwf	??_XBAPI_Command
  5129  02BC  0847               	movf	??_XBAPI_Command,w
  5130  02BD  0022               	movlb	2	; select bank2
  5131  02BE  00A2               	movwf	(_apiFrame^(0+256)+2)
  5132                           
  5133                           ;xbee.c: 188: apiFrame.atCmd.frame_type = 0x8;
  5134  02BF  3008               	movlw	8
  5135  02C0  0020               	movlb	0	; select bank0
  5136  02C1  00C7               	movwf	??_XBAPI_Command
  5137  02C2  0847               	movf	??_XBAPI_Command,w
  5138  02C3  0022               	movlb	2	; select bank2
  5139  02C4  00A3               	movwf	(_apiFrame^(0+256)+3)
  5140                           
  5141                           ;xbee.c: 189: apiFrame.atCmd.frame_id = id;
  5142  02C5  0020               	movlb	0	; select bank0
  5143  02C6  0843               	movf	XBAPI_Command@id,w
  5144  02C7  00C7               	movwf	??_XBAPI_Command
  5145  02C8  0847               	movf	??_XBAPI_Command,w
  5146  02C9  0022               	movlb	2	; select bank2
  5147  02CA  00A4               	movwf	(_apiFrame^(0+256)+4)
  5148                           
  5149                           ;xbee.c: 190: apiFrame.atCmd.command = command;
  5150  02CB  0020               	movlb	0	; select bank0
  5151  02CC  083E               	movf	XBAPI_Command@command+1,w
  5152  02CD  0022               	movlb	2	; select bank2
  5153  02CE  01A6               	clrf	((_apiFrame+1)^(0+256)+5)
  5154  02CF  07A6               	addwf	((_apiFrame+1)^(0+256)+5),f
  5155  02D0  0020               	movlb	0	; select bank0
  5156  02D1  083D               	movf	XBAPI_Command@command,w
  5157  02D2  0022               	movlb	2	; select bank2
  5158  02D3  01A5               	clrf	(_apiFrame^(0+256)+5)
  5159  02D4  07A5               	addwf	(_apiFrame^(0+256)+5),f
  5160                           
  5161                           ;xbee.c: 191: apiFrame.atCmd.data = swap_endian_32(data);
  5162  02D5  0020               	movlb	0	; select bank0
  5163  02D6  0842               	movf	XBAPI_Command@data+3,w
  5164  02D7  00F4               	movwf	?_swap_endian_32+3
  5165  02D8  0841               	movf	XBAPI_Command@data+2,w
  5166  02D9  00F3               	movwf	?_swap_endian_32+2
  5167  02DA  0840               	movf	XBAPI_Command@data+1,w
  5168  02DB  00F2               	movwf	?_swap_endian_32+1
  5169  02DC  083F               	movf	XBAPI_Command@data,w
  5170  02DD  00F1               	movwf	?_swap_endian_32
  5171  02DE  3181  21E7  3182   	fcall	_swap_endian_32
  5172  02E1  0874               	movf	?_swap_endian_32+3,w
  5173  02E2  0022               	movlb	2	; select bank2
  5174  02E3  00AA               	movwf	((_apiFrame+3)^(0+256)+7)
  5175  02E4  0873               	movf	?_swap_endian_32+2,w
  5176  02E5  00A9               	movwf	((_apiFrame+2)^(0+256)+7)
  5177  02E6  0872               	movf	?_swap_endian_32+1,w
  5178  02E7  00A8               	movwf	((_apiFrame+1)^(0+256)+7)
  5179  02E8  0871               	movf	?_swap_endian_32,w
  5180  02E9  00A7               	movwf	(_apiFrame^(0+256)+7)
  5181                           
  5182                           ;xbee.c: 193: calc_checksum = checksum(apiFrame.buffer+3, atCmdLength-4);
  5183  02EA  0020               	movlb	0	; select bank0
  5184  02EB  084D               	movf	XBAPI_Command@atCmdLength,w
  5185  02EC  3EFC               	addlw	252
  5186  02ED  00F1               	movwf	?_checksum
  5187  02EE  30FF               	movlw	255
  5188  02EF  1803               	skipnc
  5189  02F0  3000               	movlw	0
  5190  02F1  00F2               	movwf	?_checksum+1
  5191  02F2  3023               	movlw	(_apiFrame+3)& (0+255)
  5192  02F3  318F  272B  3182   	fcall	_checksum
  5193  02F6  0020               	movlb	0	; select bank0
  5194  02F7  00C7               	movwf	??_XBAPI_Command
  5195  02F8  0847               	movf	??_XBAPI_Command,w
  5196  02F9  00E7               	movwf	_calc_checksum
  5197                           
  5198                           ;xbee.c: 194: byte check = doChecksumVerify(apiFrame.buffer+3, atCmdLength-4, calc_check
      +                          sum);
  5199  02FA  084D               	movf	XBAPI_Command@atCmdLength,w
  5200  02FB  3EFC               	addlw	252
  5201  02FC  00F1               	movwf	?_doChecksumVerify
  5202  02FD  30FF               	movlw	255
  5203  02FE  1803               	skipnc
  5204  02FF  3000               	movlw	0
  5205  0300  00F2               	movwf	?_doChecksumVerify+1
  5206  0301  0867               	movf	_calc_checksum,w
  5207  0302  00C7               	movwf	??_XBAPI_Command
  5208  0303  0847               	movf	??_XBAPI_Command,w
  5209  0304  00F3               	movwf	?_doChecksumVerify+2
  5210  0305  3023               	movlw	(_apiFrame+3)& (0+255)
  5211  0306  3187  27D9  3182   	fcall	_doChecksumVerify
  5212  0309  0020               	movlb	0	; select bank0
  5213  030A  00C8               	movwf	??_XBAPI_Command+1
  5214  030B  0848               	movf	??_XBAPI_Command+1,w
  5215  030C  00CA               	movwf	XBAPI_Command@check
  5216                           
  5217                           ;xbee.c: 196: if(data_valid) {
  5218  030D  0846               	movf	XBAPI_Command@data_valid+1,w
  5219  030E  0445               	iorwf	XBAPI_Command@data_valid,w
  5220  030F  1903               	skipnz
  5221  0310  2B17               	goto	l2510
  5222                           
  5223                           ;xbee.c: 197: apiFrame.atCmd.checksum = calc_checksum;
  5224  0311  0867               	movf	_calc_checksum,w
  5225  0312  00C7               	movwf	??_XBAPI_Command
  5226  0313  0847               	movf	??_XBAPI_Command,w
  5227  0314  0022               	movlb	2	; select bank2
  5228  0315  00AB               	movwf	(_apiFrame^(0+256)+11)
  5229                           
  5230                           ;xbee.c: 198: } else {
  5231  0316  2B1D               	goto	l2512
  5232  0317                     l2510:	
  5233                           
  5234                           ;xbee.c: 199: apiFrame.atCmdNoData.checksum = calc_checksum;
  5235  0317  0020               	movlb	0	; select bank0
  5236  0318  0867               	movf	_calc_checksum,w
  5237  0319  00C7               	movwf	??_XBAPI_Command
  5238  031A  0847               	movf	??_XBAPI_Command,w
  5239  031B  0022               	movlb	2	; select bank2
  5240  031C  00A7               	movwf	(_apiFrame^(0+256)+7)
  5241  031D                     l2512:	
  5242                           
  5243                           ;xbee.c: 200: }
  5244                           ;xbee.c: 202: UART_TransmitMsg(apiFrame.buffer, atCmdLength, 0);
  5245  031D  0020               	movlb	0	; select bank0
  5246  031E  084D               	movf	XBAPI_Command@atCmdLength,w
  5247  031F  00C7               	movwf	??_XBAPI_Command
  5248  0320  01C8               	clrf	??_XBAPI_Command+1
  5249  0321  0847               	movf	??_XBAPI_Command,w
  5250  0322  00F2               	movwf	?_UART_TransmitMsg
  5251  0323  0848               	movf	??_XBAPI_Command+1,w
  5252  0324  00F3               	movwf	?_UART_TransmitMsg+1
  5253  0325  01F4               	clrf	?_UART_TransmitMsg+2
  5254  0326  3020               	movlw	_apiFrame& (0+255)
  5255  0327  3187  27A8  3182   	fcall	_UART_TransmitMsg
  5256                           
  5257                           ;xbee.c: 204: if(id) {
  5258  032A  0020               	movlb	0	; select bank0
  5259  032B  0844               	movf	XBAPI_Command@id+1,w
  5260  032C  0443               	iorwf	XBAPI_Command@id,w
  5261  032D  1903               	skipnz
  5262  032E  2B41               	goto	l2522
  5263                           
  5264                           ;xbee.c: 205: return XBAPI_HandleFrame(0x88, 1);
  5265  032F  3088               	movlw	136
  5266  0330  00AE               	movwf	?_XBAPI_HandleFrame
  5267  0331  3000               	movlw	0
  5268  0332  00AF               	movwf	?_XBAPI_HandleFrame+1
  5269  0333  3001               	movlw	1
  5270  0334  00B0               	movwf	?_XBAPI_HandleFrame+2
  5271  0335  3000               	movlw	0
  5272  0336  00B1               	movwf	?_XBAPI_HandleFrame+3
  5273  0337  3181  2129         	fcall	_XBAPI_HandleFrame
  5274  0339  0020               	movlb	0	; select bank0
  5275  033A  082F               	movf	?_XBAPI_HandleFrame+1,w
  5276  033B  01BE               	clrf	?_XBAPI_Command+1
  5277  033C  07BE               	addwf	?_XBAPI_Command+1,f
  5278  033D  082E               	movf	?_XBAPI_HandleFrame,w
  5279  033E  01BD               	clrf	?_XBAPI_Command
  5280  033F  07BD               	addwf	?_XBAPI_Command,f
  5281                           
  5282                           ;xbee.c: 206: } else {
  5283  0340  0008               	return
  5284  0341                     l2522:	
  5285                           
  5286                           ;xbee.c: 207: return 0;
  5287  0341  01BD               	clrf	?_XBAPI_Command
  5288  0342  01BE               	clrf	?_XBAPI_Command+1
  5289  0343  0008               	return
  5290  0344                     __end_of_XBAPI_Command:	
  5291                           
  5292                           	psect	text24
  5293  01E7                     __ptext24:	
  5294 ;; *************** function _swap_endian_32 *****************
  5295 ;; Defined at:
  5296 ;;		line 158 in file "xbee.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  n               4    1[COMMON] unsigned long 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  r               4    5[COMMON] unsigned long 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  4    1[COMMON] unsigned long 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5310 ;;      Params:         4       0       0       0       0       0       0       0
  5311 ;;      Locals:         4       0       0       0       0       0       0       0
  5312 ;;      Temps:          0       8       0       0       0       0       0       0
  5313 ;;      Totals:         8       8       0       0       0       0       0       0
  5314 ;;Total ram usage:       16 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    1
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_XBAPI_Command
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           
  5325                           ;psect for function _swap_endian_32
  5326  01E7                     _swap_endian_32:	
  5327                           
  5328                           ;xbee.c: 159: unsigned long r = 0;
  5329                           
  5330                           ;incstack = 0
  5331                           ; Regs used in _swap_endian_32: [wreg+status,2+status,0]
  5332  01E7  3000               	movlw	0
  5333  01E8  00F8               	movwf	swap_endian_32@r+3
  5334  01E9  3000               	movlw	0
  5335  01EA  00F7               	movwf	swap_endian_32@r+2
  5336  01EB  3000               	movlw	0
  5337  01EC  00F6               	movwf	swap_endian_32@r+1
  5338  01ED  3000               	movlw	0
  5339  01EE  00F5               	movwf	swap_endian_32@r
  5340                           
  5341                           ;xbee.c: 160: r |= (n&0xFF) << 24;
  5342  01EF  30FF               	movlw	255
  5343  01F0  0571               	andwf	swap_endian_32@n,w
  5344  01F1  0020               	movlb	0	; select bank0
  5345  01F2  00A0               	movwf	??_swap_endian_32
  5346  01F3  3000               	movlw	0
  5347  01F4  0572               	andwf	swap_endian_32@n+1,w
  5348  01F5  00A1               	movwf	??_swap_endian_32+1
  5349  01F6  3000               	movlw	0
  5350  01F7  0573               	andwf	swap_endian_32@n+2,w
  5351  01F8  00A2               	movwf	??_swap_endian_32+2
  5352  01F9  3000               	movlw	0
  5353  01FA  0574               	andwf	swap_endian_32@n+3,w
  5354  01FB  00A3               	movwf	??_swap_endian_32+3
  5355  01FC  3018               	movlw	24
  5356  01FD                     u2215:	
  5357  01FD  35A0               	lslf	??_swap_endian_32,f
  5358  01FE  0DA1               	rlf	??_swap_endian_32+1,f
  5359  01FF  0DA2               	rlf	??_swap_endian_32+2,f
  5360  0200  0DA3               	rlf	??_swap_endian_32+3,f
  5361  0201  0B89               	decfsz	9,f
  5362  0202  29FD               	goto	u2215
  5363  0203  0820               	movf	??_swap_endian_32,w
  5364  0204  04F5               	iorwf	swap_endian_32@r,f
  5365  0205  0821               	movf	??_swap_endian_32+1,w
  5366  0206  04F6               	iorwf	swap_endian_32@r+1,f
  5367  0207  0822               	movf	??_swap_endian_32+2,w
  5368  0208  04F7               	iorwf	swap_endian_32@r+2,f
  5369  0209  0823               	movf	??_swap_endian_32+3,w
  5370  020A  04F8               	iorwf	swap_endian_32@r+3,f
  5371                           
  5372                           ;xbee.c: 161: r |= ((n>>8)&0xFF) << 16;
  5373  020B  30FF               	movlw	255
  5374  020C  00A0               	movwf	??_swap_endian_32
  5375  020D  3000               	movlw	0
  5376  020E  00A1               	movwf	??_swap_endian_32+1
  5377  020F  3000               	movlw	0
  5378  0210  00A2               	movwf	??_swap_endian_32+2
  5379  0211  3000               	movlw	0
  5380  0212  00A3               	movwf	??_swap_endian_32+3
  5381  0213  0871               	movf	swap_endian_32@n,w
  5382  0214  00A4               	movwf	??_swap_endian_32+4
  5383  0215  0872               	movf	swap_endian_32@n+1,w
  5384  0216  00A5               	movwf	??_swap_endian_32+5
  5385  0217  0873               	movf	swap_endian_32@n+2,w
  5386  0218  00A6               	movwf	??_swap_endian_32+6
  5387  0219  0874               	movf	swap_endian_32@n+3,w
  5388  021A  00A7               	movwf	??_swap_endian_32+7
  5389  021B  3008               	movlw	8
  5390  021C                     u2225:	
  5391  021C  36A7               	lsrf	??_swap_endian_32+7,f
  5392  021D  0CA6               	rrf	??_swap_endian_32+6,f
  5393  021E  0CA5               	rrf	??_swap_endian_32+5,f
  5394  021F  0CA4               	rrf	??_swap_endian_32+4,f
  5395  0220  0B89               	decfsz	9,f
  5396  0221  2A1C               	goto	u2225
  5397  0222  0824               	movf	??_swap_endian_32+4,w
  5398  0223  05A0               	andwf	??_swap_endian_32,f
  5399  0224  0825               	movf	??_swap_endian_32+5,w
  5400  0225  05A1               	andwf	??_swap_endian_32+1,f
  5401  0226  0826               	movf	??_swap_endian_32+6,w
  5402  0227  05A2               	andwf	??_swap_endian_32+2,f
  5403  0228  0827               	movf	??_swap_endian_32+7,w
  5404  0229  05A3               	andwf	??_swap_endian_32+3,f
  5405  022A  3010               	movlw	16
  5406  022B                     u2235:	
  5407  022B  35A0               	lslf	??_swap_endian_32,f
  5408  022C  0DA1               	rlf	??_swap_endian_32+1,f
  5409  022D  0DA2               	rlf	??_swap_endian_32+2,f
  5410  022E  0DA3               	rlf	??_swap_endian_32+3,f
  5411  022F  0B89               	decfsz	9,f
  5412  0230  2A2B               	goto	u2235
  5413  0231  0820               	movf	??_swap_endian_32,w
  5414  0232  04F5               	iorwf	swap_endian_32@r,f
  5415  0233  0821               	movf	??_swap_endian_32+1,w
  5416  0234  04F6               	iorwf	swap_endian_32@r+1,f
  5417  0235  0822               	movf	??_swap_endian_32+2,w
  5418  0236  04F7               	iorwf	swap_endian_32@r+2,f
  5419  0237  0823               	movf	??_swap_endian_32+3,w
  5420  0238  04F8               	iorwf	swap_endian_32@r+3,f
  5421                           
  5422                           ;xbee.c: 162: r |= ((n>>16)&0xFF) << 8;
  5423  0239  30FF               	movlw	255
  5424  023A  00A0               	movwf	??_swap_endian_32
  5425  023B  3000               	movlw	0
  5426  023C  00A1               	movwf	??_swap_endian_32+1
  5427  023D  3000               	movlw	0
  5428  023E  00A2               	movwf	??_swap_endian_32+2
  5429  023F  3000               	movlw	0
  5430  0240  00A3               	movwf	??_swap_endian_32+3
  5431  0241  0871               	movf	swap_endian_32@n,w
  5432  0242  00A4               	movwf	??_swap_endian_32+4
  5433  0243  0872               	movf	swap_endian_32@n+1,w
  5434  0244  00A5               	movwf	??_swap_endian_32+5
  5435  0245  0873               	movf	swap_endian_32@n+2,w
  5436  0246  00A6               	movwf	??_swap_endian_32+6
  5437  0247  0874               	movf	swap_endian_32@n+3,w
  5438  0248  00A7               	movwf	??_swap_endian_32+7
  5439  0249  3010               	movlw	16
  5440  024A                     u2245:	
  5441  024A  36A7               	lsrf	??_swap_endian_32+7,f
  5442  024B  0CA6               	rrf	??_swap_endian_32+6,f
  5443  024C  0CA5               	rrf	??_swap_endian_32+5,f
  5444  024D  0CA4               	rrf	??_swap_endian_32+4,f
  5445  024E  0B89               	decfsz	9,f
  5446  024F  2A4A               	goto	u2245
  5447  0250  0824               	movf	??_swap_endian_32+4,w
  5448  0251  05A0               	andwf	??_swap_endian_32,f
  5449  0252  0825               	movf	??_swap_endian_32+5,w
  5450  0253  05A1               	andwf	??_swap_endian_32+1,f
  5451  0254  0826               	movf	??_swap_endian_32+6,w
  5452  0255  05A2               	andwf	??_swap_endian_32+2,f
  5453  0256  0827               	movf	??_swap_endian_32+7,w
  5454  0257  05A3               	andwf	??_swap_endian_32+3,f
  5455  0258  3008               	movlw	8
  5456  0259                     u2255:	
  5457  0259  35A0               	lslf	??_swap_endian_32,f
  5458  025A  0DA1               	rlf	??_swap_endian_32+1,f
  5459  025B  0DA2               	rlf	??_swap_endian_32+2,f
  5460  025C  0DA3               	rlf	??_swap_endian_32+3,f
  5461  025D  0B89               	decfsz	9,f
  5462  025E  2A59               	goto	u2255
  5463  025F  0820               	movf	??_swap_endian_32,w
  5464  0260  04F5               	iorwf	swap_endian_32@r,f
  5465  0261  0821               	movf	??_swap_endian_32+1,w
  5466  0262  04F6               	iorwf	swap_endian_32@r+1,f
  5467  0263  0822               	movf	??_swap_endian_32+2,w
  5468  0264  04F7               	iorwf	swap_endian_32@r+2,f
  5469  0265  0823               	movf	??_swap_endian_32+3,w
  5470  0266  04F8               	iorwf	swap_endian_32@r+3,f
  5471                           
  5472                           ;xbee.c: 163: r |= ((n>>24)&0xFF);
  5473  0267  30FF               	movlw	255
  5474  0268  00A0               	movwf	??_swap_endian_32
  5475  0269  3000               	movlw	0
  5476  026A  00A1               	movwf	??_swap_endian_32+1
  5477  026B  3000               	movlw	0
  5478  026C  00A2               	movwf	??_swap_endian_32+2
  5479  026D  3000               	movlw	0
  5480  026E  00A3               	movwf	??_swap_endian_32+3
  5481  026F  0871               	movf	swap_endian_32@n,w
  5482  0270  00A4               	movwf	??_swap_endian_32+4
  5483  0271  0872               	movf	swap_endian_32@n+1,w
  5484  0272  00A5               	movwf	??_swap_endian_32+5
  5485  0273  0873               	movf	swap_endian_32@n+2,w
  5486  0274  00A6               	movwf	??_swap_endian_32+6
  5487  0275  0874               	movf	swap_endian_32@n+3,w
  5488  0276  00A7               	movwf	??_swap_endian_32+7
  5489  0277  3018               	movlw	24
  5490  0278                     u2265:	
  5491  0278  36A7               	lsrf	??_swap_endian_32+7,f
  5492  0279  0CA6               	rrf	??_swap_endian_32+6,f
  5493  027A  0CA5               	rrf	??_swap_endian_32+5,f
  5494  027B  0CA4               	rrf	??_swap_endian_32+4,f
  5495  027C  0B89               	decfsz	9,f
  5496  027D  2A78               	goto	u2265
  5497  027E  0824               	movf	??_swap_endian_32+4,w
  5498  027F  05A0               	andwf	??_swap_endian_32,f
  5499  0280  0825               	movf	??_swap_endian_32+5,w
  5500  0281  05A1               	andwf	??_swap_endian_32+1,f
  5501  0282  0826               	movf	??_swap_endian_32+6,w
  5502  0283  05A2               	andwf	??_swap_endian_32+2,f
  5503  0284  0827               	movf	??_swap_endian_32+7,w
  5504  0285  05A3               	andwf	??_swap_endian_32+3,f
  5505  0286  0820               	movf	??_swap_endian_32,w
  5506  0287  04F5               	iorwf	swap_endian_32@r,f
  5507  0288  0821               	movf	??_swap_endian_32+1,w
  5508  0289  04F6               	iorwf	swap_endian_32@r+1,f
  5509  028A  0822               	movf	??_swap_endian_32+2,w
  5510  028B  04F7               	iorwf	swap_endian_32@r+2,f
  5511  028C  0823               	movf	??_swap_endian_32+3,w
  5512  028D  04F8               	iorwf	swap_endian_32@r+3,f
  5513                           
  5514                           ;xbee.c: 165: return r;
  5515  028E  0878               	movf	swap_endian_32@r+3,w
  5516  028F  00F4               	movwf	?_swap_endian_32+3
  5517  0290  0877               	movf	swap_endian_32@r+2,w
  5518  0291  00F3               	movwf	?_swap_endian_32+2
  5519  0292  0876               	movf	swap_endian_32@r+1,w
  5520  0293  00F2               	movwf	?_swap_endian_32+1
  5521  0294  0875               	movf	swap_endian_32@r,w
  5522  0295  00F1               	movwf	?_swap_endian_32
  5523  0296  0008               	return
  5524  0297                     __end_of_swap_endian_32:	
  5525                           
  5526                           	psect	text25
  5527  07D9                     __ptext25:	
  5528 ;; *************** function _doChecksumVerify *****************
  5529 ;; Defined at:
  5530 ;;		line 103 in file "xbee.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  address         1    wreg     PTR unsigned char 
  5533 ;;		 -> apiFrame(60), 
  5534 ;;  length          2    1[COMMON] int 
  5535 ;;  checksum        1    3[COMMON] unsigned char 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  address         1    6[COMMON] PTR unsigned char 
  5538 ;;		 -> apiFrame(60), 
  5539 ;;  i               2    8[COMMON] int 
  5540 ;;  check           1    7[COMMON] unsigned char 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      unsigned char 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5550 ;;      Params:         3       0       0       0       0       0       0       0
  5551 ;;      Locals:         4       0       0       0       0       0       0       0
  5552 ;;      Temps:          2       0       0       0       0       0       0       0
  5553 ;;      Totals:         9       0       0       0       0       0       0       0
  5554 ;;Total ram usage:        9 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    1
  5557 ;; This function calls:
  5558 ;;		Nothing
  5559 ;; This function is called by:
  5560 ;;		_XBAPI_Command
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           
  5565                           ;psect for function _doChecksumVerify
  5566  07D9                     _doChecksumVerify:	
  5567                           
  5568                           ;incstack = 0
  5569                           ; Regs used in _doChecksumVerify: [wreg+fsr1l+fsr1h+status,2+status,0]
  5570                           ;doChecksumVerify@address stored from wreg
  5571  07D9  00F6               	movwf	doChecksumVerify@address
  5572                           
  5573                           ;xbee.c: 104: unsigned char check = 0;
  5574  07DA  01F7               	clrf	doChecksumVerify@check
  5575                           
  5576                           ;xbee.c: 106: int i;
  5577                           ;xbee.c: 107: for(i=0; i<length; i++) {
  5578  07DB  01F8               	clrf	doChecksumVerify@i
  5579  07DC  01F9               	clrf	doChecksumVerify@i+1
  5580  07DD                     l2158:	
  5581  07DD  0879               	movf	doChecksumVerify@i+1,w
  5582  07DE  3A80               	xorlw	128
  5583  07DF  00F4               	movwf	??_doChecksumVerify
  5584  07E0  0872               	movf	doChecksumVerify@length+1,w
  5585  07E1  3A80               	xorlw	128
  5586  07E2  0274               	subwf	??_doChecksumVerify,w
  5587  07E3  1D03               	skipz
  5588  07E4  2FE7               	goto	u1505
  5589  07E5  0871               	movf	doChecksumVerify@length,w
  5590  07E6  0278               	subwf	doChecksumVerify@i,w
  5591  07E7                     u1505:	
  5592  07E7  1803               	btfsc	3,0
  5593  07E8  2FF9               	goto	l2160
  5594                           
  5595                           ;xbee.c: 108: check += address[i];
  5596  07E9  0878               	movf	doChecksumVerify@i,w
  5597  07EA  0776               	addwf	doChecksumVerify@address,w
  5598  07EB  00F4               	movwf	??_doChecksumVerify
  5599  07EC  0874               	movf	??_doChecksumVerify,w
  5600  07ED  0086               	movwf	6
  5601  07EE  3001               	movlw	1	; select bank2/3
  5602  07EF  0087               	movwf	7
  5603  07F0  0801               	movf	1,w
  5604  07F1  00F5               	movwf	??_doChecksumVerify+1
  5605  07F2  0875               	movf	??_doChecksumVerify+1,w
  5606  07F3  07F7               	addwf	doChecksumVerify@check,f
  5607  07F4  3001               	movlw	1
  5608  07F5  07F8               	addwf	doChecksumVerify@i,f
  5609  07F6  3000               	movlw	0
  5610  07F7  3DF9               	addwfc	doChecksumVerify@i+1,f
  5611  07F8  2FDD               	goto	l2158
  5612  07F9                     l2160:	
  5613                           
  5614                           ;xbee.c: 109: }
  5615                           ;xbee.c: 111: check += checksum;
  5616  07F9  0873               	movf	doChecksumVerify@checksum,w
  5617  07FA  00F4               	movwf	??_doChecksumVerify
  5618  07FB  0874               	movf	??_doChecksumVerify,w
  5619  07FC  07F7               	addwf	doChecksumVerify@check,f
  5620                           
  5621                           ;xbee.c: 113: return check;
  5622  07FD  0877               	movf	doChecksumVerify@check,w
  5623  07FE  0008               	return
  5624  07FF                     __end_of_doChecksumVerify:	
  5625                           
  5626                           	psect	text26
  5627  0F2B                     __ptext26:	
  5628 ;; *************** function _checksum *****************
  5629 ;; Defined at:
  5630 ;;		line 90 in file "xbee.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  addr            1    wreg     PTR void 
  5633 ;;		 -> apiFrame(60), 
  5634 ;;  length          2    1[COMMON] int 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  addr            1    5[COMMON] PTR void 
  5637 ;;		 -> apiFrame(60), 
  5638 ;;  i               2    8[COMMON] int 
  5639 ;;  checksum        1    7[COMMON] unsigned char 
  5640 ;;  address         1    6[COMMON] PTR unsigned char 
  5641 ;;		 -> apiFrame(60), 
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  1    wreg      unsigned char 
  5644 ;; Registers used:
  5645 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5651 ;;      Params:         2       0       0       0       0       0       0       0
  5652 ;;      Locals:         5       0       0       0       0       0       0       0
  5653 ;;      Temps:          2       0       0       0       0       0       0       0
  5654 ;;      Totals:         9       0       0       0       0       0       0       0
  5655 ;;Total ram usage:        9 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    1
  5658 ;; This function calls:
  5659 ;;		Nothing
  5660 ;; This function is called by:
  5661 ;;		_XBAPI_Transmit
  5662 ;;		_XBAPI_Command
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           
  5667                           ;psect for function _checksum
  5668  0F2B                     _checksum:	
  5669                           
  5670                           ;incstack = 0
  5671                           ; Regs used in _checksum: [wreg+fsr1l+fsr1h+status,2+status,0]
  5672                           ;checksum@addr stored from wreg
  5673  0F2B  00F5               	movwf	checksum@addr
  5674                           
  5675                           ;xbee.c: 91: unsigned char* address = (unsigned char*) addr;
  5676  0F2C  0875               	movf	checksum@addr,w
  5677  0F2D  00F3               	movwf	??_checksum
  5678  0F2E  0873               	movf	??_checksum,w
  5679  0F2F  00F6               	movwf	checksum@address
  5680                           
  5681                           ;xbee.c: 94: unsigned char checksum = 0;
  5682  0F30  01F7               	clrf	checksum@checksum
  5683                           
  5684                           ;xbee.c: 95: int i;
  5685                           ;xbee.c: 96: for(i=0; i<length; i++) {
  5686  0F31  01F8               	clrf	checksum@i
  5687  0F32  01F9               	clrf	checksum@i+1
  5688  0F33                     l2146:	
  5689  0F33  0879               	movf	checksum@i+1,w
  5690  0F34  3A80               	xorlw	128
  5691  0F35  00F3               	movwf	??_checksum
  5692  0F36  0872               	movf	checksum@length+1,w
  5693  0F37  3A80               	xorlw	128
  5694  0F38  0273               	subwf	??_checksum,w
  5695  0F39  1D03               	skipz
  5696  0F3A  2F3D               	goto	u1495
  5697  0F3B  0871               	movf	checksum@length,w
  5698  0F3C  0278               	subwf	checksum@i,w
  5699  0F3D                     u1495:	
  5700  0F3D  1803               	btfsc	3,0
  5701  0F3E  2F4F               	goto	l2148
  5702                           
  5703                           ;xbee.c: 97: checksum += address[i];
  5704  0F3F  0878               	movf	checksum@i,w
  5705  0F40  0776               	addwf	checksum@address,w
  5706  0F41  00F3               	movwf	??_checksum
  5707  0F42  0873               	movf	??_checksum,w
  5708  0F43  0086               	movwf	6
  5709  0F44  3001               	movlw	1	; select bank2/3
  5710  0F45  0087               	movwf	7
  5711  0F46  0801               	movf	1,w
  5712  0F47  00F4               	movwf	??_checksum+1
  5713  0F48  0874               	movf	??_checksum+1,w
  5714  0F49  07F7               	addwf	checksum@checksum,f
  5715  0F4A  3001               	movlw	1
  5716  0F4B  07F8               	addwf	checksum@i,f
  5717  0F4C  3000               	movlw	0
  5718  0F4D  3DF9               	addwfc	checksum@i+1,f
  5719  0F4E  2F33               	goto	l2146
  5720  0F4F                     l2148:	
  5721                           
  5722                           ;xbee.c: 98: }
  5723                           ;xbee.c: 100: return 0xFF - checksum;
  5724  0F4F  0377               	decf	checksum@checksum,w
  5725  0F50  3AFF               	xorlw	255
  5726  0F51  3EFF               	addlw	255
  5727  0F52  0008               	return
  5728  0F53                     __end_of_checksum:	
  5729                           
  5730                           	psect	text27
  5731  07A8                     __ptext27:	
  5732 ;; *************** function _UART_TransmitMsg *****************
  5733 ;; Defined at:
  5734 ;;		line 27 in file "uart.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  _msg            1    wreg     PTR  unsigned char 
  5737 ;;		 -> apiFrame(60), 
  5738 ;;  len             2    2[COMMON] int 
  5739 ;;  end_char        1    4[COMMON] const unsigned char 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  _msg            1    6[COMMON] PTR  unsigned char 
  5742 ;;		 -> apiFrame(60), 
  5743 ;;  i               2    7[COMMON] int 
  5744 ;; Return value:  Size  Location     Type
  5745 ;;		None               void
  5746 ;; Registers used:
  5747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5753 ;;      Params:         3       0       0       0       0       0       0       0
  5754 ;;      Locals:         3       0       0       0       0       0       0       0
  5755 ;;      Temps:          1       0       0       0       0       0       0       0
  5756 ;;      Totals:         7       0       0       0       0       0       0       0
  5757 ;;Total ram usage:        7 bytes
  5758 ;; Hardware stack levels used:    1
  5759 ;; Hardware stack levels required when called:    2
  5760 ;; This function calls:
  5761 ;;		_UART_Transmit
  5762 ;; This function is called by:
  5763 ;;		_XBAPI_Transmit
  5764 ;;		_XBAPI_Command
  5765 ;;		_XBee_Send
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           
  5770                           ;psect for function _UART_TransmitMsg
  5771  07A8                     _UART_TransmitMsg:	
  5772                           
  5773                           ;incstack = 0
  5774                           ; Regs used in _UART_TransmitMsg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5775                           ;UART_TransmitMsg@_msg stored from wreg
  5776  07A8  00F6               	movwf	UART_TransmitMsg@_msg
  5777                           
  5778                           ;uart.c: 29: int i;
  5779                           ;uart.c: 30: for(i=0; i<len; i++) {
  5780  07A9  01F7               	clrf	UART_TransmitMsg@i
  5781  07AA  01F8               	clrf	UART_TransmitMsg@i+1
  5782  07AB                     l154:	
  5783  07AB  0878               	movf	UART_TransmitMsg@i+1,w
  5784  07AC  3A80               	xorlw	128
  5785  07AD  00F5               	movwf	??_UART_TransmitMsg
  5786  07AE  0873               	movf	UART_TransmitMsg@len+1,w
  5787  07AF  3A80               	xorlw	128
  5788  07B0  0275               	subwf	??_UART_TransmitMsg,w
  5789  07B1  1D03               	skipz
  5790  07B2  2FB5               	goto	u1375
  5791  07B3  0872               	movf	UART_TransmitMsg@len,w
  5792  07B4  0277               	subwf	UART_TransmitMsg@i,w
  5793  07B5                     u1375:	
  5794  07B5  1803               	btfsc	3,0
  5795  07B6  2FD5               	goto	l158
  5796                           
  5797                           ;uart.c: 31: UART_Transmit(_msg[i]);
  5798  07B7  0877               	movf	UART_TransmitMsg@i,w
  5799  07B8  0776               	addwf	UART_TransmitMsg@_msg,w
  5800  07B9  00F5               	movwf	??_UART_TransmitMsg
  5801  07BA  0875               	movf	??_UART_TransmitMsg,w
  5802  07BB  0086               	movwf	6
  5803  07BC  3001               	movlw	1	; select bank2/3
  5804  07BD  0087               	movwf	7
  5805  07BE  0801               	movf	1,w
  5806  07BF  318D  25BA  3187   	fcall	_UART_Transmit
  5807                           
  5808                           ;uart.c: 33: if(end_char && _msg[i] == end_char) {
  5809  07C2  0874               	movf	UART_TransmitMsg@end_char,w
  5810  07C3  1903               	btfsc	3,2
  5811  07C4  2FD0               	goto	l2082
  5812  07C5  0877               	movf	UART_TransmitMsg@i,w
  5813  07C6  0776               	addwf	UART_TransmitMsg@_msg,w
  5814  07C7  00F5               	movwf	??_UART_TransmitMsg
  5815  07C8  0875               	movf	??_UART_TransmitMsg,w
  5816  07C9  0086               	movwf	6
  5817  07CA  3001               	movlw	1	; select bank2/3
  5818  07CB  0087               	movwf	7
  5819  07CC  0801               	movf	1,w
  5820  07CD  0674               	xorwf	UART_TransmitMsg@end_char,w
  5821  07CE  1903               	btfsc	3,2
  5822  07CF  2FD5               	goto	l158
  5823  07D0                     l2082:	
  5824                           ;uart.c: 34: break;
  5825                           
  5826  07D0  3001               	movlw	1
  5827  07D1  07F7               	addwf	UART_TransmitMsg@i,f
  5828  07D2  3000               	movlw	0
  5829  07D3  3DF8               	addwfc	UART_TransmitMsg@i+1,f
  5830  07D4  2FAB               	goto	l154
  5831  07D5                     l158:	
  5832                           ;uart.c: 35: }
  5833                           ;uart.c: 36: }
  5834                           ;uart.c: 38: while(!TX1STAbits.TRMT) {}
  5835                           
  5836  07D5  0023               	movlb	3	; select bank3
  5837  07D6  189E               	btfsc	30,1	;volatile
  5838  07D7  0008               	return
  5839  07D8  2FD5               	goto	l158
  5840  07D9                     __end_of_UART_TransmitMsg:	
  5841                           
  5842                           	psect	text28
  5843  0DBA                     __ptext28:	
  5844 ;; *************** function _UART_Transmit *****************
  5845 ;; Defined at:
  5846 ;;		line 17 in file "uart.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  c               1    wreg     volatile unsigned char 
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;  c               1    1[COMMON] volatile unsigned char 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;		None               void
  5853 ;; Registers used:
  5854 ;;		wreg
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5860 ;;      Params:         0       0       0       0       0       0       0       0
  5861 ;;      Locals:         1       0       0       0       0       0       0       0
  5862 ;;      Temps:          0       0       0       0       0       0       0       0
  5863 ;;      Totals:         1       0       0       0       0       0       0       0
  5864 ;;Total ram usage:        1 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; Hardware stack levels required when called:    1
  5867 ;; This function calls:
  5868 ;;		Nothing
  5869 ;; This function is called by:
  5870 ;;		_UART_TransmitMsg
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           
  5875                           ;psect for function _UART_Transmit
  5876  0DBA                     _UART_Transmit:	
  5877                           
  5878                           ;incstack = 0
  5879                           ; Regs used in _UART_Transmit: [wreg]
  5880                           ;UART_Transmit@c stored from wreg
  5881  0DBA  00F1               	movwf	UART_Transmit@c	;volatile
  5882  0DBB                     l145:	
  5883                           ;uart.c: 18: while(!OSCSTATbits.OSTS) {}
  5884                           
  5885  0DBB  0021               	movlb	1	; select bank1
  5886  0DBC  1E9A               	btfss	26,5	;volatile
  5887  0DBD  2DBB               	goto	l145
  5888  0DBE                     l148:	
  5889                           ;uart.c: 20: while(!TXSTAbits.TRMT) {}
  5890                           
  5891  0DBE  0023               	movlb	3	; select bank3
  5892  0DBF  1C9E               	btfss	30,1	;volatile
  5893  0DC0  2DBE               	goto	l148
  5894                           
  5895                           ;uart.c: 22: TX1REG = c;
  5896  0DC1  009A               	movwf	26	;volatile
  5897  0DC2  0008               	return
  5898  0DC3                     __end_of_UART_Transmit:	
  5899                           
  5900                           	psect	text29
  5901  0129                     __ptext29:	
  5902 ;; *************** function _XBAPI_HandleFrame *****************
  5903 ;; Defined at:
  5904 ;;		line 214 in file "xbee.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  expected        2   14[BANK0 ] int 
  5907 ;;  do_tmo          2   16[BANK0 ] int 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  packet          1   22[BANK0 ] PTR struct .
  5910 ;;		 -> apiFrame(60), 
  5911 ;;  received_len    2   23[BANK0 ] unsigned short 
  5912 ;;  bytes_read      2   20[BANK0 ] int 
  5913 ;;  tmo             4   25[BANK0 ] long 
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  2   14[BANK0 ] int 
  5916 ;; Registers used:
  5917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5923 ;;      Params:         0       4       0       0       0       0       0       0
  5924 ;;      Locals:         0       9       0       0       0       0       0       0
  5925 ;;      Temps:          0       2       0       0       0       0       0       0
  5926 ;;      Totals:         0      15       0       0       0       0       0       0
  5927 ;;Total ram usage:       15 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    3
  5930 ;; This function calls:
  5931 ;;		_UART_ReceiveMsgTmo
  5932 ;;		_memcpy
  5933 ;; This function is called by:
  5934 ;;		_main
  5935 ;;		_XBAPI_Transmit
  5936 ;;		_XBAPI_Command
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           
  5941                           ;psect for function _XBAPI_HandleFrame
  5942  0129                     _XBAPI_HandleFrame:	
  5943                           
  5944                           ;xbee.c: 217: long tmo = (do_tmo) ? 8000000>>1 : 0;
  5945                           
  5946                           ;incstack = 0
  5947                           ; Regs used in _XBAPI_HandleFrame: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  5948  0129  0020               	movlb	0	; select bank0
  5949  012A  0831               	movf	XBAPI_HandleFrame@do_tmo+1,w
  5950  012B  0430               	iorwf	XBAPI_HandleFrame@do_tmo,w
  5951  012C  1D03               	skipz
  5952  012D  2934               	goto	l2538
  5953  012E  3000               	movlw	0
  5954  012F  00BC               	movwf	XBAPI_HandleFrame@tmo+3
  5955  0130  3000               	movlw	0
  5956  0131  00BB               	movwf	XBAPI_HandleFrame@tmo+2
  5957  0132  3000               	movlw	0
  5958  0133  2939               	goto	L2
  5959  0134                     l2538:	
  5960  0134  3000               	movlw	0
  5961  0135  00BC               	movwf	XBAPI_HandleFrame@tmo+3
  5962  0136  303D               	movlw	61
  5963  0137  00BB               	movwf	XBAPI_HandleFrame@tmo+2
  5964  0138  3009               	movlw	9
  5965  0139                     L2:	
  5966  0139  00BA               	movwf	XBAPI_HandleFrame@tmo+1
  5967  013A  3000               	movlw	0
  5968  013B  00B9               	movwf	XBAPI_HandleFrame@tmo
  5969  013C                     l2540:	
  5970                           ;xbee.c: 219: while (1) {
  5971                           
  5972                           
  5973                           ;xbee.c: 220: int bytes_read = UART_ReceiveMsgTmo(apiFrame.buffer, 3, 0, tmo);
  5974  013C  3003               	movlw	3
  5975  013D  00A0               	movwf	?_UART_ReceiveMsgTmo
  5976  013E  3000               	movlw	0
  5977  013F  00A1               	movwf	?_UART_ReceiveMsgTmo+1
  5978  0140  01A2               	clrf	?_UART_ReceiveMsgTmo+2
  5979  0141  083C               	movf	XBAPI_HandleFrame@tmo+3,w
  5980  0142  00A6               	movwf	?_UART_ReceiveMsgTmo+6
  5981  0143  083B               	movf	XBAPI_HandleFrame@tmo+2,w
  5982  0144  00A5               	movwf	?_UART_ReceiveMsgTmo+5
  5983  0145  083A               	movf	XBAPI_HandleFrame@tmo+1,w
  5984  0146  00A4               	movwf	?_UART_ReceiveMsgTmo+4
  5985  0147  0839               	movf	XBAPI_HandleFrame@tmo,w
  5986  0148  00A3               	movwf	?_UART_ReceiveMsgTmo+3
  5987  0149  3020               	movlw	_apiFrame& (0+255)
  5988  014A  3185  250A  3181   	fcall	_UART_ReceiveMsgTmo
  5989  014D  0020               	movlb	0	; select bank0
  5990  014E  0821               	movf	?_UART_ReceiveMsgTmo+1,w
  5991  014F  01B5               	clrf	XBAPI_HandleFrame@bytes_read+1
  5992  0150  07B5               	addwf	XBAPI_HandleFrame@bytes_read+1,f
  5993  0151  0820               	movf	?_UART_ReceiveMsgTmo,w
  5994  0152  01B4               	clrf	XBAPI_HandleFrame@bytes_read
  5995  0153  07B4               	addwf	XBAPI_HandleFrame@bytes_read,f
  5996                           
  5997                           ;xbee.c: 221: if(bytes_read<3) {
  5998  0154  0835               	movf	XBAPI_HandleFrame@bytes_read+1,w
  5999  0155  3A80               	xorlw	128
  6000  0156  00FF               	movwf	127
  6001  0157  3080               	movlw	128
  6002  0158  027F               	subwf	127,w
  6003  0159  1D03               	skipz
  6004  015A  295D               	goto	u2035
  6005  015B  3003               	movlw	3
  6006  015C  0234               	subwf	XBAPI_HandleFrame@bytes_read,w
  6007  015D                     u2035:	
  6008  015D  1803               	skipnc
  6009  015E  2965               	goto	l2548
  6010                           
  6011                           ;xbee.c: 222: return -2;
  6012  015F  30FE               	movlw	254
  6013  0160  0020               	movlb	0	; select bank0
  6014  0161  00AE               	movwf	?_XBAPI_HandleFrame
  6015  0162  30FF               	movlw	255
  6016  0163  00AF               	movwf	?_XBAPI_HandleFrame+1
  6017  0164  0008               	return
  6018  0165                     l2548:	
  6019                           
  6020                           ;xbee.c: 223: }
  6021                           ;xbee.c: 225: unsigned short received_length = apiFrame.buffer[2];
  6022  0165  0022               	movlb	2	; select bank2
  6023  0166  0822               	movf	(_apiFrame^(0+256)+2),w
  6024  0167  0020               	movlb	0	; select bank0
  6025  0168  00B2               	movwf	??_XBAPI_HandleFrame
  6026  0169  01B3               	clrf	??_XBAPI_HandleFrame+1
  6027  016A  0832               	movf	??_XBAPI_HandleFrame,w
  6028  016B  00B7               	movwf	XBAPI_HandleFrame@received_length
  6029  016C  0833               	movf	??_XBAPI_HandleFrame+1,w
  6030  016D  00B8               	movwf	XBAPI_HandleFrame@received_length+1
  6031                           
  6032                           ;xbee.c: 226: received_length |= (apiFrame.buffer[1] << 8);
  6033  016E  0022               	movlb	2	; select bank2
  6034  016F  0821               	movf	(_apiFrame^(0+256)+1),w
  6035  0170  0020               	movlb	0	; select bank0
  6036  0171  00B2               	movwf	??_XBAPI_HandleFrame
  6037  0172  01B3               	clrf	??_XBAPI_HandleFrame+1
  6038  0173  0832               	movf	??_XBAPI_HandleFrame,w
  6039  0174  00B3               	movwf	??_XBAPI_HandleFrame+1
  6040  0175  01B2               	clrf	??_XBAPI_HandleFrame
  6041  0176  0832               	movf	??_XBAPI_HandleFrame,w
  6042  0177  04B7               	iorwf	XBAPI_HandleFrame@received_length,f
  6043  0178  0833               	movf	??_XBAPI_HandleFrame+1,w
  6044  0179  04B8               	iorwf	XBAPI_HandleFrame@received_length+1,f
  6045                           
  6046                           ;xbee.c: 228: UART_ReceiveMsgTmo(apiFrame.buffer + 3, received_length + 1, 0, tmo);
  6047  017A  0837               	movf	XBAPI_HandleFrame@received_length,w
  6048  017B  3E01               	addlw	1
  6049  017C  00A0               	movwf	?_UART_ReceiveMsgTmo
  6050  017D  3000               	movlw	0
  6051  017E  3D38               	addwfc	XBAPI_HandleFrame@received_length+1,w
  6052  017F  00A1               	movwf	?_UART_ReceiveMsgTmo+1
  6053  0180  01A2               	clrf	?_UART_ReceiveMsgTmo+2
  6054  0181  083C               	movf	XBAPI_HandleFrame@tmo+3,w
  6055  0182  00A6               	movwf	?_UART_ReceiveMsgTmo+6
  6056  0183  083B               	movf	XBAPI_HandleFrame@tmo+2,w
  6057  0184  00A5               	movwf	?_UART_ReceiveMsgTmo+5
  6058  0185  083A               	movf	XBAPI_HandleFrame@tmo+1,w
  6059  0186  00A4               	movwf	?_UART_ReceiveMsgTmo+4
  6060  0187  0839               	movf	XBAPI_HandleFrame@tmo,w
  6061  0188  00A3               	movwf	?_UART_ReceiveMsgTmo+3
  6062  0189  3023               	movlw	(_apiFrame+3)& (0+255)
  6063  018A  3185  250A  3181   	fcall	_UART_ReceiveMsgTmo
  6064                           
  6065                           ;xbee.c: 230: if (apiFrame.rx.frame_type != expected && expected) {
  6066  018D  0022               	movlb	2	; select bank2
  6067  018E  0823               	movf	(_apiFrame^(0+256)+3),w
  6068  018F  0020               	movlb	0	; select bank0
  6069  0190  00B2               	movwf	??_XBAPI_HandleFrame
  6070  0191  01B3               	clrf	??_XBAPI_HandleFrame+1
  6071  0192  082F               	movf	XBAPI_HandleFrame@expected+1,w
  6072  0193  0633               	xorwf	??_XBAPI_HandleFrame+1,w
  6073  0194  1D03               	skipz
  6074  0195  2998               	goto	u2045
  6075  0196  082E               	movf	XBAPI_HandleFrame@expected,w
  6076  0197  0632               	xorwf	??_XBAPI_HandleFrame,w
  6077  0198                     u2045:	
  6078  0198  1903               	skipnz
  6079  0199  29D5               	goto	l2580
  6080  019A  082F               	movf	XBAPI_HandleFrame@expected+1,w
  6081  019B  042E               	iorwf	XBAPI_HandleFrame@expected,w
  6082  019C  1D03               	btfss	3,2
  6083  019D  293C               	goto	l2540
  6084  019E  29D5               	goto	l2580
  6085  019F                     l2562:	
  6086                           ;xbee.c: 242: case 0x90: {
  6087                           
  6088                           ;xbee.c: 236: }
  6089                           ;xbee.c: 237: }
  6090                           ;xbee.c: 241: switch(apiFrame.rx.frame_type) {
  6091                           
  6092                           ;xbee.c: 235: break;
  6093                           
  6094                           ;xbee.c: 234: } else {
  6095                           
  6096                           ;xbee.c: 232: continue;
  6097                           
  6098                           
  6099                           ;xbee.c: 243: Packet* packet = &apiFrame.rx.packet;
  6100  019F  3030               	movlw	(_apiFrame+16)& (0+255)
  6101  01A0  0020               	movlb	0	; select bank0
  6102  01A1  00B2               	movwf	??_XBAPI_HandleFrame
  6103  01A2  0832               	movf	??_XBAPI_HandleFrame,w
  6104  01A3  00B6               	movwf	XBAPI_HandleFrame@packet
  6105                           
  6106                           ;xbee.c: 244: switch(packet->header.command) {
  6107  01A4  29B5               	goto	l2568
  6108  01A5                     l2564:	
  6109                           ;xbee.c: 245: case 0x04:
  6110                           
  6111                           
  6112                           ;xbee.c: 246: {
  6113                           ;xbee.c: 247: memcpy(&dest_address, &apiFrame.rx.source_address, sizeof(XBeeAddress));
  6114  01A5  30C0               	movlw	low _dest_address
  6115  01A6  00F1               	movwf	?_memcpy
  6116  01A7  3000               	movlw	high _dest_address
  6117  01A8  00F2               	movwf	?_memcpy+1
  6118  01A9  3025               	movlw	low (_apiFrame+5)
  6119  01AA  00F3               	movwf	?_memcpy+2
  6120  01AB  3001               	movlw	high (_apiFrame+5)
  6121  01AC  00F4               	movwf	?_memcpy+3
  6122  01AD  3008               	movlw	8
  6123  01AE  00F5               	movwf	?_memcpy+4
  6124  01AF  3000               	movlw	0
  6125  01B0  00F6               	movwf	?_memcpy+5
  6126  01B1  318F  27A6  3181   	fcall	_memcpy
  6127                           
  6128                           ;xbee.c: 252: }
  6129                           
  6130                           ;xbee.c: 251: } break;
  6131  01B4  29E1               	goto	l2582
  6132  01B5                     l2568:	
  6133  01B5  0020               	movlb	0	; select bank0
  6134  01B6  0836               	movf	XBAPI_HandleFrame@packet,w
  6135  01B7  3E05               	addlw	5
  6136  01B8  0086               	movwf	6
  6137  01B9  3001               	movlw	1	; select bank2/3
  6138  01BA  0087               	movwf	7
  6139  01BB  0801               	movf	1,w
  6140                           
  6141                           ; Switch size 1, requested type "space"
  6142                           ; Number of cases is 1, Range of values is 4 to 4
  6143                           ; switch strategies available:
  6144                           ; Name         Instructions Cycles
  6145                           ; simple_byte            4     3 (average)
  6146                           ; direct_byte           11     9 (fixed)
  6147                           ; jumptable            263     9 (fixed)
  6148                           ;	Chosen strategy is simple_byte
  6149  01BC  3A04               	xorlw	4	; case 4
  6150  01BD  1903               	skipnz
  6151  01BE  29A5               	goto	l2564
  6152  01BF  29E1               	goto	l2582
  6153                           
  6154                           ;xbee.c: 254: } break;
  6155  01C0  29E1               	goto	l2582
  6156  01C1                     l2570:	
  6157                           ;xbee.c: 256: case 0x8B: {
  6158                           
  6159                           
  6160                           ;xbee.c: 258: return apiFrame.txStatus.delivery_status;
  6161  01C1  0022               	movlb	2	; select bank2
  6162  01C2  0828               	movf	(_apiFrame^(0+256)+8),w
  6163  01C3  0020               	movlb	0	; select bank0
  6164  01C4  00B2               	movwf	??_XBAPI_HandleFrame
  6165  01C5  01B3               	clrf	??_XBAPI_HandleFrame+1
  6166  01C6  0832               	movf	??_XBAPI_HandleFrame,w
  6167  01C7  00AE               	movwf	?_XBAPI_HandleFrame
  6168  01C8  0833               	movf	??_XBAPI_HandleFrame+1,w
  6169  01C9  00AF               	movwf	?_XBAPI_HandleFrame+1
  6170  01CA  0008               	return
  6171  01CB                     l2574:	
  6172                           ;xbee.c: 259: }
  6173                           ;xbee.c: 261: case 0x88: {
  6174                           
  6175                           
  6176                           ;xbee.c: 262: return apiFrame.atCmdResponse.cmd_status;
  6177  01CB  0022               	movlb	2	; select bank2
  6178  01CC  0827               	movf	(_apiFrame^(0+256)+7),w
  6179  01CD  0020               	movlb	0	; select bank0
  6180  01CE  00B2               	movwf	??_XBAPI_HandleFrame
  6181  01CF  01B3               	clrf	??_XBAPI_HandleFrame+1
  6182  01D0  0832               	movf	??_XBAPI_HandleFrame,w
  6183  01D1  00AE               	movwf	?_XBAPI_HandleFrame
  6184  01D2  0833               	movf	??_XBAPI_HandleFrame+1,w
  6185  01D3  00AF               	movwf	?_XBAPI_HandleFrame+1
  6186  01D4  0008               	return
  6187  01D5                     l2580:	
  6188                           ;xbee.c: 267: }
  6189                           
  6190                           ;xbee.c: 266: break;
  6191                           
  6192                           ;xbee.c: 263: }
  6193                           ;xbee.c: 265: default:
  6194                           
  6195  01D5  0022               	movlb	2	; select bank2
  6196  01D6  0823               	movf	(_apiFrame^(0+256)+3),w
  6197                           
  6198                           ; Switch size 1, requested type "space"
  6199                           ; Number of cases is 3, Range of values is 136 to 144
  6200                           ; switch strategies available:
  6201                           ; Name         Instructions Cycles
  6202                           ; simple_byte           10     6 (average)
  6203                           ; direct_byte           27     9 (fixed)
  6204                           ; jumptable            263     9 (fixed)
  6205                           ;	Chosen strategy is simple_byte
  6206  01D7  3A88               	xorlw	136	; case 136
  6207  01D8  1903               	skipnz
  6208  01D9  29CB               	goto	l2574
  6209  01DA  3A03               	xorlw	3	; case 139
  6210  01DB  1903               	skipnz
  6211  01DC  29C1               	goto	l2570
  6212  01DD  3A1B               	xorlw	27	; case 144
  6213  01DE  1903               	skipnz
  6214  01DF  299F               	goto	l2562
  6215  01E0  29E1               	goto	l2582
  6216  01E1                     l2582:	
  6217                           
  6218                           ;xbee.c: 269: return -1;
  6219  01E1  30FF               	movlw	255
  6220  01E2  0020               	movlb	0	; select bank0
  6221  01E3  00AE               	movwf	?_XBAPI_HandleFrame
  6222  01E4  30FF               	movlw	255
  6223  01E5  00AF               	movwf	?_XBAPI_HandleFrame+1
  6224  01E6  0008               	return
  6225  01E7                     __end_of_XBAPI_HandleFrame:	
  6226                           
  6227                           	psect	text30
  6228  0FA6                     __ptext30:	
  6229 ;; *************** function _memcpy *****************
  6230 ;; Defined at:
  6231 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memcpy.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  d1              2    1[COMMON] PTR void 
  6234 ;;		 -> dest_address(8), apiFrame(60), 
  6235 ;;  s1              2    3[COMMON] PTR const void 
  6236 ;;		 -> packet_buffer(32), dest_address(8), apiFrame(60), 
  6237 ;;  n               2    5[COMMON] unsigned int 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;  s               2   10[COMMON] PTR const unsigned char 
  6240 ;;		 -> packet_buffer(32), dest_address(8), apiFrame(60), 
  6241 ;;  d               2    8[COMMON] PTR unsigned char 
  6242 ;;		 -> dest_address(8), apiFrame(60), 
  6243 ;; Return value:  Size  Location     Type
  6244 ;;                  2    wreg      PTR void 
  6245 ;; Registers used:
  6246 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6247 ;; Tracked objects:
  6248 ;;		On entry : 0/0
  6249 ;;		On exit  : 0/0
  6250 ;;		Unchanged: 0/0
  6251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6252 ;;      Params:         6       0       0       0       0       0       0       0
  6253 ;;      Locals:         4       0       0       0       0       0       0       0
  6254 ;;      Temps:          1       0       0       0       0       0       0       0
  6255 ;;      Totals:        11       0       0       0       0       0       0       0
  6256 ;;Total ram usage:       11 bytes
  6257 ;; Hardware stack levels used:    1
  6258 ;; Hardware stack levels required when called:    1
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_XBAPI_Transmit
  6263 ;;		_XBAPI_HandleFrame
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           
  6268                           ;psect for function _memcpy
  6269  0FA6                     _memcpy:	
  6270                           
  6271                           ;incstack = 0
  6272                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6273  0FA6  0874               	movf	memcpy@s1+1,w
  6274  0FA7  01FB               	clrf	memcpy@s+1
  6275  0FA8  07FB               	addwf	memcpy@s+1,f
  6276  0FA9  0873               	movf	memcpy@s1,w
  6277  0FAA  01FA               	clrf	memcpy@s
  6278  0FAB  07FA               	addwf	memcpy@s,f
  6279  0FAC  0872               	movf	memcpy@d1+1,w
  6280  0FAD  01F9               	clrf	memcpy@d+1
  6281  0FAE  07F9               	addwf	memcpy@d+1,f
  6282  0FAF  0871               	movf	memcpy@d1,w
  6283  0FB0  01F8               	clrf	memcpy@d
  6284  0FB1  07F8               	addwf	memcpy@d,f
  6285  0FB2                     l2218:	
  6286  0FB2  3001               	movlw	1
  6287  0FB3  02F5               	subwf	memcpy@n,f
  6288  0FB4  3000               	movlw	0
  6289  0FB5  3BF6               	subwfb	memcpy@n+1,f
  6290  0FB6  30FF               	movlw	255
  6291  0FB7  0676               	xorwf	memcpy@n+1,w
  6292  0FB8  1D03               	skipz
  6293  0FB9  2FBC               	goto	u1545
  6294  0FBA  30FF               	movlw	255
  6295  0FBB  0675               	xorwf	memcpy@n,w
  6296  0FBC                     u1545:	
  6297  0FBC  1903               	btfsc	3,2
  6298  0FBD  0008               	return
  6299  0FBE  087A               	movf	memcpy@s,w
  6300  0FBF  0086               	movwf	6
  6301  0FC0  087B               	movf	memcpy@s+1,w
  6302  0FC1  0087               	movwf	7
  6303  0FC2  0801               	movf	1,w
  6304  0FC3  00F7               	movwf	??_memcpy
  6305  0FC4  0878               	movf	memcpy@d,w
  6306  0FC5  0086               	movwf	6
  6307  0FC6  0879               	movf	memcpy@d+1,w
  6308  0FC7  0087               	movwf	7
  6309  0FC8  0877               	movf	??_memcpy,w
  6310  0FC9  0081               	movwf	1
  6311  0FCA  3001               	movlw	1
  6312  0FCB  07FA               	addwf	memcpy@s,f
  6313  0FCC  3000               	movlw	0
  6314  0FCD  3DFB               	addwfc	memcpy@s+1,f
  6315  0FCE  3001               	movlw	1
  6316  0FCF  07F8               	addwf	memcpy@d,f
  6317  0FD0  3000               	movlw	0
  6318  0FD1  3DF9               	addwfc	memcpy@d+1,f
  6319  0FD2  2FB2               	goto	l2218
  6320  0FD3                     __end_of_memcpy:	
  6321                           ;	Return value of _memcpy is never used
  6322                           
  6323                           
  6324                           	psect	text31
  6325  050A                     __ptext31:	
  6326 ;; *************** function _UART_ReceiveMsgTmo *****************
  6327 ;; Defined at:
  6328 ;;		line 70 in file "uart.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;  msg             1    wreg     PTR unsigned char 
  6331 ;;		 -> apiFrame(60), 
  6332 ;;  len             2    0[BANK0 ] int 
  6333 ;;  end_char        1    2[BANK0 ] unsigned char 
  6334 ;;  tmo             4    3[BANK0 ] long 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  msg             1    9[BANK0 ] PTR unsigned char 
  6337 ;;		 -> apiFrame(60), 
  6338 ;;  c               2   10[BANK0 ] short 
  6339 ;;  i               2   12[BANK0 ] int 
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  2    0[BANK0 ] int 
  6342 ;; Registers used:
  6343 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6349 ;;      Params:         0       7       0       0       0       0       0       0
  6350 ;;      Locals:         0       5       0       0       0       0       0       0
  6351 ;;      Temps:          0       2       0       0       0       0       0       0
  6352 ;;      Totals:         0      14       0       0       0       0       0       0
  6353 ;;Total ram usage:       14 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; Hardware stack levels required when called:    2
  6356 ;; This function calls:
  6357 ;;		_UART_Receive
  6358 ;; This function is called by:
  6359 ;;		_XBAPI_HandleFrame
  6360 ;;		_UART_ReceiveMsg
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           
  6365                           ;psect for function _UART_ReceiveMsgTmo
  6366  050A                     _UART_ReceiveMsgTmo:	
  6367                           
  6368                           ;incstack = 0
  6369                           ; Regs used in _UART_ReceiveMsgTmo: [wreg+fsr1l+fsr1h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  6370                           ;UART_ReceiveMsgTmo@msg stored from wreg
  6371  050A  0020               	movlb	0	; select bank0
  6372  050B  00A9               	movwf	UART_ReceiveMsgTmo@msg
  6373                           
  6374                           ;uart.c: 71: int i;
  6375                           ;uart.c: 75: for(i=0; i<len; i++) {
  6376  050C  01AC               	clrf	UART_ReceiveMsgTmo@i
  6377  050D  01AD               	clrf	UART_ReceiveMsgTmo@i+1
  6378  050E                     l178:	
  6379  050E  082D               	movf	UART_ReceiveMsgTmo@i+1,w
  6380  050F  3A80               	xorlw	128
  6381  0510  00A7               	movwf	??_UART_ReceiveMsgTmo
  6382  0511  0821               	movf	UART_ReceiveMsgTmo@len+1,w
  6383  0512  3A80               	xorlw	128
  6384  0513  0227               	subwf	??_UART_ReceiveMsgTmo,w
  6385  0514  1D03               	skipz
  6386  0515  2D18               	goto	u2175
  6387  0516  0820               	movf	UART_ReceiveMsgTmo@len,w
  6388  0517  022C               	subwf	UART_ReceiveMsgTmo@i,w
  6389  0518                     u2175:	
  6390  0518  1803               	btfsc	3,0
  6391  0519  2D5B               	goto	l184
  6392                           
  6393                           ;uart.c: 76: short c;
  6394                           ;uart.c: 77: c = UART_Receive(tmo);
  6395  051A  0020               	movlb	0	; select bank0
  6396  051B  0826               	movf	UART_ReceiveMsgTmo@tmo+3,w
  6397  051C  00F4               	movwf	?_UART_Receive+3
  6398  051D  0825               	movf	UART_ReceiveMsgTmo@tmo+2,w
  6399  051E  00F3               	movwf	?_UART_Receive+2
  6400  051F  0824               	movf	UART_ReceiveMsgTmo@tmo+1,w
  6401  0520  00F2               	movwf	?_UART_Receive+1
  6402  0521  0823               	movf	UART_ReceiveMsgTmo@tmo,w
  6403  0522  00F1               	movwf	?_UART_Receive
  6404  0523  3184  245C  3185   	fcall	_UART_Receive
  6405  0526  0872               	movf	?_UART_Receive+1,w
  6406  0527  0020               	movlb	0	; select bank0
  6407  0528  01AB               	clrf	UART_ReceiveMsgTmo@c+1
  6408  0529  07AB               	addwf	UART_ReceiveMsgTmo@c+1,f
  6409  052A  0871               	movf	?_UART_Receive,w
  6410  052B  01AA               	clrf	UART_ReceiveMsgTmo@c
  6411  052C  07AA               	addwf	UART_ReceiveMsgTmo@c,f
  6412                           
  6413                           ;uart.c: 78: if(c!=0x100) {
  6414  052D  3001               	movlw	1
  6415  052E  062B               	xorwf	UART_ReceiveMsgTmo@c+1,w
  6416  052F  1D03               	skipz
  6417  0530  2D33               	goto	u2145
  6418  0531  3000               	movlw	0
  6419  0532  062A               	xorwf	UART_ReceiveMsgTmo@c,w
  6420  0533                     u2145:	
  6421  0533  1903               	skipnz
  6422  0534  2D41               	goto	l2676
  6423                           
  6424                           ;uart.c: 79: msg[i] = c;
  6425  0535  082A               	movf	UART_ReceiveMsgTmo@c,w
  6426  0536  00A7               	movwf	??_UART_ReceiveMsgTmo
  6427  0537  082C               	movf	UART_ReceiveMsgTmo@i,w
  6428  0538  0729               	addwf	UART_ReceiveMsgTmo@msg,w
  6429  0539  00A8               	movwf	??_UART_ReceiveMsgTmo+1
  6430  053A  0828               	movf	??_UART_ReceiveMsgTmo+1,w
  6431  053B  0086               	movwf	6
  6432  053C  3001               	movlw	1	; select bank2/3
  6433  053D  0087               	movwf	7
  6434  053E  0827               	movf	??_UART_ReceiveMsgTmo,w
  6435  053F  0081               	movwf	1
  6436                           
  6437                           ;uart.c: 80: } else {
  6438  0540  2D48               	goto	l2680
  6439  0541                     l2676:	
  6440                           
  6441                           ;uart.c: 81: return i;
  6442  0541  082D               	movf	UART_ReceiveMsgTmo@i+1,w
  6443  0542  01A1               	clrf	?_UART_ReceiveMsgTmo+1
  6444  0543  07A1               	addwf	?_UART_ReceiveMsgTmo+1,f
  6445  0544  082C               	movf	UART_ReceiveMsgTmo@i,w
  6446  0545  01A0               	clrf	?_UART_ReceiveMsgTmo
  6447  0546  07A0               	addwf	?_UART_ReceiveMsgTmo,f
  6448  0547  0008               	return
  6449  0548                     l2680:	
  6450                           
  6451                           ;uart.c: 82: }
  6452                           ;uart.c: 84: if(msg[i] == end_char && end_char) {
  6453  0548  082C               	movf	UART_ReceiveMsgTmo@i,w
  6454  0549  0729               	addwf	UART_ReceiveMsgTmo@msg,w
  6455  054A  00A7               	movwf	??_UART_ReceiveMsgTmo
  6456  054B  0827               	movf	??_UART_ReceiveMsgTmo,w
  6457  054C  0086               	movwf	6
  6458  054D  3001               	movlw	1	; select bank2/3
  6459  054E  0087               	movwf	7
  6460  054F  0801               	movf	1,w
  6461  0550  0622               	xorwf	UART_ReceiveMsgTmo@end_char,w
  6462  0551  1D03               	skipz
  6463  0552  2D56               	goto	l2686
  6464  0553  0822               	movf	UART_ReceiveMsgTmo@end_char,w
  6465  0554  1D03               	skipz
  6466                           
  6467                           ;uart.c: 85: break;
  6468  0555  2D5B               	goto	l184
  6469  0556                     l2686:	
  6470  0556  3001               	movlw	1
  6471  0557  07AC               	addwf	UART_ReceiveMsgTmo@i,f
  6472  0558  3000               	movlw	0
  6473  0559  3DAD               	addwfc	UART_ReceiveMsgTmo@i+1,f
  6474  055A  2D0E               	goto	l178
  6475  055B                     l184:	
  6476                           
  6477                           ;uart.c: 86: }
  6478                           ;uart.c: 87: }
  6479                           ;uart.c: 89: SWDTEN = 0;
  6480  055B  0021               	movlb	1	; select bank1
  6481  055C  1017               	bcf	23,0	;volatile
  6482  055D  0008               	return
  6483  055E                     __end_of_UART_ReceiveMsgTmo:	
  6484                           
  6485                           	psect	text32
  6486  045C                     __ptext32:	
  6487 ;; *************** function _UART_Receive *****************
  6488 ;; Defined at:
  6489 ;;		line 43 in file "uart.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  tmo             4    1[COMMON] long 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;  i               4    7[COMMON] long 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  2    1[COMMON] short 
  6496 ;; Registers used:
  6497 ;;		wreg, btemp+1
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6503 ;;      Params:         4       0       0       0       0       0       0       0
  6504 ;;      Locals:         4       0       0       0       0       0       0       0
  6505 ;;      Temps:          2       0       0       0       0       0       0       0
  6506 ;;      Totals:        10       0       0       0       0       0       0       0
  6507 ;;Total ram usage:       10 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:    1
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		_UART_ReceiveMsgTmo
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           
  6518                           ;psect for function _UART_Receive
  6519  045C                     _UART_Receive:	
  6520  045C                     l164:	
  6521                           ;uart.c: 44: while(!OSCSTATbits.OSTS) {}
  6522                           
  6523                           ;incstack = 0
  6524                           ; Regs used in _UART_Receive: [wreg+btemp+1]
  6525                           
  6526  045C  0021               	movlb	1	; select bank1
  6527  045D  1E9A               	btfss	26,5	;volatile
  6528  045E  2C5C               	goto	l164
  6529                           
  6530                           ;uart.c: 45: long i=0;
  6531  045F  3000               	movlw	0
  6532  0460  00FA               	movwf	UART_Receive@i+3
  6533  0461  3000               	movlw	0
  6534  0462  00F9               	movwf	UART_Receive@i+2
  6535  0463  3000               	movlw	0
  6536  0464  00F8               	movwf	UART_Receive@i+1
  6537  0465  3000               	movlw	0
  6538  0466  00F7               	movwf	UART_Receive@i
  6539  0467                     l167:	
  6540                           ;uart.c: 47: while(!PIR1bits.RCIF) {i++; if(tmo && i>=tmo) {break;} }
  6541                           
  6542  0467  0020               	movlb	0	; select bank0
  6543  0468  1A91               	btfsc	17,5	;volatile
  6544  0469  2C8C               	goto	l2094
  6545  046A  3001               	movlw	1
  6546  046B  07F7               	addwf	UART_Receive@i,f
  6547  046C  3000               	movlw	0
  6548  046D  3DF8               	addwfc	UART_Receive@i+1,f
  6549  046E  3000               	movlw	0
  6550  046F  3DF9               	addwfc	UART_Receive@i+2,f
  6551  0470  3000               	movlw	0
  6552  0471  3DFA               	addwfc	UART_Receive@i+3,f
  6553  0472  0874               	movf	UART_Receive@tmo+3,w
  6554  0473  0473               	iorwf	UART_Receive@tmo+2,w
  6555  0474  0472               	iorwf	UART_Receive@tmo+1,w
  6556  0475  0471               	iorwf	UART_Receive@tmo,w
  6557  0476  1903               	skipnz
  6558  0477  2C67               	goto	l167
  6559  0478  087A               	movf	UART_Receive@i+3,w
  6560  0479  3A80               	xorlw	128
  6561  047A  00FF               	movwf	127
  6562  047B  0874               	movf	UART_Receive@tmo+3,w
  6563  047C  3A80               	xorlw	128
  6564  047D  027F               	subwf	127,w
  6565  047E  1D03               	skipz
  6566  047F  2C8A               	goto	u1413
  6567  0480  0873               	movf	UART_Receive@tmo+2,w
  6568  0481  0279               	subwf	UART_Receive@i+2,w
  6569  0482  1D03               	skipz
  6570  0483  2C8A               	goto	u1413
  6571  0484  0872               	movf	UART_Receive@tmo+1,w
  6572  0485  0278               	subwf	UART_Receive@i+1,w
  6573  0486  1D03               	skipz
  6574  0487  2C8A               	goto	u1413
  6575  0488  0871               	movf	UART_Receive@tmo,w
  6576  0489  0277               	subwf	UART_Receive@i,w
  6577  048A                     u1413:	
  6578  048A  1C03               	skipc
  6579  048B  2C67               	goto	l167
  6580  048C                     l2094:	
  6581                           
  6582                           ;uart.c: 49: return (i<tmo || !tmo) ? RC1REG : 0x100;
  6583  048C  087A               	movf	UART_Receive@i+3,w
  6584  048D  3A80               	xorlw	128
  6585  048E  00FF               	movwf	127
  6586  048F  0874               	movf	UART_Receive@tmo+3,w
  6587  0490  3A80               	xorlw	128
  6588  0491  027F               	subwf	127,w
  6589  0492  1D03               	skipz
  6590  0493  2C9E               	goto	u1433
  6591  0494  0873               	movf	UART_Receive@tmo+2,w
  6592  0495  0279               	subwf	UART_Receive@i+2,w
  6593  0496  1D03               	skipz
  6594  0497  2C9E               	goto	u1433
  6595  0498  0872               	movf	UART_Receive@tmo+1,w
  6596  0499  0278               	subwf	UART_Receive@i+1,w
  6597  049A  1D03               	skipz
  6598  049B  2C9E               	goto	u1433
  6599  049C  0871               	movf	UART_Receive@tmo,w
  6600  049D  0277               	subwf	UART_Receive@i,w
  6601  049E                     u1433:	
  6602  049E  1C03               	skipc
  6603  049F  2CAB               	goto	l2100
  6604  04A0  0874               	movf	UART_Receive@tmo+3,w
  6605  04A1  0473               	iorwf	UART_Receive@tmo+2,w
  6606  04A2  0472               	iorwf	UART_Receive@tmo+1,w
  6607  04A3  0471               	iorwf	UART_Receive@tmo,w
  6608  04A4  1903               	skipnz
  6609  04A5  2CAB               	goto	l2100
  6610  04A6  3000               	movlw	0
  6611  04A7  00F1               	movwf	?_UART_Receive
  6612  04A8  3001               	movlw	1
  6613  04A9  00F2               	movwf	?_UART_Receive+1
  6614  04AA  0008               	return
  6615  04AB                     l2100:	
  6616  04AB  0023               	movlb	3	; select bank3
  6617  04AC  0819               	movf	25,w	;volatile
  6618  04AD  00F5               	movwf	??_UART_Receive
  6619  04AE  01F6               	clrf	??_UART_Receive+1
  6620  04AF  0875               	movf	??_UART_Receive,w
  6621  04B0  00F1               	movwf	?_UART_Receive
  6622  04B1  0876               	movf	??_UART_Receive+1,w
  6623  04B2  00F2               	movwf	?_UART_Receive+1
  6624  04B3  0008               	return
  6625  04B4                     __end_of_UART_Receive:	
  6626                           
  6627                           	psect	text33
  6628  0F7B                     __ptext33:	
  6629 ;; *************** function _EEPROM_Write *****************
  6630 ;; Defined at:
  6631 ;;		line 18 in file "eeprom.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  address         1    wreg     unsigned char 
  6634 ;;  data            1    1[COMMON] PTR unsigned char 
  6635 ;;		 -> intervalData(4), calibrationData(6), 
  6636 ;;  length          2    2[COMMON] int 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;  address         1    5[COMMON] unsigned char 
  6639 ;;  i               1    6[COMMON] unsigned char 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;		None               void
  6642 ;; Registers used:
  6643 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6649 ;;      Params:         3       0       0       0       0       0       0       0
  6650 ;;      Locals:         2       0       0       0       0       0       0       0
  6651 ;;      Temps:          1       0       0       0       0       0       0       0
  6652 ;;      Totals:         6       0       0       0       0       0       0       0
  6653 ;;Total ram usage:        6 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    1
  6656 ;; This function calls:
  6657 ;;		Nothing
  6658 ;; This function is called by:
  6659 ;;		_main
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           
  6664                           ;psect for function _EEPROM_Write
  6665  0F7B                     _EEPROM_Write:	
  6666                           
  6667                           ;incstack = 0
  6668                           ; Regs used in _EEPROM_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  6669                           ;EEPROM_Write@address stored from wreg
  6670  0F7B  00F5               	movwf	EEPROM_Write@address
  6671                           
  6672                           ;eeprom.c: 19: unsigned char i;
  6673                           ;eeprom.c: 20: for(i=0; i<length; i++) {
  6674  0F7C  01F6               	clrf	EEPROM_Write@i
  6675  0F7D                     l1838:	
  6676  0F7D  0873               	movf	EEPROM_Write@length+1,w
  6677  0F7E  3A80               	xorlw	128
  6678  0F7F  3C80               	sublw	128
  6679  0F80  1D03               	skipz
  6680  0F81  2F84               	goto	u1085
  6681  0F82  0872               	movf	EEPROM_Write@length,w
  6682  0F83  0276               	subwf	EEPROM_Write@i,w
  6683  0F84                     u1085:	
  6684  0F84  1803               	btfsc	3,0
  6685  0F85  2FA3               	goto	l369
  6686                           
  6687                           ;eeprom.c: 21: EEADRL = address+i;
  6688  0F86  0875               	movf	EEPROM_Write@address,w
  6689  0F87  0776               	addwf	EEPROM_Write@i,w
  6690  0F88  0023               	movlb	3	; select bank3
  6691  0F89  0091               	movwf	17	;volatile
  6692                           
  6693                           ;eeprom.c: 22: EEDATL = data[i];
  6694  0F8A  0876               	movf	EEPROM_Write@i,w
  6695  0F8B  0771               	addwf	EEPROM_Write@data,w
  6696  0F8C  00F4               	movwf	??_EEPROM_Write
  6697  0F8D  0874               	movf	??_EEPROM_Write,w
  6698  0F8E  0086               	movwf	6
  6699  0F8F  0187               	clrf	7
  6700  0F90  0801               	movf	1,w
  6701  0F91  0093               	movwf	19	;volatile
  6702                           
  6703                           ;eeprom.c: 24: EECON1bits.WREN = 1;
  6704  0F92  1515               	bsf	21,2	;volatile
  6705                           
  6706                           ;eeprom.c: 25: EECON2 = 0x55;
  6707  0F93  3055               	movlw	85
  6708  0F94  0096               	movwf	22	;volatile
  6709                           
  6710                           ;eeprom.c: 26: EECON2 = 0xAA;
  6711  0F95  30AA               	movlw	170
  6712  0F96  0096               	movwf	22	;volatile
  6713                           
  6714                           ;eeprom.c: 27: EECON1bits.WR = 1;
  6715  0F97  1495               	bsf	21,1	;volatile
  6716  0F98                     l366:	
  6717                           ;eeprom.c: 30: while(!PIR2bits.EEIF) {}
  6718                           
  6719  0F98  0020               	movlb	0	; select bank0
  6720  0F99  1E12               	btfss	18,4	;volatile
  6721  0F9A  2F98               	goto	l366
  6722                           
  6723                           ;eeprom.c: 31: PIR2bits.EEIF = 0;
  6724  0F9B  1212               	bcf	18,4	;volatile
  6725                           
  6726                           ;eeprom.c: 32: EECON1bits.WREN = 0;
  6727  0F9C  0023               	movlb	3	; select bank3
  6728  0F9D  1115               	bcf	21,2	;volatile
  6729  0F9E  3001               	movlw	1
  6730  0F9F  00F4               	movwf	??_EEPROM_Write
  6731  0FA0  0874               	movf	??_EEPROM_Write,w
  6732  0FA1  07F6               	addwf	EEPROM_Write@i,f
  6733  0FA2  2F7D               	goto	l1838
  6734  0FA3                     l369:	
  6735                           
  6736                           ;eeprom.c: 33: }
  6737                           ;eeprom.c: 35: EECON1bits.WREN = 0;
  6738  0FA3  0023               	movlb	3	; select bank3
  6739  0FA4  1115               	bcf	21,2	;volatile
  6740  0FA5  0008               	return
  6741  0FA6                     __end_of_EEPROM_Write:	
  6742                           
  6743                           	psect	text34
  6744  0E4C                     __ptext34:	
  6745 ;; *************** function _memset *****************
  6746 ;; Defined at:
  6747 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memset.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  p1              1    wreg     PTR void 
  6750 ;;		 -> calibrationData(6), 
  6751 ;;  c               2    1[COMMON] int 
  6752 ;;  n               2    3[COMMON] unsigned int 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  p1              1    6[COMMON] PTR void 
  6755 ;;		 -> calibrationData(6), 
  6756 ;;  p               1    7[COMMON] PTR unsigned char 
  6757 ;;		 -> calibrationData(6), 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  1    wreg      PTR void 
  6760 ;; Registers used:
  6761 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6767 ;;      Params:         4       0       0       0       0       0       0       0
  6768 ;;      Locals:         2       0       0       0       0       0       0       0
  6769 ;;      Temps:          1       0       0       0       0       0       0       0
  6770 ;;      Totals:         7       0       0       0       0       0       0       0
  6771 ;;Total ram usage:        7 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    1
  6774 ;; This function calls:
  6775 ;;		Nothing
  6776 ;; This function is called by:
  6777 ;;		_main
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           
  6782                           ;psect for function _memset
  6783  0E4C                     _memset:	
  6784                           
  6785                           ;incstack = 0
  6786                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  6787                           ;memset@p1 stored from wreg
  6788  0E4C  00F6               	movwf	memset@p1
  6789  0E4D  0876               	movf	memset@p1,w
  6790  0E4E  00F5               	movwf	??_memset
  6791  0E4F  0875               	movf	??_memset,w
  6792  0E50  00F7               	movwf	memset@p
  6793  0E51                     l1820:	
  6794  0E51  3001               	movlw	1
  6795  0E52  02F3               	subwf	memset@n,f
  6796  0E53  3000               	movlw	0
  6797  0E54  3BF4               	subwfb	memset@n+1,f
  6798  0E55  30FF               	movlw	255
  6799  0E56  0674               	xorwf	memset@n+1,w
  6800  0E57  1D03               	skipz
  6801  0E58  2E5B               	goto	u1065
  6802  0E59  30FF               	movlw	255
  6803  0E5A  0673               	xorwf	memset@n,w
  6804  0E5B                     u1065:	
  6805  0E5B  1903               	btfsc	3,2
  6806  0E5C  0008               	return
  6807  0E5D  0871               	movf	memset@c,w
  6808  0E5E  00F5               	movwf	??_memset
  6809  0E5F  0877               	movf	memset@p,w
  6810  0E60  0086               	movwf	6
  6811  0E61  0187               	clrf	7
  6812  0E62  0875               	movf	??_memset,w
  6813  0E63  0081               	movwf	1
  6814  0E64  3001               	movlw	1
  6815  0E65  00F5               	movwf	??_memset
  6816  0E66  0875               	movf	??_memset,w
  6817  0E67  07F7               	addwf	memset@p,f
  6818  0E68  2E51               	goto	l1820
  6819  0E69                     __end_of_memset:	
  6820                           ;	Return value of _memset is never used
  6821                           
  6822                           
  6823                           	psect	text35
  6824  0EC4                     __ptext35:	
  6825 ;; *************** function _EEPROM_Read *****************
  6826 ;; Defined at:
  6827 ;;		line 6 in file "eeprom.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  address         1    wreg     unsigned char 
  6830 ;;  data            1    1[COMMON] PTR unsigned char 
  6831 ;;		 -> intervalData(4), calibrationData(6), 
  6832 ;;  length          2    2[COMMON] int 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;  address         1    6[COMMON] unsigned char 
  6835 ;;  i               1    7[COMMON] unsigned char 
  6836 ;; Return value:  Size  Location     Type
  6837 ;;		None               void
  6838 ;; Registers used:
  6839 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6845 ;;      Params:         3       0       0       0       0       0       0       0
  6846 ;;      Locals:         2       0       0       0       0       0       0       0
  6847 ;;      Temps:          2       0       0       0       0       0       0       0
  6848 ;;      Totals:         7       0       0       0       0       0       0       0
  6849 ;;Total ram usage:        7 bytes
  6850 ;; Hardware stack levels used:    1
  6851 ;; Hardware stack levels required when called:    1
  6852 ;; This function calls:
  6853 ;;		Nothing
  6854 ;; This function is called by:
  6855 ;;		_main
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           
  6859                           
  6860                           ;psect for function _EEPROM_Read
  6861  0EC4                     _EEPROM_Read:	
  6862                           
  6863                           ;incstack = 0
  6864                           ; Regs used in _EEPROM_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6865                           ;EEPROM_Read@address stored from wreg
  6866  0EC4  00F6               	movwf	EEPROM_Read@address
  6867                           
  6868                           ;eeprom.c: 7: unsigned char i;
  6869                           ;eeprom.c: 8: for(i=0; i<length; i++) {
  6870  0EC5  01F7               	clrf	EEPROM_Read@i
  6871  0EC6                     l1812:	
  6872  0EC6  0873               	movf	EEPROM_Read@length+1,w
  6873  0EC7  3A80               	xorlw	128
  6874  0EC8  3C80               	sublw	128
  6875  0EC9  1D03               	skipz
  6876  0ECA  2ECD               	goto	u1055
  6877  0ECB  0872               	movf	EEPROM_Read@length,w
  6878  0ECC  0277               	subwf	EEPROM_Read@i,w
  6879  0ECD                     u1055:	
  6880  0ECD  1803               	btfsc	3,0
  6881  0ECE  0008               	return
  6882                           
  6883                           ;eeprom.c: 9: EEADRL = address+i;
  6884  0ECF  0876               	movf	EEPROM_Read@address,w
  6885  0ED0  0777               	addwf	EEPROM_Read@i,w
  6886  0ED1  0023               	movlb	3	; select bank3
  6887  0ED2  0091               	movwf	17	;volatile
  6888                           
  6889                           ;eeprom.c: 10: EECON1bits.EEPGD = 0;
  6890  0ED3  1395               	bcf	21,7	;volatile
  6891                           
  6892                           ;eeprom.c: 11: EECON1bits.CFGS = 0;
  6893  0ED4  1315               	bcf	21,6	;volatile
  6894                           
  6895                           ;eeprom.c: 12: EECON1bits.RD = 1;
  6896  0ED5  1415               	bsf	21,0	;volatile
  6897                           
  6898                           ;eeprom.c: 13: data[i] = EEDATL;
  6899  0ED6  0813               	movf	19,w	;volatile
  6900  0ED7  00F4               	movwf	??_EEPROM_Read
  6901  0ED8  0877               	movf	EEPROM_Read@i,w
  6902  0ED9  0771               	addwf	EEPROM_Read@data,w
  6903  0EDA  00F5               	movwf	??_EEPROM_Read+1
  6904  0EDB  0875               	movf	??_EEPROM_Read+1,w
  6905  0EDC  0086               	movwf	6
  6906  0EDD  0187               	clrf	7
  6907  0EDE  0874               	movf	??_EEPROM_Read,w
  6908  0EDF  0081               	movwf	1
  6909  0EE0  3001               	movlw	1
  6910  0EE1  00F4               	movwf	??_EEPROM_Read
  6911  0EE2  0874               	movf	??_EEPROM_Read,w
  6912  0EE3  07F7               	addwf	EEPROM_Read@i,f
  6913  0EE4  2EC6               	goto	l1812
  6914  0EE5                     __end_of_EEPROM_Read:	
  6915                           
  6916                           	psect	text36
  6917  0DDD                     __ptext36:	
  6918 ;; *************** function _pulseLed *****************
  6919 ;; Defined at:
  6920 ;;		line 32 in file "main.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  ticks           2    1[BANK0 ] int 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;		None
  6925 ;; Return value:  Size  Location     Type
  6926 ;;		None               void
  6927 ;; Registers used:
  6928 ;;		wreg, status,2, status,0, pclath, cstack
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6934 ;;      Params:         0       2       0       0       0       0       0       0
  6935 ;;      Locals:         0       0       0       0       0       0       0       0
  6936 ;;      Temps:          0       0       0       0       0       0       0       0
  6937 ;;      Totals:         0       2       0       0       0       0       0       0
  6938 ;;Total ram usage:        2 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; Hardware stack levels required when called:    3
  6941 ;; This function calls:
  6942 ;;		_timer1_poll_delay
  6943 ;; This function is called by:
  6944 ;;		_main
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           
  6949                           ;psect for function _pulseLed
  6950  0DDD                     _pulseLed:	
  6951                           
  6952                           ;main.c: 33: PORTCbits.RC3 = 1;
  6953                           
  6954                           ;incstack = 0
  6955                           ; Regs used in _pulseLed: [wreg+status,2+status,0+pclath+cstack]
  6956  0DDD  0020               	movlb	0	; select bank0
  6957  0DDE  158E               	bsf	14,3	;volatile
  6958                           
  6959                           ;main.c: 34: timer1_poll_delay(ticks, 3);
  6960  0DDF  0822               	movf	pulseLed@ticks+1,w
  6961  0DE0  01F8               	clrf	?_timer1_poll_delay+1
  6962  0DE1  07F8               	addwf	?_timer1_poll_delay+1,f
  6963  0DE2  0821               	movf	pulseLed@ticks,w
  6964  0DE3  01F7               	clrf	?_timer1_poll_delay
  6965  0DE4  07F7               	addwf	?_timer1_poll_delay,f
  6966  0DE5  3003               	movlw	3
  6967  0DE6  00F9               	movwf	?_timer1_poll_delay+2
  6968  0DE7  3000               	movlw	0
  6969  0DE8  00FA               	movwf	?_timer1_poll_delay+3
  6970  0DE9  3186  26CE         	fcall	_timer1_poll_delay
  6971                           
  6972                           ;main.c: 35: PORTCbits.RC3 = 0;
  6973  0DEB  0020               	movlb	0	; select bank0
  6974  0DEC  118E               	bcf	14,3	;volatile
  6975  0DED  0008               	return
  6976  0DEE                     __end_of_pulseLed:	
  6977                           
  6978                           	psect	text37
  6979  06CE                     __ptext37:	
  6980 ;; *************** function _timer1_poll_delay *****************
  6981 ;; Defined at:
  6982 ;;		line 17 in file "timer.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  ticks           2    7[COMMON] unsigned short 
  6985 ;;  division        2    9[COMMON] int 
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;  tmr1_turned_    1    0[BANK0 ] unsigned char 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;		None               void
  6990 ;; Registers used:
  6991 ;;		wreg, status,2, status,0, pclath, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6997 ;;      Params:         4       0       0       0       0       0       0       0
  6998 ;;      Locals:         0       1       0       0       0       0       0       0
  6999 ;;      Temps:          1       0       0       0       0       0       0       0
  7000 ;;      Totals:         5       1       0       0       0       0       0       0
  7001 ;;Total ram usage:        6 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:    2
  7004 ;; This function calls:
  7005 ;;		_Timer1_Init
  7006 ;;		_Timer1_Disable
  7007 ;; This function is called by:
  7008 ;;		_pulseLed
  7009 ;;		_timer1_poll_delay_ms
  7010 ;;		_ADC_ReadOne
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           
  7015                           ;psect for function _timer1_poll_delay
  7016  06CE                     _timer1_poll_delay:	
  7017                           
  7018                           ;timer.c: 21: Timer1_Disable();
  7019                           
  7020                           ;incstack = 0
  7021                           ; Regs used in _timer1_poll_delay: [wreg+status,2+status,0+pclath+cstack]
  7022  06CE  318D  25A5  3186   	fcall	_Timer1_Disable
  7023                           
  7024                           ;timer.c: 23: TMR1 = 0;
  7025  06D1  0020               	movlb	0	; select bank0
  7026  06D2  0196               	clrf	22	;volatile
  7027  06D3  0197               	clrf	23	;volatile
  7028                           
  7029                           ;timer.c: 25: Timer1_Init(1, division);
  7030  06D4  3001               	movlw	1
  7031  06D5  00F1               	movwf	?_Timer1_Init
  7032  06D6  3000               	movlw	0
  7033  06D7  00F2               	movwf	?_Timer1_Init+1
  7034  06D8  087A               	movf	timer1_poll_delay@division+1,w
  7035  06D9  01F4               	clrf	?_Timer1_Init+3
  7036  06DA  07F4               	addwf	?_Timer1_Init+3,f
  7037  06DB  0879               	movf	timer1_poll_delay@division,w
  7038  06DC  01F3               	clrf	?_Timer1_Init+2
  7039  06DD  07F3               	addwf	?_Timer1_Init+2,f
  7040  06DE  318E  2603  3186   	fcall	_Timer1_Init
  7041                           
  7042                           ;timer.c: 27: unsigned char tmr1_turned_on = 0;
  7043  06E1  0020               	movlb	0	; select bank0
  7044  06E2  01A0               	clrf	timer1_poll_delay@tmr1_turned_on
  7045  06E3                     l2406:	
  7046                           ;timer.c: 29: while(tmr1_turned_on < 3) {
  7047                           
  7048  06E3  3003               	movlw	3
  7049  06E4  0220               	subwf	timer1_poll_delay@tmr1_turned_on,w
  7050  06E5  1803               	btfsc	3,0
  7051  06E6  2F05               	goto	l2408
  7052                           
  7053                           ;timer.c: 32: if(T1CONbits.TMR1ON == 0) {
  7054  06E7  1818               	btfsc	24,0	;volatile
  7055  06E8  2EFD               	goto	l2402
  7056                           
  7057                           ;timer.c: 34: Timer1_Init(1, division);
  7058  06E9  3001               	movlw	1
  7059  06EA  00F1               	movwf	?_Timer1_Init
  7060  06EB  3000               	movlw	0
  7061  06EC  00F2               	movwf	?_Timer1_Init+1
  7062  06ED  087A               	movf	timer1_poll_delay@division+1,w
  7063  06EE  01F4               	clrf	?_Timer1_Init+3
  7064  06EF  07F4               	addwf	?_Timer1_Init+3,f
  7065  06F0  0879               	movf	timer1_poll_delay@division,w
  7066  06F1  01F3               	clrf	?_Timer1_Init+2
  7067  06F2  07F3               	addwf	?_Timer1_Init+2,f
  7068  06F3  318E  2603  3186   	fcall	_Timer1_Init
  7069                           
  7070                           ;timer.c: 35: TMR1 = 0;
  7071  06F6  0020               	movlb	0	; select bank0
  7072  06F7  0196               	clrf	22	;volatile
  7073  06F8  0197               	clrf	23	;volatile
  7074                           
  7075                           ;timer.c: 36: tmr1_turned_on ++;
  7076  06F9  3001               	movlw	1
  7077  06FA  00FB               	movwf	??_timer1_poll_delay
  7078  06FB  087B               	movf	??_timer1_poll_delay,w
  7079  06FC  07A0               	addwf	timer1_poll_delay@tmr1_turned_on,f
  7080  06FD                     l2402:	
  7081                           
  7082                           ;timer.c: 37: }
  7083                           ;timer.c: 39: if(TMR1 >= ticks) {
  7084  06FD  0878               	movf	timer1_poll_delay@ticks+1,w
  7085  06FE  0217               	subwf	23,w	;volatile
  7086  06FF  1D03               	skipz
  7087  0700  2F03               	goto	u1925
  7088  0701  0877               	movf	timer1_poll_delay@ticks,w
  7089  0702  0216               	subwf	22,w	;volatile
  7090  0703                     u1925:	
  7091  0703  1C03               	skipc
  7092  0704  2EE3               	goto	l2406
  7093  0705                     l2408:	
  7094                           ;timer.c: 40: break;
  7095                           
  7096                           
  7097                           ;timer.c: 41: }
  7098                           ;timer.c: 42: }
  7099                           ;timer.c: 44: if(tmr1_turned_on >= 3) {
  7100  0705  3003               	movlw	3
  7101  0706  0220               	subwf	timer1_poll_delay@tmr1_turned_on,w
  7102  0707  1C03               	skipc
  7103  0708  2F0B               	goto	l2412
  7104                           
  7105                           ;timer.c: 45: tmr1_err = 1;
  7106  0709  01E9               	clrf	_tmr1_err
  7107  070A  0AE9               	incf	_tmr1_err,f
  7108  070B                     l2412:	
  7109                           
  7110                           ;timer.c: 46: }
  7111                           ;timer.c: 48: Timer1_Disable();
  7112  070B  318D  25A5         	fcall	_Timer1_Disable
  7113  070D  0008               	return
  7114  070E                     __end_of_timer1_poll_delay:	
  7115                           
  7116                           	psect	text38
  7117  0DA5                     __ptext38:	
  7118 ;; *************** function _Timer1_Disable *****************
  7119 ;; Defined at:
  7120 ;;		line 67 in file "timer.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;		None
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;		None
  7125 ;; Return value:  Size  Location     Type
  7126 ;;		None               void
  7127 ;; Registers used:
  7128 ;;		None
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7134 ;;      Params:         0       0       0       0       0       0       0       0
  7135 ;;      Locals:         0       0       0       0       0       0       0       0
  7136 ;;      Temps:          0       0       0       0       0       0       0       0
  7137 ;;      Totals:         0       0       0       0       0       0       0       0
  7138 ;;Total ram usage:        0 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; Hardware stack levels required when called:    1
  7141 ;; This function calls:
  7142 ;;		Nothing
  7143 ;; This function is called by:
  7144 ;;		_timer1_poll_delay
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           
  7149                           ;psect for function _Timer1_Disable
  7150  0DA5                     _Timer1_Disable:	
  7151                           
  7152                           ;timer.c: 68: T1CONbits.TMR1ON = 0;
  7153                           
  7154                           ;incstack = 0
  7155                           ; Regs used in _Timer1_Disable: []
  7156  0DA5  0020               	movlb	0	; select bank0
  7157  0DA6  1018               	bcf	24,0	;volatile
  7158  0DA7  0008               	return
  7159  0DA8                     __end_of_Timer1_Disable:	
  7160                           
  7161                           	psect	text39
  7162  0E03                     __ptext39:	
  7163 ;; *************** function _Timer1_Init *****************
  7164 ;; Defined at:
  7165 ;;		line 5 in file "timer.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  tmr1cs          2    1[COMMON] int 
  7168 ;;  t1ckps          2    3[COMMON] int 
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;		None
  7171 ;; Return value:  Size  Location     Type
  7172 ;;		None               void
  7173 ;; Registers used:
  7174 ;;		wreg, status,2, status,0
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7180 ;;      Params:         4       0       0       0       0       0       0       0
  7181 ;;      Locals:         0       0       0       0       0       0       0       0
  7182 ;;      Temps:          1       0       0       0       0       0       0       0
  7183 ;;      Totals:         5       0       0       0       0       0       0       0
  7184 ;;Total ram usage:        5 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; Hardware stack levels required when called:    1
  7187 ;; This function calls:
  7188 ;;		Nothing
  7189 ;; This function is called by:
  7190 ;;		_timer1_poll_delay
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           
  7195                           ;psect for function _Timer1_Init
  7196  0E03                     _Timer1_Init:	
  7197                           
  7198                           ;timer.c: 6: T1CONbits.TMR1CS = tmr1cs;
  7199                           
  7200                           ;incstack = 0
  7201                           ; Regs used in _Timer1_Init: [wreg+status,2+status,0]
  7202  0E03  0871               	movf	Timer1_Init@tmr1cs,w
  7203  0E04  00F5               	movwf	??_Timer1_Init
  7204  0E05  0EF5               	swapf	??_Timer1_Init,f
  7205  0E06  0DF5               	rlf	??_Timer1_Init,f
  7206  0E07  0DF5               	rlf	??_Timer1_Init,f
  7207  0E08  0020               	movlb	0	; select bank0
  7208  0E09  0818               	movf	24,w	;volatile
  7209  0E0A  0675               	xorwf	??_Timer1_Init,w
  7210  0E0B  393F               	andlw	-193
  7211  0E0C  0675               	xorwf	??_Timer1_Init,w
  7212  0E0D  0098               	movwf	24	;volatile
  7213                           
  7214                           ;timer.c: 7: T1CONbits.TMR1ON = 1;
  7215  0E0E  1418               	bsf	24,0	;volatile
  7216                           
  7217                           ;timer.c: 8: T1GCONbits.TMR1GE = 0;
  7218  0E0F  1399               	bcf	25,7	;volatile
  7219                           
  7220                           ;timer.c: 10: T1CONbits.T1CKPS = t1ckps;
  7221  0E10  0873               	movf	Timer1_Init@t1ckps,w
  7222  0E11  00F5               	movwf	??_Timer1_Init
  7223  0E12  0EF5               	swapf	??_Timer1_Init,f
  7224  0E13  0818               	movf	24,w	;volatile
  7225  0E14  0675               	xorwf	??_Timer1_Init,w
  7226  0E15  39CF               	andlw	-49
  7227  0E16  0675               	xorwf	??_Timer1_Init,w
  7228  0E17  0098               	movwf	24	;volatile
  7229  0E18  0008               	return
  7230  0E19                     __end_of_Timer1_Init:	
  7231                           
  7232                           	psect	intentry
  7233  0004                     __pintentry:	
  7234 ;; *************** function _isr *****************
  7235 ;; Defined at:
  7236 ;;		line 38 in file "main.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;		None
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;		None
  7241 ;; Return value:  Size  Location     Type
  7242 ;;		None               void
  7243 ;; Registers used:
  7244 ;;		None
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7250 ;;      Params:         0       0       0       0       0       0       0       0
  7251 ;;      Locals:         0       0       0       0       0       0       0       0
  7252 ;;      Temps:          1       0       0       0       0       0       0       0
  7253 ;;      Totals:         1       0       0       0       0       0       0       0
  7254 ;;Total ram usage:        1 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; This function calls:
  7257 ;;		Nothing
  7258 ;; This function is called by:
  7259 ;;		Interrupt level 1
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263  0004                     _isr:	
  7264                           
  7265                           ;incstack = 0
  7266                           ; Regs used in _isr: []
  7267  0004  3180               	pagesel	$
  7268  0005  0020               	movlb	0	; select bank0
  7269  0006  087F               	movf	127,w
  7270  0007  00F0               	movwf	??_isr
  7271                           
  7272                           ;main.c: 39: if(PIR1bits.TMR1IF==1) {
  7273  0008  1811               	btfsc	17,0	;volatile
  7274                           
  7275                           ;main.c: 40: PIR1bits.TMR1IF = 0;
  7276  0009  1011               	bcf	17,0	;volatile
  7277                           
  7278                           ;main.c: 41: }
  7279                           ;main.c: 43: if(PIR1bits.RCIF==1) {
  7280  000A  1A91               	btfsc	17,5	;volatile
  7281                           
  7282                           ;main.c: 44: PIR1bits.RCIF = 0;
  7283  000B  1291               	bcf	17,5	;volatile
  7284  000C  0870               	movf	??_isr,w
  7285  000D  00FF               	movwf	127
  7286  000E  0009               	retfie
  7287  000F                     __end_of_isr:	
  7288  007E                     btemp	set	126	;btemp
  7289  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        72
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     62      79
    BANK1            80      0      78
    BANK2            80      0      60
    BANK3            80      0      32
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6             5      0       0

Pointer List with Targets:

    ?_CRC16_Generate	unsigned short  size(1) Largest target is 0

    ?_ADC_Read	unsigned int  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?_ADC_ReadOne	unsigned int  size(1) Largest target is 0

    ?_swap_endian_32	unsigned long  size(1) Largest target is 0

    ?_XBAPI_Transmit	int  size(1) Largest target is 0

    ?_memcpy	PTR void  size(2) Largest target is 60
		 -> dest_address(BANK1[8]), apiFrame(BANK2[60]), 

    ?_UART_ReceiveMsgTmo	int  size(1) Largest target is 0

    ?_UART_Receive	short  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    ?_XBAPI_HandleFrame	int  size(1) Largest target is 0

    ?_XBAPI_Command	int  size(1) Largest target is 0

    ?_memset	PTR void  size(1) Largest target is 6
		 -> calibrationData(BANK1[6]), 

    ?___aldiv	long  size(1) Largest target is 0

    memset@p1	PTR void  size(1) Largest target is 6
		 -> calibrationData(BANK1[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> calibrationData(BANK1[6]), 

    memcpy@d1	PTR void  size(2) Largest target is 60
		 -> dest_address(BANK1[8]), apiFrame(BANK2[60]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 60
		 -> dest_address(BANK1[8]), apiFrame(BANK2[60]), 

    memcpy@s1	PTR const void  size(2) Largest target is 60
		 -> packet_buffer(BANK1[32]), dest_address(BANK1[8]), apiFrame(BANK2[60]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 60
		 -> packet_buffer(BANK1[32]), dest_address(BANK1[8]), apiFrame(BANK2[60]), 

    CRC16_Generate@msg	PTR unsigned char  size(1) Largest target is 32
		 -> packet_buffer(BANK1[32]), 

    SendPacket@packet	PTR struct . size(1) Largest target is 32
		 -> packet_buffer(BANK1[32]), 

    EEPROM_Write@data	PTR unsigned char  size(1) Largest target is 6
		 -> intervalData(BANK0[4]), calibrationData(BANK1[6]), 

    EEPROM_Read@data	PTR unsigned char  size(1) Largest target is 6
		 -> intervalData(BANK0[4]), calibrationData(BANK1[6]), 

    XBAPI_HandleFrame@packet	PTR struct . size(1) Largest target is 60
		 -> apiFrame(BANK2[60]), 

    XBAPI_Transmit@data	PTR const unsigned char  size(1) Largest target is 32
		 -> packet_buffer(BANK1[32]), 

    sp__memcpy	PTR void  size(2) Largest target is 60
		 -> dest_address(BANK1[8]), apiFrame(BANK2[60]), 

    XBAPI_Transmit@address	PTR struct __XBeeAddress size(1) Largest target is 8
		 -> dest_address(BANK1[8]), 

    doChecksumVerify@address	PTR unsigned char  size(1) Largest target is 60
		 -> apiFrame(BANK2[60]), 

    checksum@addr	PTR void  size(1) Largest target is 60
		 -> apiFrame(BANK2[60]), 

    checksum@address	PTR unsigned char  size(1) Largest target is 60
		 -> apiFrame(BANK2[60]), 

    UART_ReceiveMsgTmo@msg	PTR unsigned char  size(1) Largest target is 60
		 -> apiFrame(BANK2[60]), 

    UART_TransmitMsg@_msg	PTR  unsigned char  size(1) Largest target is 60
		 -> apiFrame(BANK2[60]), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> calibrationData(BANK1[6]), 


Critical Paths under _main in COMMON

    _SendReport->_CRC16_Generate
    _ADC_ReadOne->_timer1_poll_delay
    _SendReceiverBroadcastRequest->_CRC16_Generate
    _XBAPI_Transmit->_memcpy
    _timer1_poll_delay_ms->_timer1_poll_delay
    _XBee_Enable->_UART_Init
    _UART_Init->___aldiv
    _CRC16_Generate->_CRC16_Update
    _CRC16_Update->_CRC16_Update4Bits
    _UART_TransmitMsg->_UART_Transmit
    _XBAPI_HandleFrame->_memcpy
    _UART_ReceiveMsgTmo->_UART_Receive
    _pulseLed->_timer1_poll_delay
    _timer1_poll_delay->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_SendReport
    _SendReport->_SendPacket
    _XBee_Wake->_XBee_Enable
    _ADC_Read->_ADC_ReadOne
    _ADC_ReadOne->_timer1_poll_delay
    _SendReceiverBroadcastRequest->_SendPacket
    _SendPacket->_XBAPI_Transmit
    _XBAPI_Transmit->_XBAPI_HandleFrame
    _XBee_Reset->_XBee_Enable
    _timer1_poll_delay_ms->_timer1_poll_delay
    _XBee_Enable->_UART_Init
    _UART_Init->___aldiv
    _XBAPI_Command->_XBAPI_HandleFrame
    _XBAPI_HandleFrame->_UART_ReceiveMsgTmo
    _pulseLed->_timer1_poll_delay

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     5      4   11492
                                             53 BANK0      9     5      4
                           _pulseLed
                        _EEPROM_Read
                             _memset
                       _EEPROM_Write
                        _XBee_Enable
                      _XBAPI_Command
                       _XBee_Disable
                         _ADC_Enable
                         _CRC16_Init
       _SendReceiverBroadcastRequest
                  _XBAPI_HandleFrame
                           _ADC_Read
                          _XBee_Wake
                         _SendReport
                         _XBee_Sleep
                              _sleep
 ---------------------------------------------------------------------------------
 (1) _XBee_Sleep                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SendReport                                           9     1      8    2886
                                             44 BANK0      9     1      8
                     _CRC16_Generate
                         _SendPacket
 ---------------------------------------------------------------------------------
 (1) _XBee_Wake                                            4     4      0     846
                                             15 BANK0      4     4      0
                        _XBee_Enable
                       _XBee_Disable
               _timer1_poll_delay_ms
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                            16    14      2     925
                                              7 BANK0     16    14      2
                        _ADC_ReadOne
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     300
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _ADC_ReadOne                                          6     4      2     288
                                              1 BANK0      6     4      2
                  _timer1_poll_delay
 ---------------------------------------------------------------------------------
 (1) _SendReceiverBroadcastRequest                         1     1      0    2762
                                             44 BANK0      1     1      0
                     _CRC16_Generate
                         _SendPacket
 ---------------------------------------------------------------------------------
 (2) _SendPacket                                           4     4      0    2498
                                             40 BANK0      4     4      0
                     _XBAPI_Transmit
 ---------------------------------------------------------------------------------
 (3) _XBAPI_Transmit                                      11     6      5    2430
                                             29 BANK0     11     6      5
                  _XBAPI_HandleFrame
                   _UART_TransmitMsg
                         _XBee_Reset
                           _checksum
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _XBee_Reset                                           0     0      0     781
                        _XBee_Enable
                       _XBee_Disable
               _timer1_poll_delay_ms
 ---------------------------------------------------------------------------------
 (5) _timer1_poll_delay_ms                                 2     0      2     346
                                              1 BANK0      2     0      2
                  _timer1_poll_delay
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4      92
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _XBee_Disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _XBee_Enable                                          2     0      2     435
                                             13 BANK0      2     0      2
                              _sleep
                          _UART_Init
 ---------------------------------------------------------------------------------
 (6) _UART_Init                                            9     7      2     345
                                             10 COMMON     2     2      0
                                              6 BANK0      7     5      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (7) ___aldiv                                             15     7      8     300
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _sleep                                                4     2      2      46
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _CRC16_Generate                                       6     4      2     264
                                             11 COMMON     1     1      0
                                              0 BANK0      5     3      2
                         _CRC16_Init
                       _CRC16_Update
 ---------------------------------------------------------------------------------
 (3) _CRC16_Update                                         2     2      0     134
                                              9 COMMON     2     2      0
                  _CRC16_Update4Bits
 ---------------------------------------------------------------------------------
 (4) _CRC16_Update4Bits                                    8     8      0      90
                                              1 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (3) _CRC16_Init                                           1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Enable                                           4     3      1     110
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _XBAPI_Command                                       17     7     10    1929
                                             29 BANK0     17     7     10
                  _XBAPI_HandleFrame
                   _UART_TransmitMsg
                           _checksum
                   _doChecksumVerify
                     _swap_endian_32
 ---------------------------------------------------------------------------------
 (2) _swap_endian_32                                      16    12      4     170
                                              1 COMMON     8     4      4
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) _doChecksumVerify                                     9     6      3     137
                                              1 COMMON     9     6      3
 ---------------------------------------------------------------------------------
 (4) _checksum                                             9     7      2     137
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) _UART_TransmitMsg                                     7     4      3     200
                                              2 COMMON     7     4      3
                      _UART_Transmit
 ---------------------------------------------------------------------------------
 (5) _UART_Transmit                                        1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _XBAPI_HandleFrame                                   15    11      4     901
                                             14 BANK0     15    11      4
                 _UART_ReceiveMsgTmo
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6     120
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (5) _UART_ReceiveMsgTmo                                  14     7      7     515
                                              0 BANK0     14     7      7
                       _UART_Receive
 ---------------------------------------------------------------------------------
 (6) _UART_Receive                                        10     6      4     134
                                              1 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         6     3      3     134
                                              1 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _memset                                               7     3      4      96
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          7     4      3     134
                                              1 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (1) _pulseLed                                             2     0      2     254
                                              1 BANK0      2     0      2
                  _timer1_poll_delay
 ---------------------------------------------------------------------------------
 (6) _timer1_poll_delay                                    6     2      4     223
                                              7 COMMON     5     1      4
                                              0 BANK0      1     1      0
                        _Timer1_Init
                     _Timer1_Disable
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _Timer1_Disable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Timer1_Init                                          5     1      4      62
                                              1 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pulseLed
     _timer1_poll_delay
       _Timer1_Init
       _Timer1_Disable
       ___wmul (ARG)
   _EEPROM_Read
   _memset
   _EEPROM_Write
   _XBee_Enable
     _sleep
     _UART_Init
       ___aldiv
   _XBAPI_Command
     _XBAPI_HandleFrame
       _UART_ReceiveMsgTmo
         _UART_Receive
       _memcpy
     _UART_TransmitMsg
       _UART_Transmit
     _checksum
     _doChecksumVerify
     _swap_endian_32
   _XBee_Disable
   _ADC_Enable
   _CRC16_Init
   _SendReceiverBroadcastRequest
     _CRC16_Generate
       _CRC16_Init
       _CRC16_Update
         _CRC16_Update4Bits
     _SendPacket
       _XBAPI_Transmit
         _XBAPI_HandleFrame
           _UART_ReceiveMsgTmo
             _UART_Receive
           _memcpy
         _UART_TransmitMsg
           _UART_Transmit
         _XBee_Reset
           _XBee_Enable
             _sleep
             _UART_Init
               ___aldiv
           _XBee_Disable
           _timer1_poll_delay_ms
             _timer1_poll_delay
               _Timer1_Init
               _Timer1_Disable
               ___wmul (ARG)
             ___wmul
         _checksum
         _memcpy
   _XBAPI_HandleFrame
     _UART_ReceiveMsgTmo
       _UART_Receive
     _memcpy
   _ADC_Read
     _ADC_ReadOne
       _timer1_poll_delay
         _Timer1_Init
         _Timer1_Disable
         ___wmul (ARG)
     ___awdiv
   _XBee_Wake
     _XBee_Enable
       _sleep
       _UART_Init
         ___aldiv
     _XBee_Disable
     _timer1_poll_delay_ms
       _timer1_poll_delay
         _Timer1_Init
         _Timer1_Disable
         ___wmul (ARG)
       ___wmul
   _SendReport
     _CRC16_Generate
       _CRC16_Init
       _CRC16_Update
         _CRC16_Update4Bits
     _SendPacket
       _XBAPI_Transmit
         _XBAPI_HandleFrame
           _UART_ReceiveMsgTmo
             _UART_Receive
           _memcpy
         _UART_TransmitMsg
           _UART_Transmit
         _XBee_Reset
           _XBee_Enable
             _sleep
             _UART_Init
               ___aldiv
           _XBee_Disable
           _timer1_poll_delay_ms
             _timer1_poll_delay
               _Timer1_Init
               _Timer1_Disable
               ___wmul (ARG)
             ___wmul
         _checksum
         _memcpy
   _XBee_Sleep
   _sleep

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E5      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       7       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     106       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3E      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      3C      10       75.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      20      12       40.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6             5      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6                5      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     10D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Tue Jul 30 18:37:56 2013

                                   l75 00AB                                     l79 00D6  
                         ___awdiv@sign 0077                    ___wmul@multiplicand 0073  
                  __size_of_ADC_Enable 0040              __size_of_doChecksumVerify 0026  
              __size_of_swap_endian_32 00B0                                    l221 0E8B  
        __size_of_timer1_poll_delay_ms 001B                                    l145 0DBB  
                                  l233 04BE                                    l154 07AB  
                                  l218 0E89                                    l331 06C7  
                                  l164 045C                                    l148 0DBE  
                                  l158 07D5                                    l167 0467  
                                  l335 0792                                    l184 055B  
                                  l178 050E                                    l366 0F98  
                                  l369 0FA3                                    l546 03EB  
                                  l876 0E71                                    _isr 0004  
                                  wreg 0009                    __size_of_CRC16_Init 000A  
                         __CFG_FOSC$HS 0000                           __CFG_LVP$OFF 0000  
                                 l2100 04AB                                   l2050 0E1B  
                                 l2300 040C                                   l2310 043A  
                                 l2302 041A                                   l2160 07F9  
                                 l2402 06FD                                   l2218 0FB2  
                                 l2082 07D0                                   l2146 0F33  
                                 l2314 0445                                   l2330 0568  
                                 l2412 070B                                   l2148 0F4F  
                                 l2406 06E3                                   l2094 048C  
                                 l2158 07DD                                   l2510 0317  
                                 l2318 0453                                   l2408 0705  
                                 l2512 031D                                   l2336 0573  
                                 l2522 0341                                   l2362 05AA  
                                 l2354 0599                                   l2346 057B  
                                 l2610 0637                                   l2450 00AC  
                                 l2442 007D                                   l2434 0053  
                                 l1812 0EC6                                   l1820 0E51  
                                 l2540 013C                                   l2292 03FC  
                                 l2348 0587                                   l2604 0623  
                                 l2620 04DC                                   l2358 05A2  
                                 l2470 00F6                                   l2368 0E6B  
                                 l2720 0384                                   l2570 01C1  
                                 l2562 019F                                   l2538 0134  
                                 l2722 0388                                   l2458 00D7  
                                 l2564 01A5                                   l2580 01D5  
                                 l2548 0165                                   l1838 0F7D  
                                 l2574 01CB                                   l2582 01E1  
                                 l2680 0548                                   l2568 01B5  
                                 l2488 029E                                   l2592 0607  
                                 l2738 03D2                                   l2676 0541  
                                 l2780 0FF8                                   l2686 0556  
                                 l2598 061C                                   l2792 0F12  
                 __size_of_ADC_ReadOne 0032                                   l1898 06AF  
                                 l2778 0FDB                                   l2788 0F10  
                                 ?_isr 0070                                   u1055 0ECD  
                                 u1065 0E5B                                   u2113 04DA  
                                 u1154 069C                                   u2035 015D  
                                 u1155 069B                                   u1315 0E21  
                                 u2123 04EE                                   u1164 06A7  
                                 u1085 0F84                                   u1413 048A  
                                 u2045 0198                                   u1165 06A6  
                                 u1325 0733                                   u2205 03CE  
                                 u1174 06B4                                   u2215 01FD  
                                 u1175 06B3                                   u1184 06C0  
                                 u1433 049E                                   u2145 0533  
                                 u1505 07E7                                   u2225 021C  
                                 u1185 06BF                                   u2235 022B  
                                 u2245 024A                                   u2175 0518  
                                 u1375 07B5                                   u2255 0259  
                                 u1545 0FBC                                   u2265 0278  
                                 u1705 040F                                   u2285 0FE5  
                                 u1725 041B                                   u1805 057E  
                                 u1495 0F3D                                   u1655 064F  
                                 u1735 042F                                   u1665 0DD1  
                                 u1745 043B                                   u1825 0588  
                                 u1835 0592                                   u1925 0703  
                                 u1845 059A                                   u1955 0033  
                                 u1885 0E72                                   u1965 0067  
                                 u1895 0E77                                   _TMR1 0016  
                           _XBee_Reset 0DEE                             _XBee_Sleep 0DAB  
                                 _main 0011                                   fsr0h 0005  
                                 fsr1h 0007                                   fsr0l 0004  
                                 indf0 0000                                   indf1 0001  
                                 fsr1l 0006                                   btemp 007E  
                     __end_of_ADC_Read 064B                                   start 000F  
                __end_of_XBAPI_Command 0344                       ??_CRC16_Generate 007B  
                doChecksumVerify@check 0077               __end_of_UART_TransmitMsg 07D9  
                 __end_of_EEPROM_Write 0FA6                                  ??_isr 0070  
       ??_SendReceiverBroadcastRequest 004C                        __end_of___aldiv 045C  
                                ?_main 0055            __size_of_UART_ReceiveMsgTmo 0054  
                      __end_of___awdiv 05B1                                  _ADRES 009B  
                      ___awdiv@divisor 0071                       checksum@checksum 0077  
                      ___awdiv@counter 0076                                  _SPBRG 019B  
                                _TRISA 008C                                  _TRISB 008D  
                                _TRISC 008E                            _XBee_Enable 0E86  
                     SendPacket@packet 004A                    UART_ReceiveMsgTmo@c 002A  
                       _XBAPI_Transmit 0344                    UART_ReceiveMsgTmo@i 002C  
                   __size_of_UART_Init 0035                       SendPacket@status 004B  
                                _error 0062                                  _sleep 0E19  
                                status 0003                                  wtemp0 007E  
                     EEPROM_Write@data 0071                   __size_of_EEPROM_Read 0021  
                __size_of_CRC16_Update 0010                        __initialization 0743  
                         __end_of_main 0129                     __size_of_XBee_Wake 0056  
                __size_of_XBee_Disable 0003                                 ??_main 0059  
               doChecksumVerify@length 0071                      Timer1_Init@t1ckps 0073  
               __end_of_XBAPI_Transmit 03DA                         __CFG_PLLEN$OFF 0000  
                    Timer1_Init@tmr1cs 0071                             _SendPacket 0F07  
                       _Timer1_Disable 0DA5                   XBAPI_Transmit@length 003E  
                               _EEADRL 0191                                 _EEDATL 0193  
                               _EECON2 0196                       ___awdiv@dividend 0073  
                               ?_sleep 0071                              ADC_Read@i 0036  
                 CRC16_Update4Bits@val 0077                 timer1_poll_delay@ticks 0077  
                           _SendReport 05B1                                 _ANSELA 018C  
                               _ANSELB 018D                                 _RC1REG 0199  
                         ??_ADC_Enable 0072                           _CRC16_Update 0DCD  
                               _TX1REG 019A                            ?_XBee_Reset 0070  
                          ?_XBee_Sleep 0070                                 _SWDTEN 04B8  
               timer1_poll_delay_ms@ms 0021                       __end_of_checksum 0F53  
                         ??_CRC16_Init 0071                      doChecksumVerify@i 0078  
                        ??_Timer1_Init 0075                           _XBee_Disable 0DA8  
                        _packet_buffer 00C8                      __end_of_UART_Init 0743  
                      XBee_Enable@baud 002D                              ??___aldiv 0079  
                               ___wmul 0E69                              ??___awdiv 0075  
                      ADC_Read@channel 0033                                 _memcpy 0FA6  
                               _memset 0E4C                       ___awdiv@quotient 0078  
                       _swap_endian_32 01E7                       _doChecksumVerify 07D9  
                   __end_of_ADC_Enable 06CE                        ?_XBAPI_Transmit 003D  
                            ?_ADC_Read 0027       XBAPI_HandleFrame@received_length 0037  
               __end_of_Timer1_Disable 0DA8                                 sleep@i 0073  
                   __end_of_CRC16_Init 0DCD                       __end_of_pulseLed 0DEE  
                    CRC16_Generate@len 0020                      CRC16_Generate@msg 0022  
                    __end_of_XBee_Wake 050A                __end_of__initialization 0773  
                __end_of_UART_Transmit 0DC3                  __size_of_EEPROM_Write 002B  
                       __pcstackCOMMON 0070                           __pidataBANK1 0F53  
                         __pidataBANK3 0EA4                 __end_of_swap_endian_32 0297  
                        __end_of_sleep 0E31                    __end_of_Timer1_Init 0E19  
                        pulseLed@ticks 0021                    __size_of_XBee_Reset 0015  
                  __size_of_XBee_Sleep 0003                doChecksumVerify@address 0076  
                           ??_ADC_Read 0029                        ?_Timer1_Disable 0070  
                          ?_SendPacket 0070                                ??_sleep 0073  
                          ?_SendReport 004C                           _EEPROM_Write 0F7B  
                           __pbssBANK0 005E                             __pbssBANK1 00C8  
                           __pbssBANK2 0120           __end_of_timer1_poll_delay_ms 0E4C  
             UART_TransmitMsg@end_char 0074                      XBAPI_Command@data 003F  
                      XBAPI_Command@id 0043                  XBAPI_Transmit@address 0043  
                           __pmaintext 0011                                ?___wmul 0071  
                           __pintentry 0004                        ?_swap_endian_32 0071  
                    ?_UART_TransmitMsg 0072                                ?_memcpy 0071  
                              ?_memset 0071                          _calc_checksum 0067  
                       UART_Init@spbrg 007A                     ??_UART_TransmitMsg 0075  
                            ?_checksum 0071                           ?_XBee_Enable 002D  
                        ??_ADC_ReadOne 0023                XBAPI_Command@data_valid 0045  
                        ?_UART_Receive 0071                  UART_ReceiveMsgTmo@len 0020  
                UART_ReceiveMsgTmo@msg 0029                  UART_ReceiveMsgTmo@tmo 0023  
                            _CRC16_Reg 005E                              _CRC16_Low 0066  
                          _Timer1_Init 0E03                           _dest_address 00C0  
                              ___aldiv 03DA                                ___awdiv 055E  
                      __size_of___wmul 001D                              ?_pulseLed 0021  
                  __size_of_SendPacket 0024             __end_of_UART_ReceiveMsgTmo 055E  
                      _CRC16_LookupLow 01A0                    __size_of_SendReport 004F  
                      __size_of_memcpy 002D                        __size_of_memset 001D  
                              _cmd_itr 0060                                __ptext1 0DAB  
                              __ptext2 05B1                                __ptext3 04B4  
                              __ptext4 0600                                __ptext5 055E  
                              __ptext6 0776                                __ptext7 0EE5  
                              __ptext8 0F07                                __ptext9 0344  
                            _T1CONbits 0018                           __size_of_isr 000B  
                           ??_checksum 0073                       ___aldiv@dividend 0075  
               __size_of_XBAPI_Command 00AD                      _timer1_poll_delay 06CE  
                              clrloop0 0DB5                   end_of_initialization 0773  
                   ?_timer1_poll_delay 0077                         ??_UART_Receive 0075  
                              memcpy@d 0078                                memcpy@n 0075  
                              memcpy@s 007A                    __end_of_ADC_ReadOne 07A8  
                        ??_EEPROM_Read 0074                           ??_XBee_Reset 007C  
                         ??_XBee_Sleep 0071                                init_ram 0DAE  
                              memset@c 0071               __end_of_doChecksumVerify 07FF  
                              memset@n 0073                                memset@p 0077  
                              initloop 0DAF                      _XBAPI_HandleFrame 0129  
                 UART_TransmitMsg@_msg 0076                         UART_Transmit@c 0071  
                  ??_timer1_poll_delay 007B                    SendReport@thermBeta 0050  
                   ?_XBAPI_HandleFrame 002E                       ___aldiv@quotient 0022  
                           ??_pulseLed 007C                       ??_XBAPI_Transmit 0042  
                  ??_XBAPI_HandleFrame 0032                              _UART_Init 070E  
              __size_of_CRC16_Generate 002D                              _PORTBbits 000D  
                            _PORTCbits 000E                   _timer1_poll_delay_ms 0E31  
                    _XBAPI_Command$876 004B                     __end_of_XBee_Reset 0E03  
                   __end_of_XBee_Sleep 0DAE              __end_of_timer1_poll_delay 070E  
                   EEPROM_Write@length 0072                      __size_of_ADC_Read 004B  
                       _last_xbee_baud 0064              __end_of_XBAPI_HandleFrame 01E7  
                        EEPROM_Write@i 0076                           _frame_id_itr 0068  
                            _TXSTAbits 019E                              _XBee_Wake 04B4  
                        _XBAPI_Command 0297                    __end_of_EEPROM_Read 0EE5  
                      checksum@address 0076                     CRC16_Update4Bits@t 0078  
                       __end_of___wmul 0E86                             ?_UART_Init 0026  
                     ??_Timer1_Disable 0071                  ?_timer1_poll_delay_ms 0021  
                       __end_of_memcpy 0FD3                   XBAPI_Command@command 003D  
                       __end_of_memset 0E69                    start_initialization 0743  
                   _XBAPI_Transmit$864 0044                            _ADC_ReadOne 0776  
                          __end_of_isr 000F                           ??_SendPacket 0048  
                 __size_of_XBee_Enable 001E                           ??_SendReport 0054  
                  XBAPI_Transmit@error 0046               doChecksumVerify@checksum 0073  
                           ?_XBee_Wake 0070                         ?_XBAPI_Command 003D  
                     ??_swap_endian_32 0020                               ??___wmul 0075  
                          __pdataBANK1 00A0                            __pdataBANK3 01A0  
                   __end_of_SendPacket 0F2B                               ??_memcpy 0077  
                             ??_memset 0075            XBAPI_HandleFrame@bytes_read 0034  
                   __end_of_SendReport 0600                   __end_of_UART_Receive 04B4  
           __size_of_timer1_poll_delay 0040                            __pbssCOMMON 007C  
               __size_of_UART_Transmit 0009                          __pcstackBANK0 0020  
                   XBAPI_Command@check 004A                      __size_of_checksum 0028  
            __size_of_UART_TransmitMsg 0031             __size_of_XBAPI_HandleFrame 00BE  
                          _EEPROM_Read 0EC4                           ?_Timer1_Init 0071  
                        UART_Init@baud 0026                               ?___aldiv 0071  
                             ?___awdiv 0071               XBAPI_Command@atCmdLength 004D  
               ??_timer1_poll_delay_ms 007C                            ??_UART_Init 0028  
                    UART_TransmitMsg@i 0077                         _CRC16_Generate 0FD3  
                    __size_of_pulseLed 0011                          UART_Receive@i 0077  
                         checksum@addr 0075                               _ADC_Read 0600  
                          ADC_Read@res 002B                            ADC_Read@sum 0034  
                     __CFG_WDTE$SWDTEN 0000                     _UART_ReceiveMsgTmo 050A  
                       __size_of_sleep 0018                          ?_CRC16_Update 0070  
                            checksum@i 0078                        ___aldiv@divisor 0071  
                      ___aldiv@counter 0020                    ?_UART_ReceiveMsgTmo 0020  
                       ___wmul@product 0075                        ??_XBAPI_Command 0047  
                    ?_doChecksumVerify 0071                              clear_ram0 0DB4  
                    _CRC16_Update4Bits 064B                            ??_XBee_Wake 007C  
                         _intervalData 006B                          ?_XBee_Disable 0070  
                  UART_TransmitMsg@len 0072                     ??_doChecksumVerify 0074  
                        _UART_Transmit 0DBA                               _PIR1bits 0011  
                             _PIR2bits 0012                     ?_CRC16_Update4Bits 0070  
               __end_of_CRC16_Generate 1000                           EEPROM_Read@i 0077  
                  ??_CRC16_Update4Bits 0071                   ??_UART_ReceiveMsgTmo 0027  
                           _ADCON0bits 009D                             _ADCON1bits 009E  
                    ___wmul@multiplier 0071                        UART_Receive@tmo 0071  
      timer1_poll_delay@tmr1_turned_on 0020                         ??_CRC16_Update 0079  
                      _calibrationData 00E8                         checksum@length 0071  
                           _ADC_Enable 068E              __end_of_CRC16_Update4Bits 068E  
                       ??_XBee_Disable 0071                             _EECON1bits 0195  
                   XBAPI_Transmit@data 003D                             _CRC16_High 007C  
                       ?_UART_Transmit 0070                             _CRC16_Init 0DC3  
                __size_of_UART_Receive 0058                        ?_CRC16_Generate 0020  
                     __size_of___aldiv 0082                        CRC16_Generate@i 0023  
                     __size_of___awdiv 0053             UART_ReceiveMsgTmo@end_char 0022  
                     _CRC16_LookupHigh 00A0                XBAPI_HandleFrame@do_tmo 0030  
              XBAPI_HandleFrame@packet 0036                               _apiFrame 0120  
                             _checksum 0F2B         SendReport@thermistorResistance 004C  
                         ?_ADC_ReadOne 0021                               __ptext10 0DEE  
                             __ptext11 0E31                               __ptext20 064B  
                             __ptext12 0E69                               __ptext21 0DC3  
                             __ptext13 0DA8                             _T1GCONbits 0019  
                             __ptext30 0FA6                               __ptext22 068E  
                             __ptext14 0E86                               __ptext31 050A  
                             __ptext23 0297                               __ptext15 070E  
                             __ptext32 045C                               __ptext24 01E7  
                             __ptext16 03DA                               __ptext33 0F7B  
                             __ptext25 07D9                               __ptext17 0E19  
                             __ptext34 0E4C                               __ptext26 0F2B  
                             __ptext18 0FD3                               __ptext35 0EC4  
                             __ptext27 07A8                               __ptext19 0DCD  
                             __ptext36 0DDD                               __ptext28 0DBA  
                             __ptext37 06CE                               __ptext29 0129  
                             __ptext38 0DA5                               __ptext39 0E03  
                     _UART_TransmitMsg 07A8                          ?_EEPROM_Write 0071  
                SendReport@thermRes25C 004E                           sleep@seconds 0071  
                        __size_of_main 0118                   XBAPI_HandleFrame@tmo 0039  
                         _UART_Receive 045C   __end_of_SendReceiverBroadcastRequest 0F07  
__size_of_SendReceiverBroadcastRequest 0022           _SendReceiverBroadcastRequest 0EE5  
                             _tmr1_err 0069                             _RC1STAbits 019D  
                 __size_of_Timer1_Init 0016                               _pulseLed 0DDD  
             main@thermistorResistance 005A                               main@argc 0055  
                             main@argv 0057                             XBee_Wake@i 002F  
                          _OSCSTATbits 009A                  SendReport@topResValue 0052  
                        ??_XBee_Enable 007C                               memcpy@d1 0071  
                             memcpy@s1 0073                __size_of_XBAPI_Transmit 0096  
                             memset@p1 0076              XBAPI_HandleFrame@expected 002E  
                       ??_EEPROM_Write 0074                               intlevel1 0000  
                          ?_ADC_Enable 0071             __size_of_CRC16_Update4Bits 0043  
                      ??_UART_Transmit 0071                           ?_EEPROM_Read 0071  
                          ?_CRC16_Init 0070                     EEPROM_Read@address 0076  
        ?_SendReceiverBroadcastRequest 0070                     ADC_ReadOne@channel 0024  
                 __end_of_CRC16_Update 0DDD                        swap_endian_32@n 0071  
                      swap_endian_32@r 0075                        CRC16_Update@val 007A  
                     XBAPI_Transmit@id 0040                     ADC_Enable@port_pin 0071  
                      _xbee_reset_flag 006A                   __end_of_XBee_Disable 0DAB  
                         ___aldiv@sign 0021                             _WDTCONbits 0097  
                           _TX1STAbits 019E                      EEPROM_Read@length 0072  
            timer1_poll_delay@division 0079                __size_of_Timer1_Disable 0003  
                  __end_of_XBee_Enable 0EA4                      ADC_ReadOne@result 0025  
                     ADC_Enable@select 0074                        EEPROM_Read@data 0071  
                  EEPROM_Write@address 0075  
